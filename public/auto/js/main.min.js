(function() {
    var M = jQuery,
        r, ak, y = "[[mathquill internal data]]",
        af = Math.min,
        z = Math.max;

    function D() {}
    ak = D.prototype;
    ak.prev = 0;
    ak.next = 0;
    ak.parent = 0;
    ak.firstChild = 0;
    ak.lastChild = 0;
    ak.eachChild = function(al) {
        for (var am = this.firstChild; am; am = am.next) {
            if (al.call(this, am) === false) {
                break
            }
        }
        return this
    };
    ak.foldChildren = function(al, am) {
        this.eachChild(function(an) {
            al = am.call(this, al, an)
        });
        return al
    };
    ak.keydown = function(al) {
        return this.parent.keydown(al)
    };
    ak.textInput = function(al) {
        return this.parent.textInput(al)
    };

    function B() {}
    ak = B.prototype = new D;
    ak.init = function(ao, an, am, ap) {
        var al = this;
        if (ao) {
            al.cmd = ao
        }
        if (an) {
            al.html_template = an
        }
        if (am) {
            al.text_template = am
        }
        al.jQ = M(al.html_template[0]).data(y, {
            cmd: al
        });
        al.initBlocks(ap)
    };
    ak.initBlocks = function(ap) {
        var al = this;
        if (al.html_template.length === 1) {
            al.firstChild = al.lastChild = al.jQ.data(y).block = (ap && ap.blockify()) || new u;
            al.firstChild.parent = al;
            al.firstChild.jQ = al.jQ.append(al.firstChild.jQ);
            return
        }
        var aq, ao, an = al.html_template.length;
        this.firstChild = aq = ao = (ap && ap.blockify()) || new u;
        aq.parent = al;
        aq.jQ = M(al.html_template[1]).data(y, {
            block: aq
        }).append(aq.jQ).appendTo(al.jQ);
        aq.blur();
        for (var am = 2; am < an; am += 1) {
            aq = new u;
            aq.parent = al;
            aq.prev = ao;
            ao.next = aq;
            ao = aq;
            aq.jQ = M(al.html_template[am]).data(y, {
                block: aq
            }).appendTo(al.jQ);
            aq.blur()
        }
        al.lastChild = aq
    };
    ak.latex = function() {
        return this.foldChildren(this.cmd, function(al, am) {
            return al + "{" + (am.latex() || " ") + "}"
        })
    };
    ak.text_template = [""];
    ak.text = function() {
        var al = 0;
        return this.foldChildren(this.text_template[al], function(an, ao) {
            al += 1;
            var am = ao.text();
            if (an && this.text_template[al] === "(" && am[0] === "(" && am.slice(-1) === ")") {
                return an + am.slice(1, -1) + this.text_template[al]
            }
            return an + ao.text() + (this.text_template[al] || "")
        })
    };
    ak.insertAt = function(ao) {
        var an = this;
        an.parent = ao.parent;
        an.next = ao.next;
        an.prev = ao.prev;
        if (ao.prev) {
            ao.prev.next = an
        } else {
            ao.parent.firstChild = an
        }
        if (ao.next) {
            ao.next.prev = an
        } else {
            ao.parent.lastChild = an
        }
        ao.prev = an;
        an.jQ.insertBefore(ao.jQ);
        an.respace();
        if (an.next) {
            an.next.respace()
        }
        if (an.prev) {
            an.prev.respace()
        }
        an.placeCursor(ao);
        ao.redraw();
        if (an.cmd == "\\matrixmid ") {
            var am = this.parent;
            while (am && am.cmd != "\\left(") {
                am = am.parent
            }
            if (am) {
                var al = am.blockjQ.outerHeight() / +am.blockjQ.css("fontSize").slice(0, -2);
                N(this.jQ, af(1 + 0.2 * (al - 1), 1.2), al * 0.98);
                this.jQ.addClass("paren")
            }
        }
    };
    ak.respace = M.noop;
    ak.placeCursor = function(al) {
        al.appendTo(this.foldChildren(this.firstChild, function(am, an) {
            return am.isEmpty() ? am : an
        }))
    };
    ak.precedence = 0;
    ak.isEmpty = function() {
        return this.foldChildren(true, function(al, am) {
            return al && am.isEmpty()
        })
    };
    ak.remove = function() {
        var al = this,
            ao = al.prev,
            an = al.next,
            am = al.parent;
        if (ao) {
            ao.next = an
        } else {
            am.firstChild = an
        }
        if (an) {
            an.prev = ao
        } else {
            am.lastChild = ao
        }
        al.jQ.remove();
        return al
    };

    function U(am, al, an) {
        this.init(am, [al], [an || (am && am.length > 1 ? am.slice(1) : am)])
    }
    ak = U.prototype = new B;
    ak.initBlocks = M.noop;
    ak.latex = function() {
        return this.cmd
    };
    ak.text = function() {
        return this.text_template
    };
    ak.placeCursor = M.noop;
    ak.isEmpty = function() {
        return true
    };

    function u() {}
    ak = u.prototype = new D;
    ak.latex = function() {
        return this.foldChildren("", function(al, am) {
            return al + am.latex()
        })
    };
    ak.text = function() {
        return this.firstChild === this.lastChild ? this.firstChild.text() : this.foldChildren("(", function(al, am) {
            return al + am.text()
        }) + ")"
    };
    ak.isEmpty = function() {
        return this.firstChild === 0 && this.lastChild === 0
    };
    ak.focus = function() {
        this.jQ.addClass("hasCursor");
        if (this.isEmpty()) {
            this.jQ.removeClass("empty")
        }
        return this
    };
    ak.blur = function() {
        this.jQ.removeClass("hasCursor");
        if (this.isEmpty()) {
            this.jQ.addClass("empty")
        }
        return this
    };

    function W(an, ao, am) {
        if (!arguments.length) {
            return
        }
        var al = this;
        al.parent = an;
        al.prev = ao || 0;
        al.next = am || 0;
        al.jQinit(al.fold(M(), function(ap, aq) {
            return aq.jQ.add(ap)
        }))
    }
    ak = W.prototype;
    ak.remove = B.prototype.remove;
    ak.jQinit = function(al) {
        this.jQ = al
    };
    ak.each = function(am) {
        for (var al = this.prev.next || this.parent.firstChild; al !== this.next; al = al.next) {
            if (am.call(this, al) === false) {
                break
            }
        }
        return this
    };
    ak.fold = function(al, am) {
        this.each(function(an) {
            al = am.call(this, al, an)
        });
        return al
    };
    ak.latex = function() {
        return this.fold("", function(am, al) {
            return am + al.latex()
        })
    };
    ak.blockify = function() {
        var al = this,
            aq = al.prev,
            ao = al.next,
            an = al.parent,
            ar = new u,
            ap = ar.firstChild = aq.next || an.firstChild,
            am = ar.lastChild = ao.prev || an.lastChild;
        if (aq) {
            aq.next = ao
        } else {
            an.firstChild = ao
        }
        if (ao) {
            ao.prev = aq
        } else {
            an.lastChild = aq
        }
        ap.prev = al.prev = 0;
        am.next = al.next = 0;
        al.parent = ar;
        al.each(function(at) {
            at.parent = ar
        });
        ar.jQ = al.jQ;
        return ar
    };

    function ab(au, az, ay, aA) {
        var aC = au.contents().detach();
        if (!ay) {
            au.addClass("mathquill-rendered-math")
        }
        az.jQ = au.data(y, {
            block: az,
            revert: function() {
                au.empty().unbind(".mathquill").removeClass("mathquill-rendered-math mathquill-editable mathquill-textbox").append(aC)
            }
        });
        var ar = az.cursor = new H(az);
        az.renderLatex(aC.text());
        var aJ = az.textarea = M('<span class="textarea"><textarea></textarea></span>'),
            ax = aJ.children();
        var am;
        az.selectionChanged = function() {
            if (am === r) {
                am = setTimeout(aq)
            }
            k(au[0])
        };

        function aq() {
            am = r;
            var aM = ar.selection ? ar.selection.latex() : "";
            ax.val(aM);
            if (aM) {
                if (ax[0].select) {
                    ax[0].select()
                } else {
                    if (document.selection) {
                        var aL = ax[0].createTextRange();
                        aL.expand("textedit");
                        aL.select()
                    }
                }
            }
        }
        au.bind("selectstart.mathquill", function(aL) {
            if (aL.target !== ax[0]) {
                aL.preventDefault()
            }
            aL.stopPropagation()
        });
        var aK = 0,
            aE = ar.blink,
            ao, an = 0;
        au.bind("mousedown.mathquill", function(aL) {
            setTimeout(function() {
                ax.focus()
            });
            ar.blink = M.noop;
            ar.seek(M(aL.target), aL.pageX, aL.pageY);
            if (!aA) {
                au.prepend(aJ)
            }
            if (ar.parent === aK.parent && ar.prev === aK.prev) {
                an += 1
            } else {
                an = 1
            }
            clearTimeout(ao);
            ao = setTimeout(function() {
                an = 0
            }, 500);
            if (an === 3) {
                an = 0;
                ar.clearSelection().appendTo(az);
                while (ar.prev) {
                    ar.selectLeft()
                }
            } else {
                if (an === 2) {
                    ar.selectWord()
                } else {
                    aK = new W(ar.parent, ar.prev, ar.next);
                    au.mousemove(aG);
                    M(document).mousemove(aF)
                }
            }
            M(document).mouseup(aB);
            return false
        });

        function aG(aL) {
            ar.seek(M(aL.target), aL.pageX, aL.pageY);
            if (ar.prev !== aK.prev || ar.parent !== aK.parent) {
                an = 0;
                ar.selectFrom(aK)
            }
            return false
        }

        function aF(aL) {
            delete aL.target;
            return aG(aL)
        }

        function aB(aL) {
            ar.blink = aE;
            if (!ar.selection) {
                if (aA) {
                    ar.show()
                } else {
                    aJ.detach()
                }
            }
            au.unbind("mousemove", aG);
            M(document).unbind("mousemove", aF).unbind("mouseup", aB)
        }
        if (!aA) {
            au.bind("cut paste", false).bind("copy", aq).prepend('<span class="selectable"></span>');
            ax.blur(function() {
                ar.clearSelection();
                setTimeout(aH)
            });

            function aH() {
                aJ.detach()
            }
            return
        }
        au.prepend(aJ);
        au.addClass("mathquill-editable");
        if (ay) {
            au.addClass("mathquill-textbox")
        }
        ax.focus(function(aL) {
            az.hidePlaceholder();
            if (!ar.parent) {
                ar.appendTo(az)
            }
            ar.parent.jQ.addClass("hasCursor");
            if (ar.selection) {
                ar.selection.jQ.removeClass("blur");
                setTimeout(az.selectionChanged)
            } else {
                ar.show()
            }
            aL.stopPropagation()
        }).blur(function(aL) {
            ar.hide().parent.blur();
            if (ar.selection) {
                ar.selection.jQ.addClass("blur")
            }
            az.showPlaceholder();
            aL.stopPropagation()
        });
        au.bind("focus.mathquill blur.mathquill", function(aL) {
            ax.trigger(aL)
        }).blur();
        au.bind("cut", function(aL) {
            aq();
            if (ar.selection) {
                setTimeout(function() {
                    ar.deleteSelection();
                    ar.redraw()
                })
            }
            aL.stopPropagation()
        }).bind("copy", function(aL) {
            aq();
            at = true;
            aL.stopPropagation()
        }).bind("paste", function(aL) {
            at = true;
            setTimeout(aw);
            aL.stopPropagation()
        });

        function aw() {
            var aL = ax.val();
            if (aL.slice(0, 1) === "$" && aL.slice(-1) === "$") {
                aL = aL.slice(1, -1)
            }
            aL = aL.replace(/ /g, "#");
            ar.writeLatex(aL).show();
            ax.val("")
        }
        var ap, av, al, at = false;
        au.bind("keydown.mathquill", function(aL) {
            ap = aL;
            av = true;
            if (ar.parent.keydown(aL) === false) {
                aL.preventDefault()
            }
        }).bind("keypress.mathquill", function(aL) {
            if (av) {
                av = false
            } else {
                if (al !== aL.which) {
                    return
                } else {
                    ar.parent.keydown(ap)
                }
            }
            al = aL.which;
            if (am !== r) {
                clearTimeout(am)
            }
            at = false;
            if (aD() === "iOS") {
                setTimeout(aI, 100)
            } else {
                setTimeout(aI)
            }
        });

        function aD() {
            var aL = navigator.userAgent || navigator.vendor || window.opera;
            if (/android/i.test(aL)) {
                return "Android"
            }
            if (/iPad|iPhone|iPod/.test(aL) && !window.MSStream) {
                return "iOS"
            }
            return "unknown"
        }

        function aI() {
            if (at) {
                return
            }
            var aM = ax.val();
            if (aM) {
                ax.val("");
                for (var aL = 0; aL < aM.length; aL += 1) {
                    ar.parent.textInput(aM.charAt(aL))
                }
            } else {
                if (ar.selection || am !== r) {
                    aq()
                }
            }
        }
    }

    function l() {}
    ak = l.prototype = new u;
    ak.latex = function() {
        return u.prototype.latex.call(this).replace(/(\\[a-z]+) (?![a-z])/ig, "$1")
    };
    ak.text = function() {
        return this.foldChildren("", function(al, am) {
            return al + am.text()
        })
    };
    ak.renderLatex = function(al) {
        this.jQ.children().slice(1).remove();
        this.firstChild = this.lastChild = 0;
        this.cursor.appendTo(this).writeLatex(al);
        this.blur()
    };
    ak.setPlaceholder = function(al) {
        this.placeholder = al
    };
    ak.showPlaceholder = function() {
        var al = this;
        if (al.placeholder && al.isEmpty()) {
            al.cursor.writeLatex(al.placeholder);
            al.blur();
            al.firstChild = al.lastChild = 0;
            al.jQ.addClass("placeholder")
        }
    };
    ak.hidePlaceholder = function() {
        var al = this;
        if (al.placeholder && al.isEmpty()) {
            al.jQ.removeClass("placeholder").children().slice(1).remove();
            al.cursor.appendTo(al)
        }
    };
    ak.keydown = function(ao) {
        ao.ctrlKey = ao.ctrlKey || ao.metaKey;
        switch ((ao.originalEvent && ao.originalEvent.keyIdentifier) || ao.which) {
            case 8:
            case "Backspace":
            case "U+0008":
                if (ao.ctrlKey) {
                    while (this.cursor.prev || this.cursor.selection) {
                        this.cursor.backspace()
                    }
                } else {
                    this.cursor.backspace()
                }
                break;
            case 27:
            case "Esc":
            case "U+001B":
            case 9:
            case "Tab":
            case "U+0009":
                if (ao.ctrlKey) {
                    break
                }
                var am = this.cursor.parent;
                if (ao.shiftKey) {
                    if (am === this.cursor.root) {
                        return this.skipTextInput = true
                    } else {
                        if (am.prev) {
                            this.cursor.appendTo(am.prev)
                        } else {
                            this.cursor.insertBefore(am.parent)
                        }
                    }
                } else {
                    if (am === this.cursor.root) {
                        return this.skipTextInput = true
                    } else {
                        if (am.next) {
                            this.cursor.prependTo(am.next)
                        } else {
                            this.cursor.insertAfter(am.parent)
                        }
                    }
                }
                this.cursor.clearSelection();
                break;
            case 13:
            case "Enter":
                this.skipTextInput = true;
                return true;
            case 35:
            case "End":
                if (ao.shiftKey) {
                    while (this.cursor.next || (ao.ctrlKey && this.cursor.parent !== this)) {
                        this.cursor.selectRight()
                    }
                } else {
                    this.cursor.clearSelection().appendTo(ao.ctrlKey ? this : this.cursor.parent)
                }
                break;
            case 36:
            case "Home":
                if (ao.shiftKey) {
                    while (this.cursor.prev || (ao.ctrlKey && this.cursor.parent !== this)) {
                        this.cursor.selectLeft()
                    }
                } else {
                    this.cursor.clearSelection().prependTo(ao.ctrlKey ? this : this.cursor.parent)
                }
                break;
            case 37:
            case "Left":
                if (ao.ctrlKey && this.cursor.prev) {
                    var al = ao.shiftKey ? "selectLeft" : "hopLeft";
                    while (this.cursor.prev && this.cursor.prev.precedence !== 0) {
                        this.cursor[al]()
                    }
                    while (this.cursor.prev && this.cursor.prev.precedence === 0) {
                        this.cursor[al]()
                    }
                    if (!ao.shiftKey) {
                        this.cursor.show()
                    }
                    break
                }
                if (ao.shiftKey) {
                    this.cursor.selectLeft()
                } else {
                    this.cursor.moveLeft()
                }
                break;
            case 38:
            case "Up":
                if (ao.ctrlKey) {
                    break
                }
                if (ao.shiftKey) {
                    if (this.cursor.prev) {
                        while (this.cursor.prev) {
                            this.cursor.selectLeft()
                        }
                    } else {
                        this.cursor.selectLeft()
                    }
                } else {
                    if (this.cursor.parent.prev) {
                        this.cursor.clearSelection().appendTo(this.cursor.parent.prev)
                    } else {
                        if (this.cursor.prev) {
                            this.cursor.clearSelection().prependTo(this.cursor.parent)
                        } else {
                            if (this.cursor.parent !== this) {
                                this.cursor.clearSelection().insertBefore(this.cursor.parent.parent)
                            }
                        }
                    }
                }
                break;
            case 39:
            case "Right":
                if (ao.ctrlKey && this.cursor.next) {
                    var an = ao.shiftKey ? "selectRight" : "hopRight";
                    while (this.cursor.next && this.cursor.next.precedence === 0) {
                        this.cursor[an]()
                    }
                    while (this.cursor.next && this.cursor.next.precedence !== 0) {
                        this.cursor[an]()
                    }
                    if (!ao.shiftKey) {
                        this.cursor.show()
                    }
                    break
                }
                if (ao.shiftKey) {
                    this.cursor.selectRight()
                } else {
                    this.cursor.moveRight()
                }
                break;
            case 40:
            case "Down":
                if (ao.ctrlKey) {
                    break
                }
                if (ao.shiftKey) {
                    if (this.cursor.next) {
                        while (this.cursor.next) {
                            this.cursor.selectRight()
                        }
                    } else {
                        this.cursor.selectRight()
                    }
                } else {
                    if (this.cursor.parent.next) {
                        this.cursor.clearSelection().prependTo(this.cursor.parent.next)
                    } else {
                        if (this.cursor.next) {
                            this.cursor.clearSelection().appendTo(this.cursor.parent)
                        } else {
                            if (this.cursor.parent !== this) {
                                this.cursor.clearSelection().insertAfter(this.cursor.parent.parent)
                            }
                        }
                    }
                }
                break;
            case 46:
            case "Del":
            case "U+007F":
                if (ao.ctrlKey) {
                    while (this.cursor.next || this.cursor.selection) {
                        this.cursor.deleteForward()
                    }
                } else {
                    this.cursor.deleteForward()
                }
                break;
            case 65:
            case "A":
            case "U+0041":
                if (ao.ctrlKey && !ao.shiftKey && !ao.altKey) {
                    if (this !== this.cursor.root) {
                        return this.parent.keydown(ao)
                    }
                    this.cursor.clearSelection().appendTo(this);
                    while (this.cursor.prev) {
                        this.cursor.selectLeft()
                    }
                    break
                }
            default:
                this.skipTextInput = false;
                return true
        }
        this.skipTextInput = true;
        return false
    };
    ak.textInput = function(al) {
        if (!this.skipTextInput) {
            this.cursor.write(al)
        }
    };

    function ad(al) {
        this.init("$");
        this.firstChild.cursor = al;
        this.firstChild.textInput = function(am) {
            if (this.skipTextInput) {
                return
            }
            if (am !== "$" || al.parent !== this) {
                al.write(am)
            } else {
                if (this.isEmpty()) {
                    al.insertAfter(this.parent).backspace().insertNew(new Z("\\$", "$")).show()
                } else {
                    if (!al.next) {
                        al.insertAfter(this.parent)
                    } else {
                        if (!al.prev) {
                            al.insertBefore(this.parent)
                        } else {
                            al.write(am)
                        }
                    }
                }
            }
        }
    }
    ak = ad.prototype = new B;
    ak.html_template = ['<span class="mathquill-rendered-math"></span>'];
    ak.initBlocks = function() {
        this.firstChild = this.lastChild = this.jQ.data(y).block = new l;
        this.firstChild.parent = this;
        this.firstChild.jQ = this.jQ
    };
    ak.latex = function() {
        return "$" + this.firstChild.latex() + "$"
    };

    function R() {}
    ak = R.prototype = new u;
    ak.renderLatex = function(aq) {
        var am = this,
            ar = am.cursor;
        am.jQ.children().slice(1).remove();
        am.firstChild = am.lastChild = 0;
        ar.show().appendTo(am);
        aq = aq.match(/(?:\\\$|[^$])+|\$(?:\\\$|[^$])*\$|\$(?:\\\$|[^$])*$/g) || "";
        for (var ap = 0; ap < aq.length; ap += 1) {
            var ao = aq[ap];
            if (ao[0] === "$") {
                if (ao[-1 + ao.length] === "$" && ao[-2 + ao.length] !== "\\") {
                    ao = ao.slice(1, -1)
                } else {
                    ao = ao.slice(1)
                }
                var al = new ad(ar);
                ar.insertNew(al);
                al.firstChild.renderLatex(ao);
                ar.show().insertAfter(al)
            } else {
                for (var an = 0; an < ao.length; an += 1) {
                    this.cursor.insertNew(new Z(ao[an]))
                }
            }
        }
    };
    ak.keydown = l.prototype.keydown;
    ak.textInput = function(al) {
        if (this.skipTextInput) {
            return
        }
        this.cursor.deleteSelection();
        if (al === "$") {
            this.cursor.insertNew(new ad(this.cursor))
        } else {
            this.cursor.insertNew(new Z(al))
        }
    };
    var x = {},
        I = {};
    var N, k = M.noop,
        ac = document.createElement("div"),
        ai = ac.style,
        E = {
            transform: 1,
            WebkitTransform: 1,
            MozTransform: 1,
            OTransform: 1,
            msTransform: 1
        },
        a;
    for (var v in E) {
        if (v in ai) {
            a = v;
            break
        }
    }
    if (a) {
        N = function(am, al, an) {
            am.css(a, "scale(" + al + "," + an + ")")
        }
    } else {
        if ("filter" in ai) {
            k = function(al) {
                al.className = al.className
            };
            N = function(ao, aq, ap) {
                var ar = ap > aq ? "M11=" : "M22=",
                    am = z(aq, ap),
                    an = af(aq, ap);
                an /= (1 + (am - 1) / 2);
                if (ao.children().length === 0) {
                    ao.wrapInner("<span></span>")
                }
                ao.addClass("matrixed").css({
                    fontSize: am + "em",
                    marginTop: "-.175em"
                });
                var al = ao.children().css({
                    filter: "progid:DXImageTransform.Microsoft.Matrix(" + ar + an + ",SizingMethod='auto expand')"
                });

                function au() {
                    ao.css("marginRight", (1 + al.width() * (an - 1)) / an + "px")
                }
                au();
                var at = setInterval(au);
                M(window).load(function() {
                    clearTimeout(at);
                    au()
                })
            }
        } else {
            N = function(am, al, an) {
                am.css("fontSize", z(al, an) + "em")
            }
        }
    }

    function q(al, am) {
        am.prototype = al.prototype;
        return am
    }

    function f(al) {
        var am = Array.prototype.slice.call(arguments, 1);
        return q(al, function() {
            al.apply(this, Array.prototype.concat.apply(am, arguments))
        })
    }

    function G(am, al, an) {
        this.init(am, [al], r, an)
    }
    q(B, G);
    I.mathrm = f(G, "\\mathrm", '<span class="roman font"></span>');
    I.mathit = f(G, "\\mathit", '<i class="font"></i>');
    I.mathbf = f(G, "\\mathbf", '<b class="font"></b>');
    I.mathsf = f(G, "\\mathsf", '<span class="sans-serif font"></span>');
    I.mathtt = f(G, "\\mathtt", '<span class="monospace font"></span>');
    I.underline = f(G, "\\underline", '<span class="underline"></span>');

    function S(am, al, an) {
        this.init(am, ['<span class="diacritic"><span class="diacritic-char">' + al + "&nbsp;</span></span>", "<span></span>"], r, an)
    }
    ak = S.prototype = new B;
    ak.redraw = ak._redraw = function() {
        var am = !this.firstChild.isEmpty();
        this.firstChild.eachChild(function(ao) {
            return am = am && (ao.cmd in {
                a: 1,
                c: 1,
                e: 1,
                g: 1,
                m: 1,
                n: 1,
                o: 1,
                p: 1,
                q: 1,
                r: 1,
                s: 1,
                u: 1,
                v: 1,
                w: 1,
                x: 1,
                y: 1,
                z: 1
            })
        });
        this.jQ.children(":first").toggleClass("lowercase", am);
        var an = !am && this.firstChild.firstChild === this.lastChild.lastChild && this.firstChild.firstChild.cmd === "t";
        this.jQ.children(":first").toggleClass("only-lowercase-t", an);
        if (!am) {
            var al = true;
            this.firstChild.eachChild(function(ao) {
                return al = al && (ao instanceof U) && !(ao instanceof t)
            })
        } else {
            al = true
        }
        this.jQ.toggleClass("block", !al)
    };
    if (M.browser.webkit) {
        ak.redraw = function() {
            this._redraw();
            this.webkitForceRedrawToggle = !this.webkitForceRedrawToggle;
            this.jQ.children(":first").css("display", this.webkitForceRedrawToggle ? "inline-block" : "")
        }
    }
    I.grave = f(S, "\\grave", "&#768;");
    I.acute = f(S, "\\acute", "&#769;");
    I.hat = I.circumflex = f(S, "\\hat", "&#770;");
    I.tilde = f(S, "\\tilde", "&#771;");
    I.bar = f(S, "\\bar", "&#773;");
    I.breve = f(S, "\\breve", "&#774;");
    I.dot = f(S, "\\dot", "&#775;");
    I.ddot = f(S, "\\ddot", "&#776;");
    I.check = I.caron = f(S, "\\ddot", "&#780;");
    I.dddot = f(S, "\\dddot", "&#8411;");
    I.ddddot = f(S, "\\ddddot", "&#8412;");
    I.vec = f(S, "\\vec", "&#8407;");
    I.overline = q(S, function(al) {
        G.call(this, "\\overline", '<span class="diacritic"><span class="overline"></span></span>', al)
    });

    function j(ao, an, am, al, ap) {
        this.stretchFactor = al;
        this.init(ao, ['<span class="diacritic"><span class="' + an + '">' + am + "&nbsp;</span></span>", "<span></span>"], r, ap)
    }
    ak = j.prototype = new S;
    ak.redraw = function() {
        this._redraw();
        var al = z(1, this.stretchFactor * this.jQ.innerWidth() / +this.jQ.css("fontSize").slice(0, -2));
        N(this.jQ.children(":first"), al, 1.2)
    };
    I.widehat = f(j, "\\widehat", "widehat", "&#770;", 2.95);
    I.overleftarrow = f(j, "\\overleftarrow", "overarrow", "&#8406;", 2);
    I.overrightarrow = f(j, "\\overrightarrow", "overarrow", "&#8407;", 2);
    I.overarc = f(j, "\\overarc", "overarc", "&#x25E0;", 1.5);

    function ah(am, al, ao, an) {
        this.init(am, [al], [ao], an)
    }
    ak = ah.prototype = new B;
    ak.latex = function() {
        var al = this.firstChild.latex();
        if (al.length === 1) {
            return this.cmd + al
        } else {
            return this.cmd + "{" + (al || " ") + "}"
        }
    };
    ak.redraw = function() {
        if (this.prev) {
            this.prev.respace()
        }
        if (!(this.prev instanceof ah)) {
            this.respace();
            if (this.next && !(this.next instanceof ah)) {
                this.next.respace()
            }
        }
    };
    ak.respace = function() {
        if (this.prev.cmd === "\\int " || (this.prev instanceof ah && this.prev.cmd != this.cmd && this.prev.prev && this.prev.prev.cmd === "\\int ")) {
            if (!this.limit) {
                this.limit = true;
                this.jQ.addClass("limit")
            }
        } else {
            if (this.limit) {
                this.limit = false;
                this.jQ.removeClass("limit")
            }
        }
        this.respaced = this.prev instanceof ah && this.prev.cmd != this.cmd && !this.prev.respaced;
        if (this.respaced) {
            var am = +this.jQ.css("fontSize").slice(0, -2),
                al = this.prev.jQ.outerWidth();
            thisWidth = this.jQ.outerWidth();
            if (this.cmd === "_" && this.prev.cmd === "^" && this.prev.prev.cmd === "\\left[") {
                this.jQ.css({
                    left: (this.limit && this.cmd === "_" ? -0.25 : 0) - al / am + "em",
                    marginRight: "",
                    verticalAlign: "-0.8em"
                })
            } else {
                this.jQ.css({
                    left: (this.limit && this.cmd === "_" ? -0.25 : 0) - al / am + "em",
                    marginRight: 0.1 - af(thisWidth, al) / am + "em"
                })
            }
        } else {
            if (this.prev.cmd === "\\left[" && this.cmd === "_") {
                this.jQ.css({
                    marginRight: "",
                    verticalAlign: "-0.8em"
                })
            } else {
                if (this.limit && this.cmd === "_") {
                    this.jQ.css({
                        left: "-.25em",
                        marginRight: ""
                    })
                } else {
                    this.jQ.css({
                        left: "",
                        marginRight: ""
                    })
                }
            }
        }
        if (this.prev instanceof t) {
            this.precedence = this.prev.precedence
        }
        if (this.respaced && this.prev.prev instanceof t) {
            this.precedence = this.prev.prev.precedence
        } else {
            delete this.precedence
        }
        if (this.next instanceof ah) {
            this.next.respace()
        }
        return this
    };
    I.subscript = I._ = q(ah, function(al) {
        ah.call(this, "_", "<sub></sub>", "_", al)
    });
    I.superscript = I.supscript = I["^"] = q(ah, function(al) {
        ah.call(this, "^", "<sup></sup>", "**", al)
    });

    function X(al) {
        this.init("\\frac", r, r, al);
        this.jQ.append('<span style="display:inline-block;width:0">&nbsp;</span>')
    }
    ak = X.prototype = new B;
    ak.html_template = ['<span class="fraction"></span>', '<span class="numerator"></span>', '<span class="denominator"></span>'];
    ak.text_template = ["(", "/", ")"];
    I.frac = I.dfrac = I.cfrac = I.fraction = X;

    function h() {
        X.apply(this, arguments)
    }
    ak = h.prototype = new X;
    ak.placeCursor = function(am) {
        if (this.firstChild.isEmpty()) {
            var al = this.prev;
            while (al && al.precedence === 0 && al.cmd != "\\int " && al.cmd != "\\lim " && al.cmd != "\\sum " && al.cmd != "," && al.cmd != "^" && al.cmd != "_") {
                al = al.prev
            }
            if (al !== this.prev) {
                var an = new W(this.parent, al, this).blockify();
                an.jQ = this.firstChild.jQ.empty().removeClass("empty").append(an.jQ).data(y, {
                    block: an
                });
                an.next = this.lastChild;
                an.parent = this;
                this.firstChild = this.lastChild.prev = an;
                am.appendTo(this.lastChild)
            } else {
                am.appendTo(this.firstChild)
            }
        } else {
            am.appendTo(this.lastChild)
        }
    };
    I.over = x["/"] = h;

    function s(al) {
        this.init("\\sqrt", r, r, al)
    }
    ak = s.prototype = new B;
    ak.html_template = ['<span class="block"><span class="sqrt-prefix">&radic;</span></span>', '<span class="sqrt-stem"></span>'];
    ak.text_template = ["sqrt(", ")"];
    ak.redraw = function() {
        var al = this.lastChild.jQ;
        N(al.prev(), 1, al.innerHeight() / +al.css("fontSize").slice(0, -2) - 0.1)
    };
    I.sqrt = I["√"] = s;

    function F(al) {
        this.init("\\longdivision", r, r, al)
    }
    ak = F.prototype = new B;
    ak.html_template = ['<span class="block"><span class="sqrt-prefix longdivision">|</span></span>', '<span class="sqrt-stem"></span>'];
    ak.text_template = ["longdivision(", ")"];
    I.longdivision = F;

    function ag(al) {
        s.call(this, al);
        this.jQ = this.firstChild.jQ.detach().add(this.jQ)
    }
    ak = ag.prototype = new s;
    ak.html_template = ['<span class="block"><span class="sqrt-prefix">&radic;</span></span>', '<sup class="nthroot"></sup>', '<span class="sqrt-stem"></span>'];
    ak.text_template = ["sqrt[", "](", ")"];
    ak.latex = function() {
        return "\\sqrt[" + this.firstChild.latex() + "]{" + this.lastChild.latex() + "}"
    };
    I.nthroot = ag;

    function A(am, ap, an, al, ao) {
        this.init("\\left" + an, ['<span class="block"><span class="paren">' + am + '</span><span class="block"></span><span class="paren">' + ap + "</span></span>"], [am, ap], ao);
        this.end = "\\right" + al
    }
    ak = A.prototype = new B;
    ak.initBlocks = function(am) {
        this.firstChild = this.lastChild = (am && am.blockify()) || new u;
        this.firstChild.parent = this;
        this.firstChild.jQ = this.jQ.children(":eq(1)").data(y, {
            block: this.firstChild
        }).append(this.firstChild.jQ);
        var al = this.blockjQ = this.firstChild.jQ;
        this.bracketjQs = al.prev().add(al.next())
    };
    ak.latex = function() {
        return this.cmd + this.firstChild.latex() + this.end
    };
    ak.redraw = function() {
        var al = this.blockjQ.outerHeight() / +this.blockjQ.css("fontSize").slice(0, -2);
        N(this.bracketjQs, af(1 + 0.2 * (al - 1), 1.2), 1.05 * al)
    };
    I.lbrace = x["{"] = q(A, function(al) {
        A.call(this, "{", "}", "\\{", "\\}", al)
    });
    I.langle = I.lang = q(A, function(al) {
        A.call(this, "&lang;", "&rang;", "\\langle ", "\\rangle ", al)
    });

    function T(am, ap, an, al, ao) {
        A.apply(this, arguments)
    }
    ak = T.prototype = new A;
    ak.placeCursor = function(al) {
        if (!this.next && this.parent.parent && this.parent.parent.end === this.end && this.firstChild.isEmpty()) {
            al.backspace().insertAfter(this.parent.parent)
        } else {
            this.firstChild.blur();
            this.redraw()
        }
    };
    I.rbrace = x["}"] = q(T, function(al) {
        T.call(this, "{", "}", "\\{", "\\}", al)
    });
    I.rangle = I.rang = q(T, function(al) {
        T.call(this, "&lang;", "&rang;", "\\langle ", "\\rangle ", al)
    });

    function J(al, an, am) {
        A.call(this, al, an, al, an, am)
    }
    J.prototype = A.prototype;
    I.lparen = x["("] = q(J, function(al) {
        J.call(this, "(", ")", al)
    });
    I.lbrack = I.lbracket = x["["] = q(J, function(al) {
        J.call(this, "[", "]", al)
    });

    function L(al, an, am) {
        T.call(this, al, an, al, an, am)
    }
    L.prototype = T.prototype;
    I.rparen = x[")"] = q(L, function(al) {
        L.call(this, "(", ")", al)
    });
    I.rbrack = I.rbracket = x["]"] = q(L, function(al) {
        L.call(this, "[", "]", al)
    });

    function b(al) {
        J.call(this, "|", "|", al)
    }
    ak = b.prototype = new J;
    ak.placeCursor = function(al) {
        if (!this.next && this.parent.parent && this.parent.parent.end === this.end && this.firstChild.isEmpty()) {
            al.backspace().insertAfter(this.parent.parent)
        } else {
            al.appendTo(this.firstChild)
        }
    };
    I.lpipe = I.rpipe = x["|"] = b;

    function aa(al) {
        if (al instanceof W) {
            this.replacedText = al.remove().jQ.text()
        } else {
            if (typeof al === "string") {
                this.replacedText = al
            }
        }
        this.init()
    }
    ak = aa.prototype = new B;
    ak.cmd = "\\text";
    ak.html_template = ['<span class="text"></span>'];
    ak.text_template = ['"', '"'];
    ak.precedence = 0.25;
    ak.initBlocks = function() {
        this.firstChild = this.lastChild = this.jQ.data(y).block = new o;
        this.firstChild.parent = this;
        this.firstChild.jQ = this.jQ.append(this.firstChild.jQ)
    };
    ak.placeCursor = function(am) {
        (this.cursor = am).appendTo(this.firstChild);
        if (this.replacedText) {
            for (var al = 0; al < this.replacedText.length; al += 1) {
                this.write(this.replacedText.charAt(al))
            }
        }
    };
    ak.write = function(al) {
        this.cursor.insertNew(new Z(al))
    };
    ak.keydown = function(al) {
        if (!this.cursor.selection && ((al.which === 8 && !this.cursor.prev) || (al.which === 46 && !this.cursor.next))) {
            if (this.isEmpty()) {
                this.cursor.insertAfter(this)
            }
            return false
        }
        return this.parent.keydown(al)
    };
    ak.textInput = function(am) {
        this.cursor.deleteSelection();
        if (am !== "$") {
            this.write(am)
        } else {
            if (this.isEmpty()) {
                this.cursor.insertAfter(this).backspace().insertNew(new Z("\\$", "$"))
            } else {
                if (!this.cursor.next) {
                    this.cursor.insertAfter(this)
                } else {
                    if (!this.cursor.prev) {
                        this.cursor.insertBefore(this)
                    } else {
                        var al = new aa(new W(this.firstChild, this.cursor.prev));
                        al.placeCursor = function(an) {
                            this.prev = 0;
                            delete this.placeCursor;
                            this.placeCursor(an)
                        };
                        al.firstChild.focus = function() {
                            return this
                        };
                        this.cursor.insertAfter(this).insertNew(al);
                        al.prev = this;
                        this.cursor.insertBefore(al);
                        delete al.firstChild.focus
                    }
                }
            }
        }
    };

    function o() {}
    ak = o.prototype = new u;
    ak.blur = function() {
        this.jQ.removeClass("hasCursor");
        if (this.isEmpty()) {
            var al = this.parent,
                am = al.cursor;
            if (am.parent === this) {
                this.jQ.addClass("empty")
            } else {
                am.hide();
                al.remove();
                if (am.next === al) {
                    am.next = al.next
                } else {
                    if (am.prev === al) {
                        am.prev = al.prev
                    }
                }
                am.show().redraw()
            }
        }
        return this
    };
    ak.focus = function() {
        u.prototype.focus.call(this);
        var am = this.parent;
        if (am.next.cmd === am.cmd) {
            var ao = this,
                an = am.cursor,
                al = am.next.firstChild;
            al.eachChild(function(ap) {
                ap.parent = ao;
                ap.jQ.appendTo(ao.jQ)
            });
            if (this.lastChild) {
                this.lastChild.next = al.firstChild
            } else {
                this.firstChild = al.firstChild
            }
            al.firstChild.prev = this.lastChild;
            this.lastChild = al.lastChild;
            al.parent.remove();
            if (an.prev) {
                an.insertAfter(an.prev)
            } else {
                an.prependTo(this)
            }
            an.redraw()
        } else {
            if (am.prev.cmd === am.cmd) {
                var an = am.cursor;
                if (an.prev) {
                    am.prev.firstChild.focus()
                } else {
                    an.appendTo(am.prev.firstChild)
                }
            }
        }
        return this
    };
    x.$ = I.text = I.textnormal = I.textrm = I.textup = I.textmd = aa;

    function m(an, am) {
        function al() {
            aa.apply(this, arguments)
        }
        ak = al.prototype = new aa;
        ak.cmd = an;
        ak.html_template = [am];
        return al
    }
    I.em = I.italic = I.italics = I.emph = I.textit = I.textsl = m("\\textit", '<i class="text"></i>');
    I.strong = I.bold = I.textbf = m("\\textbf", '<b class="text"></b>');
    I.sf = I.textsf = m("\\textsf", '<span class="sans-serif text"></span>');
    I.tt = I.texttt = m("\\texttt", '<span class="monospace text"></span>');
    I.textsc = m("\\textsc", '<span style="font-variant:small-caps" class="text"></span>');
    I.uppercase = m("\\uppercase", '<span style="text-transform:uppercase" class="text"></span>');
    I.lowercase = m("\\lowercase", '<span style="text-transform:lowercase" class="text"></span>');
    I.linethrough = m("\\linethrough", '<span style="text-decoration:line-through red" class="text"></span>');

    function V(al) {
        this.init("\\");
        if (al) {
            this.replacedFragment = al.detach();
            this.isEmpty = function() {
                return false
            }
        }
    }
    ak = V.prototype = new B;
    ak.html_template = ['<span class="latex-command-input">\\</span>'];
    ak.text_template = ["\\"];
    ak.placeCursor = function(al) {
        this.cursor = al.appendTo(this.firstChild);
        if (this.replacedFragment) {
            this.jQ = this.jQ.add(this.replacedFragment.jQ.addClass("blur").bind("mousedown mousemove", function(am) {
                M(am.target = this.nextSibling).trigger(am);
                return false
            }).insertBefore(this.jQ))
        }
    };
    ak.latex = function() {
        return "\\" + this.firstChild.latex() + " "
    };
    ak.keydown = function(al) {
        if (al.which === 9 || al.which === 13) {
            this.renderCommand();
            return false
        }
        return this.parent.keydown(al)
    };
    ak.textInput = function(al) {
        if (al.match(/[a-z]/i)) {
            this.cursor.deleteSelection();
            this.cursor.insertNew(new Z(al));
            return
        }
        this.renderCommand();
        if (al === " " || (al === "\\" && this.firstChild.isEmpty())) {
            return
        }
        this.cursor.parent.textInput(al)
    };
    ak.renderCommand = function() {
        this.jQ = this.jQ.last();
        this.remove();
        if (this.next) {
            this.cursor.insertBefore(this.next)
        } else {
            this.cursor.appendTo(this.parent)
        }
        var am = this.firstChild.latex();
        if (am) {
            this.cursor.insertCmd(am, this.replacedFragment)
        } else {
            var al = new Z("\\backslash ", "\\");
            this.cursor.insertNew(al);
            if (this.replacedFragment) {
                this.replacedFragment.remove()
            }
        }
    };
    x["\\"] = V;

    function w(al) {
        this.init("\\twostack", r, r, al);
        this.jQ.wrapInner('<span class="array"></span>');
        this.blockjQ = this.jQ.children()
    }
    ak = w.prototype = new B;
    ak.html_template = ['<span class="block"></span>', "<span></span>", "<span></span>"];
    ak.text_template = ["twostack(", ",", ")"];
    ak.redraw = w.prototype.redraw;
    I.twostack = w;

    function K(al) {
        this.init("\\binom", r, r, al);
        this.jQ.wrapInner('<span class="array"></span>');
        this.blockjQ = this.jQ.children();
        this.bracketjQs = M('<span class="paren">(</span>').prependTo(this.jQ).add(M('<span class="paren">)</span>').appendTo(this.jQ))
    }
    ak = K.prototype = new B;
    ak.html_template = ['<span class="block"></span>', "<span></span>", "<span></span>"];
    ak.text_template = ["choose(", ",", ")"];
    ak.redraw = A.prototype.redraw;
    I.binom = I.binomial = K;

    function n() {
        K.apply(this, arguments)
    }
    ak = n.prototype = new K;
    ak.placeCursor = h.prototype.placeCursor;
    I.choose = n;

    function C(al) {
        this.init("\\vector", r, r, al)
    }
    ak = C.prototype = new B;
    ak.html_template = ['<span class="array"></span>', "<span></span>"];
    ak.latex = function() {
        return "\\begin{matrix}" + this.foldChildren([], function(al, am) {
            al.push(am.latex());
            return al
        }).join("\\\\ ") + "\\end{matrix}"
    };
    ak.text = function() {
        return "[" + this.foldChildren([], function(al, am) {
            al.push(am.text());
            return al
        }).join() + "]"
    };
    ak.placeCursor = function(al) {
        this.cursor = al.appendTo(this.firstChild)
    };
    ak.keydown = function(am) {
        var al = this.cursor.parent;
        if (al.parent === this) {
            if (am.which === 13) {
                var an = new u;
                an.parent = this;
                an.jQ = M("<span></span>").data(y, {
                    block: an
                }).insertAfter(al.jQ);
                if (al.next) {
                    al.next.prev = an
                } else {
                    this.lastChild = an
                }
                an.next = al.next;
                al.next = an;
                an.prev = al;
                this.cursor.appendTo(an).redraw();
                return false
            } else {
                if (am.which === 9 && !am.shiftKey && !al.next) {
                    if (al.isEmpty()) {
                        if (al.prev) {
                            this.cursor.insertAfter(this);
                            delete al.prev.next;
                            this.lastChild = al.prev;
                            al.jQ.remove();
                            this.cursor.redraw();
                            return false
                        } else {
                            return this.parent.keydown(am)
                        }
                    }
                    var an = new u;
                    an.parent = this;
                    an.jQ = M("<span></span>").data(y, {
                        block: an
                    }).appendTo(this.jQ);
                    this.lastChild = an;
                    al.next = an;
                    an.prev = al;
                    this.cursor.appendTo(an).redraw();
                    return false
                } else {
                    if (am.which === 8) {
                        if (al.isEmpty()) {
                            if (al.prev) {
                                this.cursor.appendTo(al.prev);
                                al.prev.next = al.next
                            } else {
                                this.cursor.insertBefore(this);
                                this.firstChild = al.next
                            }
                            if (al.next) {
                                al.next.prev = al.prev
                            } else {
                                this.lastChild = al.prev
                            }
                            al.jQ.remove();
                            if (this.isEmpty()) {
                                this.cursor.deleteForward()
                            } else {
                                this.cursor.redraw()
                            }
                            return false
                        } else {
                            if (!this.cursor.prev) {
                                return false
                            }
                        }
                    }
                }
            }
        }
        return this.parent.keydown(am)
    };
    I.vector = C;

    function e(ao, al, am, an) {
        this.rows = am;
        this.cols = an;
        this.init("\\matrix", r, r, ao);
        this.envName = "matrix"
    }
    ak = e.prototype = new B;
    ak.html_template = ['<table class="matrix"/>'];
    ak.initBlocks = function(al) {
        this.tablejQ = this.jQ;
        this.initMatrix(al)
    };
    ak.initMatrix = function(ao) {
        if (this.rows === r) {
            do {
                var at = prompt('Please enter the number of rows and columns in the NxM format.\nFor example, for a 2x3 matrix, please enter "2x3" (without quotes):').split(/[x ,]/);
                if (at.length !== 2) {
                    continue
                }
                var aw = parseInt(at[0]);
                var ar = parseInt(at[1])
            } while (!(aw > 0 && ar > 0))
        } else {
            var aw = this.rows;
            var ar = this.cols
        }
        var au = this,
            aq, an = 0;
        au.matrix = [];
        for (var av = 0; av < aw; av += 1) {
            var al = [];
            au.matrix.push(al);
            var ap = al.jQ = M("<tr/>").appendTo(au.tablejQ);
            for (var am = 0; am < ar; am += 1) {
                if (av === 0 && am === 0) {
                    au.firstChild = aq = (ao && ao.blockify()) || new u
                } else {
                    aq = new u
                }
                aq.parent = au;
                aq.prev = an;
                an.next = aq;
                an = aq;
                aq.row = av;
                aq.col = am;
                aq.jQ = M("<td/>").data(y, {
                    block: aq
                }).append(aq.jQ).appendTo(ap);
                al.push(aq);
                aq.blur()
            }
        }
        au.lastChild = an
    };
    ak.latex = function() {
        var ao = [];
        for (var am = 0; am < this.matrix.length; am += 1) {
            var al = [];
            var ap = this.matrix[am];
            for (var an = 0; an < ap.length; an += 1) {
                al.push(ap[an].latex())
            }
            ao.push(al.join("&"))
        }
        return ["\\begin{" + this.envName + "}", ao.join("\\\\ "), "\\end{" + this.envName + "}"].join("")
    };
    ak.text = function() {
        var ao = [];
        for (var am = 0; am < this.matrix.length; am += 1) {
            var al = [];
            var ap = this.matrix[am];
            for (var an = 0; an < ap.length; an += 1) {
                al.push(ap[an].text())
            }
            ao.push(al.join(", "))
        }
        return "[\n [" + ao.join("],\n [") + "]\n]"
    };
    ak.placeCursor = function(al) {
        this.cursor = al.appendTo(this.firstChild)
    };
    ak.keydown = function(ao) {
        var an = this.cursor.parent;
        if (an.parent === this) {
            if (ao.which === 8) {
                if (!this.cursor.prev && !this.cursor.selection) {
                    return false
                }
            } else {
                if (ao.which === 46) {
                    if (!this.cursor.prev && !this.cursor.selection) {
                        return false
                    }
                } else {
                    if (/^13|38|40$/.test(ao.which)) {
                        var al = (ao.which === 13 ? ao.shiftKey : ao.which === 38);
                        var ap = an.row;
                        var am = an.col;
                        if (al) {
                            if (ap > 0) {
                                this.cursor.appendTo(this.matrix[ap - 1][am])
                            }
                        } else {
                            if (ap < this.matrix.length - 1) {
                                this.cursor.prependTo(this.matrix[ap + 1][am])
                            }
                        }
                    }
                }
            }
        }
        return this.parent.keydown(ao)
    };
    ak.textInput = function(al) {
        if (al !== "\t" && al !== "\n") {
            return this.parent.textInput(al)
        }
    };
    I.smallmatrix = I.matrix = e;

    function c() {}
    c.prototype = e.prototype;

    function aj(am, al, ao) {
        function an(au, ap, aq, ar) {
            this.rows = aq;
            this.cols = ar;
            this.init("\\" + am, r, r, au);
            this.envName = am;
            var at = this.blockjQ = this.tablejQ;
            this.bracketjQs = at.prev().add(at.next())
        }
        ak = an.prototype = new c;
        ak.html_template = ['<span class="block"><span class="paren">' + al + '</span><table class="matrix"></table><span class="paren">' + ao + "</span></span>"];
        ak.initBlocks = function(ap) {
            this.tablejQ = this.jQ.find("table");
            this.initMatrix(ap)
        };
        ak.redraw = A.prototype.redraw;
        I[am] = an
    }
    aj("pmatrix", "(", ")");
    aj("bmatrix", "[", "]");
    aj("Bmatrix", "{", "}");
    aj("vmatrix", "|", "|");
    aj("Vmatrix", "&#8214;", "&#8214;");
    aj("cases", "{", "&nbsp;");
    I.editable = q(ad, function() {
        this.init("\\editable");
        ab(this.jQ, this.firstChild, false, true);
        var al;
        this.placeCursor = function(am) {
            al = am.appendTo(this.firstChild)
        };
        this.firstChild.blur = function() {
            if (al.prev !== this.parent) {
                return
            }
            delete this.blur;
            this.cursor.appendTo(this);
            u.prototype.blur.call(this)
        };
        this.latex = function() {
            return this.firstChild.latex()
        };
        this.text = function() {
            return this.firstChild.text()
        }
    });

    function p(am, al) {
        U.call(this, am, "<var>" + (al || am) + "</var>")
    }
    ak = p.prototype = new U;
    ak.text = function() {
        var al = this.cmd;
        if (this.prev && !(this.prev instanceof p) && !(this.prev instanceof ae)) {
            al = "*" + al
        }
        if (this.next && !(this.next instanceof ae) && !(this.next.cmd === "^")) {
            al += "*"
        }
        return al
    };

    function Z(am, al) {
        U.call(this, am, "<span>" + (al || am) + "</span>")
    }
    Z.prototype = U.prototype;

    function Y(am, al) {
        U.call(this, am, "<span>" + (al || am) + "</span>")
    }
    Y.prototype = U.prototype;
    Y.redraw = function() {
        var al = this.blockjQ.outerHeight() / +this.blockjQ.css("fontSize").slice(0, -2);
        N(this.bracketjQs, af(1 + 0.3 * (al - 1), 1.3), 1.05 * al)
    };

    function P() {
        Z.call(this, "\\:", " ")
    }
    ak = P.prototype = new Z;
    ak.precedence = 0.5;
    x[" "] = x["#"] = P;
    I.prime = I["'"] = x["'"] = f(Z, "'", "<big>′</big>");

    function g(am, al) {
        U.call(this, am, '<span class="nonSymbola">' + (al || am) + "</span>")
    }
    g.prototype = U.prototype;
    I["@"] = g;
    I["&"] = f(g, "\\&", "&");
    I["%"] = f(g, "\\%", "%");
    I.alpha = I.beta = I.gamma = I.delta = I.zeta = I.eta = I.theta = I.iota = I.kappa = I.mu = I.nu = I.xi = I.rho = I.sigma = I.tau = I.chi = I.psi = I.omega = q(U, function(am, al) {
        p.call(this, "\\" + al + " ", "&" + al + ";")
    });
    I.phi = f(p, "\\phi ", "&#981;");
    I.phiv = I.varphi = f(p, "\\varphi ", "&phi;");
    I.epsilon = f(p, "\\epsilon ", "&#1013;");
    I.epsiv = I.varepsilon = f(p, "\\varepsilon ", "&epsilon;");
    I.piv = I.varpi = f(p, "\\varpi ", "&piv;");
    I.sigmaf = I.sigmav = I.varsigma = f(p, "\\varsigma ", "&sigmaf;");
    I.thetav = I.vartheta = I.thetasym = f(p, "\\vartheta ", "&thetasym;");
    I.upsilon = I.upsi = f(p, "\\upsilon ", "&upsilon;");
    I.gammad = I.Gammad = I.digamma = f(p, "\\digamma ", "&#989;");
    I.kappav = I.varkappa = f(p, "\\varkappa ", "&#1008;");
    I.rhov = I.varrho = f(p, "\\varrho ", "&#1009;");
    I.pi = I["π"] = f(g, "\\pi ", "&pi;");
    I.lambda = f(g, "\\lambda ", "&lambda;");
    I.Upsilon = I.Upsi = I.upsih = I.Upsih = f(U, "\\Upsilon ", '<var style="font-family: serif">&upsih;</var>');
    I.Gamma = I.Delta = I.Theta = I.Lambda = I.Xi = I.Pi = I.Sigma = I.Phi = I.Psi = I.Omega = I.forall = q(U, function(am, al) {
        Z.call(this, "\\" + al + " ", "&" + al + ";")
    });

    function ae(am, al, an) {
        U.call(this, am, '<span class="binary-operator">' + al + "</span>", an)
    }
    ak = ae.prototype = new U;
    ak.precedence = 1;

    function d(am, al) {
        Z.apply(this, arguments)
    }
    ak = d.prototype = new ae;
    ak.respace = function() {
        if (!this.prev) {
            this.jQ[0].className = ""
        } else {
            if (this.prev instanceof ae && this.next && !(this.next instanceof ae)) {
                this.jQ[0].className = "unary-operator"
            } else {
                this.jQ[0].className = "binary-operator"
            }
        }
        return this
    };
    I["+"] = f(d, "+", "+");
    I["–"] = I["-"] = f(d, "-", "&minus;");
    I["±"] = I.pm = I.plusmn = I.plusminus = f(d, "\\pm ", "&plusmn;");
    I.mp = I.mnplus = I.minusplus = f(d, "\\mp ", "&#8723;");
    x["*"] = I.sdot = I.cdot = f(ae, "\\cdot ", "&middot;");
    I["="] = f(ae, "=", "=");
    I["<"] = f(ae, "<", "&lt;");
    I[">"] = f(ae, ">", "&gt;");
    I.notin = I.sim = I.cong = I.equiv = I.oplus = I.otimes = q(ae, function(am, al) {
        ae.call(this, "\\" + al + " ", "&" + al + ";")
    });
    I.times = q(ae, function(am, al) {
        ae.call(this, "\\times ", "&times;", "[x]")
    });
    I["÷"] = I.div = I.divide = I.divides = f(ae, "\\div ", "&divide;", "[/]");
    I["≠"] = I.ne = I.neq = f(ae, "\\ne ", "&ne;");
    I.ast = I.star = I.loast = I.lowast = f(ae, "\\ast ", "&lowast;");
    I.therefor = I.therefore = f(ae, "\\therefore ", "&there4;");
    I.cuz = I.because = f(ae, "\\because ", "&#8757;");
    I.prop = I.propto = f(ae, "\\propto ", "&prop;");
    I["≈"] = I.asymp = I.approx = f(ae, "\\approx ", "&asymp;");
    I.lt = f(ae, "<", "&lt;");
    I.gt = f(ae, ">", "&gt;");
    I["≤"] = I.le = I.leq = f(ae, "\\le ", "&le;");
    I["≥"] = I.ge = I.geq = f(ae, "\\ge ", "&ge;");
    I.isin = I["in"] = f(ae, "\\in ", "&isin;");
    I.ni = I.contains = f(ae, "\\ni ", "&ni;");
    I.notni = I.niton = I.notcontains = I.doesnotcontain = f(ae, "\\not\\ni ", "&#8716;");
    I.sub = I.subset = f(ae, "\\subset ", "&sub;");
    I.supset = I.superset = f(ae, "\\supset ", "&sup;");
    I.sup = Q;
    I.nsub = I.notsub = I.nsubset = I.notsubset = f(ae, "\\not\\subset ", "&#8836;");
    I.nsup = I.notsup = I.nsupset = I.notsupset = I.nsuperset = I.notsuperset = f(ae, "\\not\\supset ", "&#8837;");
    I.sube = I.subeq = I.subsete = I.subseteq = f(ae, "\\subseteq ", "&sube;");
    I.supe = I.supeq = I.supsete = I.supseteq = I.supersete = I.superseteq = f(ae, "\\supseteq ", "&supe;");
    I.nsube = I.nsubeq = I.notsube = I.notsubeq = I.nsubsete = I.nsubseteq = I.notsubsete = I.notsubseteq = f(ae, "\\not\\subseteq ", "&#8840;");
    I.nsupe = I.nsupeq = I.notsupe = I.notsupeq = I.nsupsete = I.nsupseteq = I.notsupsete = I.notsupseteq = I.nsupersete = I.nsuperseteq = I.notsupersete = I.notsuperseteq = f(ae, "\\not\\supseteq ", "&#8841;");

    function t(am, al) {
        U.call(this, am, "<big>" + al + "</big>")
    }
    t.prototype = new U;
    I["∑"] = I.sum = I.summation = f(t, "\\sum ", "&sum;");
    I["∏"] = I.prod = I.product = f(t, "\\prod ", "&prod;");
    I.coprod = I.coproduct = f(t, "\\coprod ", "&#8720;");
    I["∫"] = I["int"] = I.integral = f(t, "\\int ", "&int;");
    I.N = I.naturals = I.Naturals = f(Z, "\\mathbb{N}", "&#8469;");
    I.P = I.primes = I.Primes = I.projective = I.Projective = I.probability = I.Probability = f(Z, "\\mathbb{P}", "&#8473;");
    I.Z = I.integers = I.Integers = f(Z, "\\mathbb{Z}", "&#8484;");
    I.Q = I.rationals = I.Rationals = f(Z, "\\mathbb{Q}", "&#8474;");
    I.R = I.reals = I.Reals = f(Z, "\\mathbb{R}", "&#8477;");
    I.C = I.complex = I.Complex = I.complexes = I.Complexes = I.complexplane = I.Complexplane = I.ComplexPlane = f(Z, "\\mathbb{C}", "&#8450;");
    I.quad = I.emsp = f(Z, "\\quad ", "&nbsp;&nbsp;&nbsp;&nbsp;");
    I.qquad = f(Z, "\\qquad ", "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
    I.diamond = f(Z, "\\diamond ", "&#9671;");
    I.bigtriangleup = f(Z, "\\bigtriangleup ", "&#9651;");
    I.ominus = f(Z, "\\ominus ", "&#8854;");
    I.uplus = f(Z, "\\uplus ", "&#8846;");
    I.bigtriangledown = f(Z, "\\bigtriangledown ", "&#9661;");
    I.sqcap = f(Z, "\\sqcap ", "&#8851;");
    I.triangleleft = f(Z, "\\triangleleft ", "&#8882;");
    I.sqcup = f(Z, "\\sqcup ", "&#8852;");
    I.triangleright = f(Z, "\\triangleright ", "&#8883;");
    I.odot = f(Z, "\\odot ", "&#8857;");
    I.bigcirc = f(Z, "\\bigcirc ", "&#9711;");
    I.dagger = f(Z, "\\dagger ", "&#0134;");
    I.ddagger = f(Z, "\\ddagger ", "&#135;");
    I.wr = f(Z, "\\wr ", "&#8768;");
    I.amalg = f(Z, "\\amalg ", "&#8720;");
    I.models = f(Z, "\\models ", "&#8872;");
    I.prec = f(Z, "\\prec ", "&#8826;");
    I.succ = f(Z, "\\succ ", "&#8827;");
    I.preceq = f(Z, "\\preceq ", "&#8828;");
    I.succeq = f(Z, "\\succeq ", "&#8829;");
    I.simeq = f(Z, "\\simeq ", "&#8771;");
    I.mid = f(Z, "\\mid ", "&#8739;");
    I.matrixmid = f(Y, "\\matrixmid ", "&#8739;");
    I.ll = f(Z, "\\ll ", "&#8810;");
    I.gg = f(Z, "\\gg ", "&#8811;");
    I.parallel = f(Z, "\\parallel ", "&#8741;");
    I.bowtie = f(Z, "\\bowtie ", "&#8904;");
    I.sqsubset = f(Z, "\\sqsubset ", "&#8847;");
    I.sqsupset = f(Z, "\\sqsupset ", "&#8848;");
    I.smile = f(Z, "\\smile ", "&#8995;");
    I.sqsubseteq = f(Z, "\\sqsubseteq ", "&#8849;");
    I.sqsupseteq = f(Z, "\\sqsupseteq ", "&#8850;");
    I.doteq = f(Z, "\\doteq ", "&#8784;");
    I.frown = f(Z, "\\frown ", "&#8994;");
    I.vdash = f(Z, "\\vdash ", "&#8870;");
    I.dashv = f(Z, "\\dashv ", "&#8867;");
    I.longleftarrow = f(Z, "\\longleftarrow ", "&#8592;");
    I.longrightarrow = f(Z, "\\longrightarrow ", "&#8594;");
    I.Longleftarrow = f(Z, "\\Longleftarrow ", "&#8656;");
    I.Longrightarrow = f(Z, "\\Longrightarrow ", "&#8658;");
    I.longleftrightarrow = f(Z, "\\longleftrightarrow ", "&#8596;");
    I.updownarrow = f(Z, "\\updownarrow ", "&#8597;");
    I.Longleftrightarrow = f(Z, "\\Longleftrightarrow ", "&#8660;");
    I.Updownarrow = f(Z, "\\Updownarrow ", "&#8661;");
    I.mapsto = f(Z, "\\mapsto ", "&#8614;");
    I.nearrow = f(Z, "\\nearrow ", "&#8599;");
    I.hookleftarrow = f(Z, "\\hookleftarrow ", "&#8617;");
    I.hookrightarrow = f(Z, "\\hookrightarrow ", "&#8618;");
    I.searrow = f(Z, "\\searrow ", "&#8600;");
    I.leftharpoonup = f(Z, "\\leftharpoonup ", "&#8636;");
    I.rightharpoonup = f(Z, "\\rightharpoonup ", "&#8640;");
    I.swarrow = f(Z, "\\swarrow ", "&#8601;");
    I.leftharpoondown = f(Z, "\\leftharpoondown ", "&#8637;");
    I.rightharpoondown = f(Z, "\\rightharpoondown ", "&#8641;");
    I.nwarrow = f(Z, "\\nwarrow ", "&#8598;");
    I.ldots = f(Z, "\\ldots ", "&#8230;");
    I.cdots = f(Z, "\\cdots ", "&#8943;");
    I.vdots = f(Z, "\\vdots ", "&#8942;");
    I.ddots = f(Z, "\\ddots ", "&#8945;");
    I.surd = f(Z, "\\surd ", "&#8730;");
    I.triangle = f(Z, "\\triangle ", "&#9653;");
    I.ell = f(Z, "\\ell ", "&#8467;");
    I.top = f(Z, "\\top ", "&#8868;");
    I.flat = f(Z, "\\flat ", "&#9837;");
    I.natural = f(Z, "\\natural ", "&#9838;");
    I.sharp = f(Z, "\\sharp ", "&#9839;");
    I.wp = f(Z, "\\wp ", "&#8472;");
    I.bot = f(Z, "\\bot ", "&#8869;");
    I.clubsuit = f(Z, "\\clubsuit ", "&#9827;");
    I.diamondsuit = f(Z, "\\diamondsuit ", "&#9826;");
    I.heartsuit = f(Z, "\\heartsuit ", "&#9825;");
    I.spadesuit = f(Z, "\\spadesuit ", "&#9824;");
    I.oint = f(Z, "\\oint ", "&#8750;");
    I.bigcap = f(Z, "\\bigcap ", "&#8745;");
    I.bigcup = f(Z, "\\bigcup ", "&#8746;");
    I.bigsqcup = f(Z, "\\bigsqcup ", "&#8852;");
    I.bigvee = f(Z, "\\bigvee ", "&#8744;");
    I.bigwedge = f(Z, "\\bigwedge ", "&#8743;");
    I.bigodot = f(Z, "\\bigodot ", "&#8857;");
    I.bigotimes = f(Z, "\\bigotimes ", "&#8855;");
    I.bigoplus = f(Z, "\\bigoplus ", "&#8853;");
    I.biguplus = f(Z, "\\biguplus ", "&#8846;");
    I.lfloor = f(Z, "\\lfloor ", "&#8970;");
    I.rfloor = f(Z, "\\rfloor ", "&#8971;");
    I.lceil = f(Z, "\\lceil ", "&#8968;");
    I.rceil = f(Z, "\\rceil ", "&#8969;");
    I.slash = f(Z, "\\slash ", "&#47;");
    I.opencurlybrace = f(Z, "\\opencurlybrace ", "&#123;");
    I.closecurlybrace = f(Z, "\\closecurlybrace ", "&#125;");
    I.caret = f(Z, "\\caret ", "^");
    I.underscore = f(Z, "\\underscore ", "_");
    I.backslash = f(Z, "\\backslash ", "\\");
    I.vert = f(Z, "|");
    I.perp = I.perpendicular = f(Z, "\\perp ", "&perp;");
    I.nabla = I.del = f(Z, "\\nabla ", "&nabla;");
    I.hbar = f(Z, "\\hbar ", "&#8463;");
    I.textdiv = f(Z, "\\textdiv ", "&#247;");
    I.marker = f(Z, "\\marker ", "&#9646;");
    I.msquare = f(Z, "\\msquare ", "&#9633;");
    I.square = f(Z, "\\square ", "&#9744;");
    I.bsquare = f(Z, "\\bsquare ", "&#9724;");
    I.hspace = f(Z, "\\hspace ", "&#8201;");
    I.notequal = f(Z, "\\not= ", "&#8800;");
    I.blacksquare = f(Z, "\\blacksquare= ", "&#9642;");
    I.hybull = f(Z, "\\hybull", "&#8259;");
    I.ding = f(Z, "\\ding", "&#9830;");
    I.whiteVerticalRectangle = f(Z, "\\whiteVerticalRectangle", "&#9647;");
    I.leftFiveEigthsBlock = f(Z, "\\leftFiveEigthsBlock", "&#9611;");
    I.rightHalfBlock = f(Z, "\\rightHalfBlock", "&#9616;");
    I.space = f(Z, "\\space", "&#8197;");
    I.smallspace = f(Z, "\\smallspace", "&#8201;");
    I.hairspace = f(Z, "\\smallspace", "&#8202;");
    I.emptyspace = f(Z, "\\emptyspace", "&#8203;");
    I.dollar = f(Z, "\\dollar", "$");
    I.AA = I.Angstrom = I.angstrom = f(Z, "\\text\\AA ", "&#8491;");
    I.ring = I.circ = I.circle = f(Z, "\\circ ", "&#9702;");
    I.bull = I.bullet = f(Z, "\\bullet ", "&bull;");
    I.setminus = I.smallsetminus = f(Z, "\\setminus ", "&#8726;");
    I.not = I["¬"] = I.neg = f(Z, "\\neg ", "&not;");
    I["…"] = I.dots = I.ellip = I.hellip = I.ellipsis = I.hellipsis = f(Z, "\\dots ", "&hellip;");
    I.converges = I.darr = I.dnarr = I.dnarrow = I.downarrow = f(Z, "\\downarrow ", "&darr;");
    I.dArr = I.dnArr = I.dnArrow = I.Downarrow = f(Z, "\\Downarrow ", "&dArr;");
    I.diverges = I.uarr = I.uparrow = f(Z, "\\uparrow ", "&uarr;");
    I.uArr = I.Uparrow = f(Z, "\\Uparrow ", "&uArr;");
    I.to = f(ae, "\\to ", "&rarr;");
    I.rarr = I.rightarrow = f(Z, "\\rightarrow ", "&rarr;");
    I.implies = f(ae, "\\Rightarrow ", "&rArr;");
    I.rArr = I.Rightarrow = f(Z, "\\Rightarrow ", "&rArr;");
    I.gets = f(ae, "\\gets ", "&larr;");
    I.larr = I.leftarrow = f(Z, "\\leftarrow ", "&larr;");
    I.impliedby = f(ae, "\\Leftarrow ", "&lArr;");
    I.lArr = I.Leftarrow = f(Z, "\\Leftarrow ", "&lArr;");
    I.harr = I.lrarr = I.leftrightarrow = f(Z, "\\leftrightarrow ", "&harr;");
    I.iff = f(ae, "\\Leftrightarrow ", "&hArr;");
    I.hArr = I.lrArr = I.Leftrightarrow = f(Z, "\\Leftrightarrow ", "&hArr;");
    I.Re = I.Real = I.real = f(Z, "\\Re ", "&real;");
    I.Im = I.imag = I.image = I.imagin = I.imaginary = I.Imaginary = f(Z, "\\Im ", "&image;");
    I.part = I.partial = f(Z, "\\partial ", "&part;");
    I.inf = I.infin = I.infty = I.infinity = f(Z, "\\infty ", "&infin;");
    I.alef = I.alefsym = I.aleph = I.alephsym = f(Z, "\\aleph ", "&alefsym;");
    I.xist = I.xists = I.exist = I.exists = f(Z, "\\exists ", "&exist;");
    I.and = I.land = I.wedge = f(Z, "\\wedge ", "&and;");
    I.or = I.lor = I.vee = f(Z, "\\vee ", "&or;");
    I.o = I.O = I.empty = I.emptyset = I.oslash = I.Oslash = I.nothing = I.varnothing = f(ae, "\\varnothing ", "&empty;");
    I.cup = I.union = f(ae, "\\cup ", "&cup;");
    I.cap = I.intersect = I.intersection = f(ae, "\\cap ", "&cap;");
    I.deg = I.degree = f(Z, "^{\\circ} ", "&deg;");
    I.ang = I.angle = f(Z, "\\angle ", "&ang;");

    function Q(am, al) {
        U.call(this, "\\" + al + " ", "<span>" + al + "</span>")
    }
    ak = Q.prototype = new U;
    ak.respace = function() {
        this.jQ[0].className = (this.next instanceof ah || this.next instanceof A) ? "" : "non-italicized-function"
    };
    I.exp = I.at = I.tr = I.det = I.rk = I.adj = I.ln = I.lg = I.log = I.span = I.proj = I.det = I.dim = I.min = I.max = I.mod = I.lcm = I.gcd = I.gcf = I.hcf = I.lim = Q;
    (function() {
        var am = ["sin", "cos", "tan", "sec", "cosec", "csc", "cotan", "cot"];
        for (var al in am) {
            I[am[al]] = I[am[al] + "h"] = I["a" + am[al]] = I["arc" + am[al]] = I["a" + am[al] + "h"] = I["arc" + am[al] + "h"] = Q
        }
    }());

    function H(al) {
        this.parent = this.root = al;
        var am = this.jQ = this._jQ = M('<span class="cursor">&#8203;</span>');
        this.blink = function() {
            am.toggleClass("blink")
        }
    }
    ak = H.prototype;
    ak.prev = 0;
    ak.next = 0;
    ak.parent = 0;
    ak.show = function() {
        this.jQ = this._jQ.removeClass("blink");
        if ("intervalId" in this) {
            clearInterval(this.intervalId)
        } else {
            if (this.next) {
                if (this.selection && this.selection.prev === this.prev) {
                    this.jQ.insertBefore(this.selection.jQ)
                } else {
                    this.jQ.insertBefore(this.next.jQ.first())
                }
            } else {
                this.jQ.appendTo(this.parent.jQ)
            }
            this.parent.focus()
        }
        this.intervalId = setInterval(this.blink, 500);
        return this
    };
    ak.hide = function() {
        if ("intervalId" in this) {
            clearInterval(this.intervalId)
        }
        delete this.intervalId;
        this.jQ.detach();
        this.jQ = M();
        return this
    };
    ak.redraw = function() {
        for (var al = this.parent; al; al = al.parent) {
            if (al.redraw) {
                al.redraw()
            }
        }
    };
    ak.insertAt = function(am, an, al) {
        var ao = this.parent;
        this.parent = am;
        this.prev = an;
        this.next = al;
        ao.blur()
    };
    ak.insertBefore = function(al) {
        this.insertAt(al.parent, al.prev, al);
        this.parent.jQ.addClass("hasCursor");
        this.jQ.insertBefore(al.jQ.first());
        return this
    };
    ak.insertAfter = function(al) {
        this.insertAt(al.parent, al, al.next);
        this.parent.jQ.addClass("hasCursor");
        this.jQ.insertAfter(al.jQ.last());
        return this
    };
    ak.prependTo = function(al) {
        this.insertAt(al, 0, al.firstChild);
        if (al.textarea) {
            this.jQ.insertAfter(al.textarea)
        } else {
            this.jQ.prependTo(al.jQ)
        }
        al.focus();
        return this
    };
    ak.appendTo = function(al) {
        this.insertAt(al, al.lastChild, 0);
        this.jQ.appendTo(al.jQ);
        al.focus();
        return this
    };
    ak.hopLeft = function() {
        this.jQ.insertBefore(this.prev.jQ.first());
        this.next = this.prev;
        this.prev = this.prev.prev;
        return this
    };
    ak.hopRight = function() {
        this.jQ.insertAfter(this.next.jQ.last());
        this.prev = this.next;
        this.next = this.next.next;
        return this
    };
    ak.moveLeft = function() {
        if (this.selection) {
            this.insertBefore(this.selection.prev.next || this.parent.firstChild).clearSelection()
        } else {
            if (this.prev) {
                if (this.prev.lastChild) {
                    this.appendTo(this.prev.lastChild)
                } else {
                    this.hopLeft()
                }
            } else {
                if (this.parent.prev) {
                    this.appendTo(this.parent.prev)
                } else {
                    if (this.parent !== this.root) {
                        this.insertBefore(this.parent.parent)
                    }
                }
            }
        }
        return this.show()
    };
    ak.moveRight = function() {
        if (this.selection) {
            this.insertAfter(this.selection.next.prev || this.parent.lastChild).clearSelection()
        } else {
            if (this.next) {
                if (this.next.firstChild) {
                    this.prependTo(this.next.firstChild)
                } else {
                    this.hopRight()
                }
            } else {
                if (this.parent.next) {
                    this.prependTo(this.parent.next)
                } else {
                    if (this.parent !== this.root) {
                        this.insertAfter(this.parent.parent)
                    }
                }
            }
        }
        return this.show()
    };
    ak.seek = function(ap, an, am) {
        var ar = this.clearSelection();
        if (ap.hasClass("empty")) {
            ar.prependTo(ap.data(y).block);
            return ar
        }
        var ao = ap.data(y);
        if (ao) {
            if (ao.cmd && !ao.block) {
                if (ap.outerWidth() > 2 * (an - ap.offset().left)) {
                    ar.insertBefore(ao.cmd)
                } else {
                    ar.insertAfter(ao.cmd)
                }
                return ar
            }
        } else {
            ap = ap.parent();
            ao = ap.data(y);
            if (!ao) {
                ao = {
                    block: ar.root
                }
            }
        }
        if (ao.cmd) {
            ar.insertAfter(ao.cmd)
        } else {
            ar.appendTo(ao.block)
        }
        var aq = ar.jQ.offset().left - an,
            al;
        do {
            ar.moveLeft();
            al = aq;
            aq = ar.jQ.offset().left - an
        } while (aq > 0 && (ar.prev || ar.parent !== ar.root));
        if (-aq > al) {
            ar.moveRight()
        }
        return ar
    };
    ak.replaceIntervalParentheses = function(at) {
        var ao = new Array();
        var an = new Array();
        var al = "";
        for (var am = 0; am < at.length; am++) {
            var ap = at[am];
            if (ap === "(" || ap === "[") {
                an.push({
                    ind: am,
                    type: ap
                })
            } else {
                if (ap === ")") {
                    var aq = an.pop();
                    if (aq && aq.type === "[") {
                        ao.push({
                            index: aq.ind,
                            value: "LEFTCLOSED"
                        });
                        ao.push({
                            index: am,
                            value: "RIGHTOPEN"
                        })
                    }
                } else {
                    if (ap === "]") {
                        var aq = an.pop();
                        if (aq && aq.type === "(") {
                            ao.push({
                                index: aq.ind,
                                value: "LEFTOPEN"
                            });
                            ao.push({
                                index: am,
                                value: "RIGHTCLOSED"
                            })
                        }
                    }
                }
            }
        }
        for (var ar = ao.length - 1; ar >= 0; ar--) {
            at = at.replaceAt(ao[ar].index, ao[ar].value)
        }
        return at
    };
    ak.writeLatex = function(am) {
        this.root.hidePlaceholder();
        this.deleteSelection();
        if (am.indexOf("matrix") < 0 && am.length > 1000) {
            return this.hide()
        }
        am = am.replace(/\\sqrt\[(.+?)\]/g, "\\nthroot-$1-");
        am = am.replace(/\\nthroot\[(.+?)\]/g, "\\nthroot-$1-");
        am = this.replaceIntervalParentheses(am);
        am = am.replace(/(\\left\s*\(|\()/g, "\\left(");
        am = am.replace(/(\\right\s*\)|\))/g, "\\right)");
        am = am.replace(/(\\left\s*\[|\[)/g, "\\left[");
        am = am.replace(/(\\right\s*\]|\])/g, "\\right]");
        am = am.replace(/\\nthroot-(.+?)-/g, "\\nthroot[$1]");
        am = am.replace(/^\\left([\(\[])$/, "$1");
        am = am.replace(/^\\right([\)\]])$/, "$1");
        am = am.replace(/\\int(\#| )(_|^)/g, "\\int$2");
        am = am.replace(/"/g, "");
        am = am.replace(/\*/g, "\\cdot ");
        am = am.replace(/\$/g, "");
        am = am.replace(/\\%/g, "%");
        am = am.replace(/([a-z])\\circ/g, "$1\\:\\circ");
        am = am.replace(/LEFTOPEN/g, "(");
        am = am.replace(/LEFTCLOSED/g, "[");
        am = am.replace(/RIGHTOPEN/g, ")");
        am = am.replace(/RIGHTCLOSED/g, "]");
        am = am.replace(/\\land/g, "\\quad\\mathrm{and}\\quad ");
        am = am.replace(/\\lor/g, "\\quad\\mathrm{or}\\quad ");
        am = am.replace(/f'/g, "f\\:'");
        am = am.replace(/f\\prime/g, "f\\:\\prime");
        am = (am && am.match(/\\(?:begin|end){cases}|\\(?:begin|end){([pbv]|small)?matrix}|\\\\|\\mathbb{[CNPQRZ]}|\\text{([^}]|\\})*}|\\:|\\[a-z]*|[^\s]/ig)) || 0;
        this.adjustParenScripts(am);
        if (!this.parent.textarea) {
            this.adjustVariables(am)
        }
        this.adjustVariablesHE(am);
        (function al(au, av) {
            if (am == "]") {
                au.insertNew(new Z(am));
                return
            }
            while (am.length) {
                var ap = am.shift();
                if (!ap || ap === av || ap.slice(0, 5) === "\\end{") {
                    return
                }
                if (ap === "&" || ap === "\\\\") {
                    am.unshift("{");
                    return
                }
                var ao;
                if (ap.slice(0, 7) === "\\begin{") {
                    var at = ap.slice(7, -1);
                    var aw = 1,
                        ar = 1;
                    for (var aq = 0;; aq += 1) {
                        var an = am[aq];
                        if (an.slice(0, 5) === "\\end{") {
                            break
                        } else {
                            if (an === "\\\\") {
                                aw += 1
                            } else {
                                if (an === "&" && aw === 1) {
                                    ar += 1
                                }
                            }
                        }
                    }
                    au.insertNew(ao = new I[at](r, r, aw, ar));
                    am.unshift("{")
                } else {
                    if (ap.slice(0, 6) === "\\text{") {
                        ao = new aa(ap.slice(6, -1));
                        au.insertNew(ao).insertAfter(ao);
                        continue
                    } else {
                        if (ap == "{") {
                            al(au, "}");
                            continue
                        } else {
                            if (/\\mathbb\{[CNPQRZ]\}/.test(ap)) {
                                ao = new I[ap.slice(-2, -1)];
                                au.insertNew(ao).insertAfter(ao);
                                continue
                            } else {
                                if (ap === "\\left" || ap === "\\right") {
                                    ap = am.shift();
                                    if (ap === "\\") {
                                        ap = am.shift()
                                    }
                                    au.insertCh(ap);
                                    ao = au.prev || au.parent.parent;
                                    if (au.prev) {
                                        return
                                    } else {
                                        am.unshift("{")
                                    }
                                } else {
                                    if (/^\\[a-z]+$/i.test(ap)) {
                                        ap = ap.slice(1);
                                        var ao = I[ap];
                                        if (ao) {
                                            au.insertNew(ao = new ao(r, ap))
                                        } else {
                                            ao = new aa(ap);
                                            au.insertNew(ao).insertAfter(ao);
                                            continue
                                        }
                                    } else {
                                        if (ap.match(/[a-zA-Z\u00E1-\u00F3]/)) {
                                            ao = new p(ap)
                                        } else {
                                            if (ao = I[ap]) {
                                                ao = new ao
                                            } else {
                                                if (ap == "#" || ap == "\\:") {
                                                    ao = new x[" "]()
                                                } else {
                                                    ao = new Z(ap)
                                                }
                                            }
                                        }
                                        au.insertNew(ao)
                                    }
                                }
                            }
                        }
                    }
                }
                ao.eachChild(function(ay) {
                    au.appendTo(ay);
                    var ax = am.shift();
                    if (!ax) {
                        return false
                    }
                    if (ax === "{" || ax === "[") {
                        al(au, ax === "{" ? "}" : "]")
                    } else {
                        au.insertCh(ax)
                    }
                });
                au.insertAfter(ao)
            }
        }(this));
        return this.hide()
    };
    ak.write = function(al) {
        return this.show().insertCh(al)
    };
    ak.insertCh = function(al) {
        if (this.selection) {
            this.prev = this.selection.prev;
            this.next = this.selection.next
        }
        var am;
        if (al.match(/^[a-zA-Z]$/)) {
            am = new p(al)
        } else {
            if (am = x[al] || I[al]) {
                am = new am(this.selection, al)
            } else {
                am = new Z(al)
            }
        }
        if (this.selection) {
            if (am instanceof U) {
                this.selection.remove()
            }
            delete this.selection
        }
        return this.insertNew(am)
    };
    ak.insertNew = function(al) {
        al.insertAt(this);
        return this
    };
    ak.insertCmd = function(al, an) {
        var am = I[al];
        if (am) {
            am = new am(an, al);
            this.insertNew(am);
            if (am instanceof U && an) {
                an.remove()
            }
        } else {
            am = new aa(al);
            am.firstChild.focus = function() {
                delete this.focus;
                return this
            };
            this.insertNew(am).insertAfter(am);
            if (an) {
                an.remove()
            }
        }
        return this
    };
    ak.unwrapGramp = function() {
        var am = this.parent.parent,
            al = am.parent,
            an = am.prev,
            ao = this;
        am.eachChild(function(ap) {
            if (ap.isEmpty()) {
                return
            }
            ap.eachChild(function(aq) {
                aq.parent = al;
                aq.jQ.insertBefore(am.jQ.first())
            });
            ap.firstChild.prev = an;
            if (an) {
                an.next = ap.firstChild
            } else {
                al.firstChild = ap.firstChild
            }
            an = ap.lastChild
        });
        an.next = am.next;
        if (am.next) {
            am.next.prev = an
        } else {
            al.lastChild = an
        }
        if (!this.next) {
            if (this.prev) {
                this.next = this.prev.next
            } else {
                while (!this.next) {
                    this.parent = this.parent.next;
                    if (this.parent) {
                        this.next = this.parent.firstChild
                    } else {
                        this.next = am.next;
                        this.parent = al;
                        break
                    }
                }
            }
        }
        if (this.next) {
            this.insertBefore(this.next)
        } else {
            this.appendTo(al)
        }
        am.jQ.remove();
        if (am.prev) {
            am.prev.respace()
        }
        if (am.next) {
            am.next.respace()
        }
    };
    ak.backspace = function() {
        if (this.deleteSelection()) {} else {
            if (this.prev) {
                if (this.prev.isEmpty()) {
                    this.prev = this.prev.remove().prev
                } else {
                    this.selectLeft()
                }
            } else {
                if (this.parent !== this.root) {
                    if (this.parent.parent.isEmpty()) {
                        return this.insertAfter(this.parent.parent).backspace()
                    } else {
                        this.unwrapGramp()
                    }
                }
            }
        }
        if (this.prev) {
            this.prev.respace()
        }
        if (this.next) {
            this.next.respace()
        }
        this.redraw();
        return this
    };
    ak.deleteForward = function() {
        if (this.deleteSelection()) {} else {
            if (this.next) {
                if (this.next.isEmpty()) {
                    this.next = this.next.remove().next
                } else {
                    this.selectRight()
                }
            } else {
                if (this.parent !== this.root) {
                    if (this.parent.parent.isEmpty()) {
                        return this.insertBefore(this.parent.parent).deleteForward()
                    } else {
                        this.unwrapGramp()
                    }
                }
            }
        }
        if (this.prev) {
            this.prev.respace()
        }
        if (this.next) {
            this.next.respace()
        }
        this.redraw();
        return this
    };
    ak.selectWord = function() {
        if (this.parent.isEmpty()) {
            return this.selectLeft()
        }
        var am = this.next,
            an = this.prev,
            al = am ? am.precedence : an.precedence;
        while (am.precedence === al) {
            am = am.next
        }
        while (an.precedence === al) {
            an = an.prev
        }
        if (am) {
            this.insertBefore(am)
        } else {
            this.appendTo(this.parent)
        }
        this.hide().selection = new O(this.parent, an, am)
    };
    ak.selectFrom = function(ap) {
        var av = this,
            an = ap;
        var ar = 0;
        loopThroughAncestors: while (true) {
            for (var aq = this; aq !== av.parent.parent; aq = aq.parent.parent) {
                if (aq.parent === an.parent) {
                    am = aq;
                    at = an;
                    break loopThroughAncestors
                }
            }
            for (var au = ap; au !== an.parent.parent; au = au.parent.parent) {
                if (av.parent === au.parent) {
                    am = av;
                    at = au;
                    break loopThroughAncestors
                }
            }
            if (av.parent.parent) {
                av = av.parent.parent
            }
            if (an.parent.parent) {
                an = an.parent.parent
            }
            if (ar++ > 1000) {
                break loopThroughAncestors
            }
        }
        var am, at, al;
        if (am.next !== at) {
            for (var ao = am; ao; ao = ao.next) {
                if (ao === at.prev) {
                    al = true;
                    break
                }
            }
            if (!al) {
                al = at;
                at = am;
                am = al
            }
        }
        this.hide().selection = new O(am.parent, am.prev, at.next);
        this.insertAfter(at.next.prev || at.parent.lastChild);
        this.root.selectionChanged()
    };
    ak.selectLeft = function() {
        if (this.selection) {
            if (this.selection.prev === this.prev) {
                if (this.prev) {
                    this.hopLeft().next.jQ.prependTo(this.selection.jQ);
                    this.selection.prev = this.prev
                } else {
                    if (this.parent !== this.root) {
                        this.insertBefore(this.parent.parent).selection.levelUp()
                    }
                }
            } else {
                this.prev.jQ.insertAfter(this.selection.jQ);
                this.hopLeft().selection.next = this.next;
                if (this.selection.prev === this.prev) {
                    this.deleteSelection();
                    return
                }
            }
        } else {
            if (this.prev) {
                this.hopLeft()
            } else {
                if (this.parent !== this.root) {
                    this.insertBefore(this.parent.parent)
                } else {
                    return
                }
            }
            this.hide().selection = new O(this.parent, this.prev, this.next.next)
        }
        this.root.selectionChanged()
    };
    ak.selectRight = function() {
        if (this.selection) {
            if (this.selection.next === this.next) {
                if (this.next) {
                    this.hopRight().prev.jQ.appendTo(this.selection.jQ);
                    this.selection.next = this.next
                } else {
                    if (this.parent !== this.root) {
                        this.insertAfter(this.parent.parent).selection.levelUp()
                    }
                }
            } else {
                this.next.jQ.insertBefore(this.selection.jQ);
                this.hopRight().selection.prev = this.prev;
                if (this.selection.next === this.next) {
                    this.deleteSelection();
                    return
                }
            }
        } else {
            if (this.next) {
                this.hopRight()
            } else {
                if (this.parent !== this.root) {
                    this.insertAfter(this.parent.parent)
                } else {
                    return
                }
            }
            this.hide().selection = new O(this.parent, this.prev.prev, this.next)
        }
        this.root.selectionChanged()
    };
    ak.clearSelection = function() {
        if (this.show().selection) {
            this.selection.clear();
            delete this.selection;
            this.root.selectionChanged()
        }
        return this
    };
    ak.deleteSelection = function() {
        if (!this.show().selection) {
            return false
        }
        this.prev = this.selection.prev;
        this.next = this.selection.next;
        this.selection.remove();
        delete this.selection;
        this.root.selectionChanged();
        return true
    };
    ak.adjustVariables = function(am) {
        var ao = false;
        for (var al = 0; al < am.length; al++) {
            var an = am[al];
            if ((an >= "a" && an <= "z") || (an >= "A" && an <= "Z") || (an >= "\u00E1" && an <= "\u00F3")) {
                if (ao) {
                    am[al - 1] = am[al - 1] + am[al];
                    am.splice(al, 1);
                    al--
                }
                ao = true
            } else {
                ao = false
            }
        }
    };
    ak.adjustVariablesHE = function(am) {
        var ao = false;
        for (var al = 0; al < am.length; al++) {
            var an = am[al];
            if (an >= "\u05D0" && an <= "\u05EA" || an >= "\u0600" && an <= "\u06FF") {
                if (ao) {
                    am[al - 1] = am[al - 1] + am[al];
                    am.splice(al, 1);
                    al--
                }
                ao = true
            } else {
                ao = false
            }
        }
    };
    ak.adjustParenScripts = function(al) {
        for (var an = 0; an < al.length - 2; an++) {
            var au = al[an];
            if (au === "^" || au === "_") {
                var aq = al[an + 1];
                var ao = al[an + 2];
                if (aq === "\\left" && ao === "(") {
                    var av = an + 1;
                    var at = 1;
                    for (var am = an + 3; at > 0 && am < al.length - 1; am++) {
                        var ar = al[am];
                        var ap = al[am + 1];
                        if (ar === "\\right" && ap === ")") {
                            at--
                        } else {
                            if (ar === "\\left" && ap === "(") {
                                at++
                            }
                        }
                    }
                    if (at == 0) {
                        al.splice(av, 0, "{");
                        al.splice(am + 2, 0, "}")
                    }
                }
            }
        }
    };

    function O(am, an, al) {
        W.apply(this, arguments)
    }
    ak = O.prototype = new W;
    ak.jQinit = function(al) {
        this.jQ = al.wrapAll('<span class="selection"></span>').parent()
    };
    ak.levelUp = function() {
        this.clear().jQinit(this.parent.parent.jQ);
        this.prev = this.parent.parent.prev;
        this.next = this.parent.parent.next;
        this.parent = this.parent.parent.parent;
        return this
    };
    ak.clear = function() {
        this.jQ.replaceWith(this.jQ.children());
        return this
    };
    ak.blockify = function() {
        this.jQ.replaceWith(this.jQ = this.jQ.children());
        return W.prototype.blockify.call(this)
    };
    ak.detach = function() {
        var al = W.prototype.blockify.call(this);
        this.blockify = function() {
            this.jQ.replaceWith(al.jQ = this.jQ = this.jQ.children());
            return al
        };
        return this
    };
    M.fn.mathquill = function(ar, aq, al) {
        switch (ar) {
            case "placeholder":
                return this.each(function() {
                    var at = M(this).data(y),
                        au = at && at.block;
                    if (au && au.setPlaceholder) {
                        au.setPlaceholder(aq);
                        if (this !== document.activeElement) {
                            au.showPlaceholder()
                        }
                    }
                });
            case "redraw":
                this.find(":not(:has(:first))").each(function() {
                    var at = M(this).data(y);
                    if (at && (at.cmd || at.block)) {
                        H.prototype.redraw.call(at.cmd || at.block)
                    }
                });
                return this;
            case "revert":
                return this.each(function() {
                    var at = M(this).data(y);
                    if (at && at.revert) {
                        at.revert()
                    }
                });
            case "latex":
                if (arguments.length > 1) {
                    return this.each(function() {
                        var at = M(this).data(y);
                        if (at && at.block && at.block.renderLatex) {
                            at.block.renderLatex(aq)
                        }
                    })
                }
                var ap = this.data(y);
                return ap && ap.block && ap.block.latex();
            case "text":
                var ap = this.data(y);
                return ap && ap.block && ap.block.text();
            case "html":
                return this.html().replace(/ ?hasCursor|hasCursor /, "").replace(/ class=(""|(?= |>))/g, "").replace(/<span class="?cursor( blink)?"?><\/span>/i, "").replace(/<span class="?textarea"?><textarea><\/textarea><\/span>/i, "");
            case "write":
                if (arguments.length > 1) {
                    return this.each(function() {
                        var at = M(this).data(y),
                            av = at && at.block,
                            au = av && av.cursor;
                        if (au) {
                            au.writeLatex(aq);
                            if (al != r) {
                                for (i = 0; i < al; i++) {
                                    au.moveLeft()
                                }
                            }
                            av.blur()
                        }
                    })
                }
            case "cmd":
                if (arguments.length > 1) {
                    return this.each(function() {
                        var at = M(this).data(y),
                            av = at && at.block,
                            au = av && av.cursor;
                        if (au) {
                            au.writeLatex(aq);
                            if (al != r) {
                                for (i = 0; i < al; i += 1) {
                                    au.moveLeft()
                                }
                            }
                            av.blur()
                        }
                    })
                }
            case "backspace":
                return this.each(function() {
                    var at = M(this).data(y),
                        av = at && at.block,
                        au = av && av.cursor;
                    au.backspace()
                });
            case "moveleft":
                return this.each(function() {
                    var at = M(this).data(y),
                        av = at && at.block,
                        au = av && av.cursor;
                    av.focus();
                    au.moveLeft()
                });
            case "moveright":
                return this.each(function() {
                    var at = M(this).data(y),
                        av = at && at.block,
                        au = av && av.cursor;
                    av.focus();
                    au.moveRight()
                });
            default:
                var am = ar === "textbox",
                    an = am || ar === "editable",
                    ao = am ? R : l;
                return this.each(function() {
                    ab(M(this), new ao, am, an)
                })
        }
    };
    M(function() {
        M(".mathquill-editable:not(.mathquill-rendered-math)").mathquill("editable");
        M(".mathquill-textbox:not(.mathquill-rendered-math)").mathquill("textbox");
        M(".mathquill-embedded-latex:not(.mathquill-rendered-math)").mathquill()
    })
}());
(function(a, b) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], function(c) {
            return (b(c))
        })
    } else {
        if (typeof exports === "object") {
            module.exports = b(require("jquery"))
        } else {
            b(jQuery)
        }
    }
}(this, function(d) {
    var c = {
            animation: "fade",
            animationDuration: 350,
            content: null,
            contentAsHTML: false,
            contentCloning: false,
            debug: true,
            delay: 300,
            delayTouch: [300, 500],
            functionInit: null,
            functionBefore: null,
            functionReady: null,
            functionAfter: null,
            functionFormat: null,
            IEmin: 6,
            interactive: false,
            multiple: false,
            parent: "body",
            plugins: ["sideTip"],
            repositionOnScroll: false,
            restoration: "none",
            selfDestruction: true,
            theme: [],
            timer: 0,
            trackerInterval: 500,
            trackOrigin: false,
            trackTooltip: false,
            trigger: "hover",
            triggerClose: {
                click: false,
                mouseleave: false,
                originClick: false,
                scroll: false,
                tap: false,
                touchleave: false
            },
            triggerOpen: {
                click: false,
                mouseenter: false,
                tap: false,
                touchstart: false
            },
            updateAnimation: "rotate",
            zIndex: 9999999
        },
        f = (typeof window != "undefined") ? window : null,
        g = {
            hasTouchCapability: !!(f && ("ontouchstart" in f || (f.DocumentTouch && f.document instanceof f.DocumentTouch) || f.navigator.maxTouchPoints)),
            hasTransitions: k(),
            IE: false,
            semVer: "4.1.6",
            window: f
        },
        b = function() {
            this.__$emitterPrivate = d({});
            this.__$emitterPublic = d({});
            this.__instancesLatestArr = [];
            this.__plugins = {};
            this._env = g
        };
    b.prototype = {
        __bridge: function(o, q, p) {
            if (!q[p]) {
                var n = function() {};
                n.prototype = o;
                var m = new n();
                if (m.__init) {
                    m.__init(q)
                }
                d.each(o, function(r, s) {
                    if (r.indexOf("__") != 0) {
                        if (!q[r]) {
                            q[r] = function() {
                                return m[r].apply(m, Array.prototype.slice.apply(arguments))
                            };
                            q[r].bridged = m
                        } else {
                            if (c.debug) {
                                console.log("The " + r + " method of the " + p + " plugin conflicts with another plugin or native methods")
                            }
                        }
                    }
                });
                q[p] = m
            }
            return this
        },
        __setWindow: function(m) {
            g.window = m;
            return this
        },
        _getRuler: function(m) {
            return new j(m)
        },
        _off: function() {
            this.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));
            return this
        },
        _on: function() {
            this.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));
            return this
        },
        _one: function() {
            this.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));
            return this
        },
        _plugin: function(n) {
            var m = this;
            if (typeof n == "string") {
                var o = n,
                    q = null;
                if (o.indexOf(".") > 0) {
                    q = m.__plugins[o]
                } else {
                    d.each(m.__plugins, function(p, r) {
                        if (r.name.substring(r.name.length - o.length - 1) == "." + o) {
                            q = r;
                            return false
                        }
                    })
                }
                return q
            } else {
                if (n.name.indexOf(".") < 0) {
                    throw new Error("Plugins must be namespaced")
                }
                m.__plugins[n.name] = n;
                if (n.core) {
                    m.__bridge(n.core, m, n.name)
                }
                return this
            }
        },
        _trigger: function() {
            var m = Array.prototype.slice.apply(arguments);
            if (typeof m[0] == "string") {
                m[0] = {
                    type: m[0]
                }
            }
            this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, m);
            this.__$emitterPublic.trigger.apply(this.__$emitterPublic, m);
            return this
        },
        instances: function(m) {
            var o = [],
                n = m || ".tooltipstered";
            d(n).each(function() {
                var q = d(this),
                    p = q.data("tooltipster-ns");
                if (p) {
                    d.each(p, function(r, s) {
                        o.push(q.data(s))
                    })
                }
            });
            return o
        },
        instancesLatest: function() {
            return this.__instancesLatestArr
        },
        off: function() {
            this.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));
            return this
        },
        on: function() {
            this.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));
            return this
        },
        one: function() {
            this.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));
            return this
        },
        origins: function(m) {
            var n = m ? m + " " : "";
            return d(n + ".tooltipstered").toArray()
        },
        setDefaults: function(m) {
            d.extend(c, m);
            return this
        },
        triggerHandler: function() {
            this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));
            return this
        }
    };
    d.tooltipster = new b();
    d.Tooltipster = function(n, m) {
        this.__callbacks = {
            close: [],
            open: []
        };
        this.__closingTime;
        this.__Content;
        this.__contentBcr;
        this.__destroyed = false;
        this.__destroying = false;
        this.__$emitterPrivate = d({});
        this.__$emitterPublic = d({});
        this.__enabled = true;
        this.__garbageCollector;
        this.__Geometry;
        this.__lastPosition;
        this.__namespace = "tooltipster-" + Math.round(Math.random() * 1000000);
        this.__options;
        this.__$originParents;
        this.__pointerIsOverOrigin = false;
        this.__previousThemes = [];
        this.__state = "closed";
        this.__timeouts = {
            close: [],
            open: null
        };
        this.__touchEvents = [];
        this.__tracker = null;
        this._$origin;
        this._$tooltip;
        this.__init(n, m)
    };
    d.Tooltipster.prototype = {
        __init: function(p, q) {
            var o = this;
            o._$origin = d(p);
            o.__options = d.extend(true, {}, c, q);
            o.__optionsFormat();
            if (!g.IE || g.IE >= o.__options.IEmin) {
                var n = null;
                if (o._$origin.data("tooltipster-initialTitle") === undefined) {
                    n = o._$origin.attr("title");
                    if (n === undefined) {
                        n = null
                    }
                    o._$origin.data("tooltipster-initialTitle", n)
                }
                if (o.__options.content !== null) {
                    o.__contentSet(o.__options.content)
                } else {
                    var m = o._$origin.attr("data-tooltip-content"),
                        r;
                    if (m) {
                        r = d(m)
                    }
                    if (r && r[0]) {
                        o.__contentSet(r.first())
                    } else {
                        o.__contentSet(n)
                    }
                }
                o._$origin.removeAttr("title").addClass("tooltipstered");
                o.__prepareOrigin();
                o.__prepareGC();
                d.each(o.__options.plugins, function(s, t) {
                    o._plug(t)
                });
                if (g.hasTouchCapability) {
                    d("body").on("touchmove." + o.__namespace + "-triggerOpen", function(s) {
                        o._touchRecordEvent(s)
                    })
                }
                o._on("created", function() {
                    o.__prepareTooltip()
                })._on("repositioned", function(s) {
                    o.__lastPosition = s.position
                })
            } else {
                o.__options.disabled = true
            }
        },
        __contentInsert: function() {
            var m = this,
                n = m._$tooltip.find(".tooltipster-content"),
                o = m.__Content,
                p = function(q) {
                    o = q
                };
            m._trigger({
                type: "format",
                content: m.__Content,
                format: p
            });
            if (m.__options.functionFormat) {
                o = m.__options.functionFormat.call(m, m, {
                    origin: m._$origin[0]
                }, m.__Content)
            }
            if (typeof o === "string" && !m.__options.contentAsHTML) {
                n.text(o)
            } else {
                n.empty().append(o)
            }
            return m
        },
        __contentSet: function(m) {
            if (m instanceof d && this.__options.contentCloning) {
                m = m.clone(true)
            }
            this.__Content = m;
            this._trigger({
                type: "updated",
                content: m
            });
            return this
        },
        __destroyError: function() {
            throw new Error("This tooltip has been destroyed and cannot execute your method call.")
        },
        __geometry: function() {
            var C = this,
                r = C._$origin,
                z = C._$origin.is("area");
            if (z) {
                var H = C._$origin.parent().attr("name");
                r = d('img[usemap="#' + H + '"]')
            }
            var y = r[0].getBoundingClientRect(),
                M = d(g.window.document),
                A = d(g.window),
                D = r,
                O = {
                    available: {
                        document: null,
                        window: null
                    },
                    document: {
                        size: {
                            height: M.height(),
                            width: M.width()
                        }
                    },
                    window: {
                        scroll: {
                            left: g.window.scrollX || g.window.document.documentElement.scrollLeft,
                            top: g.window.scrollY || g.window.document.documentElement.scrollTop
                        },
                        size: {
                            height: A.height(),
                            width: A.width()
                        }
                    },
                    origin: {
                        fixedLineage: false,
                        offset: {},
                        size: {
                            height: y.bottom - y.top,
                            width: y.right - y.left
                        },
                        usemapImage: z ? r[0] : null,
                        windowOffset: {
                            bottom: y.bottom,
                            left: y.left,
                            right: y.right,
                            top: y.top
                        }
                    }
                },
                m = false;
            if (z) {
                var o = C._$origin.attr("shape"),
                    L = C._$origin.attr("coords");
                if (L) {
                    L = L.split(",");
                    d.map(L, function(Q, P) {
                        L[P] = parseInt(Q)
                    })
                }
                if (o != "default") {
                    switch (o) {
                        case "circle":
                            var t = L[0],
                                u = L[1],
                                n = L[2],
                                J = u - n,
                                v = t - n;
                            O.origin.size.height = n * 2;
                            O.origin.size.width = O.origin.size.height;
                            O.origin.windowOffset.left += v;
                            O.origin.windowOffset.top += J;
                            break;
                        case "rect":
                            var s = L[0],
                                w = L[1],
                                B = L[2],
                                N = L[3];
                            O.origin.size.height = N - w;
                            O.origin.size.width = B - s;
                            O.origin.windowOffset.left += s;
                            O.origin.windowOffset.top += w;
                            break;
                        case "poly":
                            var G = 0,
                                E = 0,
                                q = 0,
                                p = 0,
                                x = "even";
                            for (var K = 0; K < L.length; K++) {
                                var I = L[K];
                                if (x == "even") {
                                    if (I > q) {
                                        q = I;
                                        if (K === 0) {
                                            G = q
                                        }
                                    }
                                    if (I < G) {
                                        G = I
                                    }
                                    x = "odd"
                                } else {
                                    if (I > p) {
                                        p = I;
                                        if (K == 1) {
                                            E = p
                                        }
                                    }
                                    if (I < E) {
                                        E = I
                                    }
                                    x = "even"
                                }
                            }
                            O.origin.size.height = p - E;
                            O.origin.size.width = q - G;
                            O.origin.windowOffset.left += G;
                            O.origin.windowOffset.top += E;
                            break
                    }
                }
            }
            var F = function(P) {
                O.origin.size.height = P.height, O.origin.windowOffset.left = P.left, O.origin.windowOffset.top = P.top, O.origin.size.width = P.width
            };
            C._trigger({
                type: "geometry",
                edit: F,
                geometry: {
                    height: O.origin.size.height,
                    left: O.origin.windowOffset.left,
                    top: O.origin.windowOffset.top,
                    width: O.origin.size.width
                }
            });
            O.origin.windowOffset.right = O.origin.windowOffset.left + O.origin.size.width;
            O.origin.windowOffset.bottom = O.origin.windowOffset.top + O.origin.size.height;
            O.origin.offset.left = O.origin.windowOffset.left + O.window.scroll.left;
            O.origin.offset.top = O.origin.windowOffset.top + O.window.scroll.top;
            O.origin.offset.bottom = O.origin.offset.top + O.origin.size.height;
            O.origin.offset.right = O.origin.offset.left + O.origin.size.width;
            O.available.document = {
                bottom: {
                    height: O.document.size.height - O.origin.offset.bottom,
                    width: O.document.size.width
                },
                left: {
                    height: O.document.size.height,
                    width: O.origin.offset.left
                },
                right: {
                    height: O.document.size.height,
                    width: O.document.size.width - O.origin.offset.right
                },
                top: {
                    height: O.origin.offset.top,
                    width: O.document.size.width
                }
            };
            O.available.window = {
                bottom: {
                    height: Math.max(O.window.size.height - Math.max(O.origin.windowOffset.bottom, 0), 0),
                    width: O.window.size.width
                },
                left: {
                    height: O.window.size.height,
                    width: Math.max(O.origin.windowOffset.left, 0)
                },
                right: {
                    height: O.window.size.height,
                    width: Math.max(O.window.size.width - Math.max(O.origin.windowOffset.right, 0), 0)
                },
                top: {
                    height: Math.max(O.origin.windowOffset.top, 0),
                    width: O.window.size.width
                }
            };
            while (D[0].tagName.toLowerCase() != "html") {
                if (D.css("position") == "fixed") {
                    O.origin.fixedLineage = true;
                    break
                }
                D = D.parent()
            }
            return O
        },
        __optionsFormat: function() {
            if (typeof this.__options.animationDuration == "number") {
                this.__options.animationDuration = [this.__options.animationDuration, this.__options.animationDuration]
            }
            if (typeof this.__options.delay == "number") {
                this.__options.delay = [this.__options.delay, this.__options.delay]
            }
            if (typeof this.__options.delayTouch == "number") {
                this.__options.delayTouch = [this.__options.delayTouch, this.__options.delayTouch]
            }
            if (typeof this.__options.theme == "string") {
                this.__options.theme = [this.__options.theme]
            }
            if (typeof this.__options.parent == "string") {
                this.__options.parent = d(this.__options.parent)
            }
            if (this.__options.trigger == "hover") {
                this.__options.triggerOpen = {
                    mouseenter: true,
                    touchstart: true
                };
                this.__options.triggerClose = {
                    mouseleave: true,
                    originClick: true,
                    touchleave: true
                }
            } else {
                if (this.__options.trigger == "click") {
                    this.__options.triggerOpen = {
                        click: true,
                        tap: true
                    };
                    this.__options.triggerClose = {
                        click: true,
                        tap: true
                    }
                }
            }
            this._trigger("options");
            return this
        },
        __prepareGC: function() {
            var m = this;
            if (m.__options.selfDestruction) {
                m.__garbageCollector = setInterval(function() {
                    var n = new Date().getTime();
                    m.__touchEvents = d.grep(m.__touchEvents, function(p, o) {
                        return n - p.time > 60000
                    });
                    if (!a(m._$origin)) {
                        m.destroy()
                    }
                }, 20000)
            } else {
                clearInterval(m.__garbageCollector)
            }
            return m
        },
        __prepareOrigin: function() {
            var m = this;
            m._$origin.off("." + m.__namespace + "-triggerOpen");
            if (g.hasTouchCapability) {
                m._$origin.on("touchstart." + m.__namespace + "-triggerOpen touchend." + m.__namespace + "-triggerOpen touchcancel." + m.__namespace + "-triggerOpen", function(o) {
                    m._touchRecordEvent(o)
                })
            }
            if (m.__options.triggerOpen.click || (m.__options.triggerOpen.tap && g.hasTouchCapability)) {
                var n = "";
                if (m.__options.triggerOpen.click) {
                    n += "click." + m.__namespace + "-triggerOpen "
                }
                if (m.__options.triggerOpen.tap && g.hasTouchCapability) {
                    n += "touchend." + m.__namespace + "-triggerOpen"
                }
                m._$origin.on(n, function(o) {
                    if (m._touchIsMeaningfulEvent(o)) {
                        m._open(o)
                    }
                })
            }
            if (m.__options.triggerOpen.mouseenter || (m.__options.triggerOpen.touchstart && g.hasTouchCapability)) {
                var n = "";
                if (m.__options.triggerOpen.mouseenter) {
                    n += "mouseenter." + m.__namespace + "-triggerOpen "
                }
                if (m.__options.triggerOpen.touchstart && g.hasTouchCapability) {
                    n += "touchstart." + m.__namespace + "-triggerOpen"
                }
                m._$origin.on(n, function(o) {
                    if (m._touchIsTouchEvent(o) || !m._touchIsEmulatedEvent(o)) {
                        m.__pointerIsOverOrigin = true;
                        m._openShortly(o)
                    }
                })
            }
            if (m.__options.triggerClose.mouseleave || (m.__options.triggerClose.touchleave && g.hasTouchCapability)) {
                var n = "";
                if (m.__options.triggerClose.mouseleave) {
                    n += "mouseleave." + m.__namespace + "-triggerOpen "
                }
                if (m.__options.triggerClose.touchleave && g.hasTouchCapability) {
                    n += "touchend." + m.__namespace + "-triggerOpen touchcancel." + m.__namespace + "-triggerOpen"
                }
                m._$origin.on(n, function(o) {
                    if (m._touchIsMeaningfulEvent(o)) {
                        m.__pointerIsOverOrigin = false
                    }
                })
            }
            return m
        },
        __prepareTooltip: function() {
            var m = this,
                n = m.__options.interactive ? "auto" : "";
            m._$tooltip.attr("id", m.__namespace).css({
                "pointer-events": n,
                zIndex: m.__options.zIndex
            });
            d.each(m.__previousThemes, function(o, p) {
                m._$tooltip.removeClass(p)
            });
            d.each(m.__options.theme, function(o, p) {
                m._$tooltip.addClass(p)
            });
            m.__previousThemes = d.merge([], m.__options.theme);
            return m
        },
        __scrollHandler: function(p) {
            var m = this;
            if (m.__options.triggerClose.scroll) {
                m._close(p)
            } else {
                if (p.target === g.window.document) {
                    if (!m.__Geometry.origin.fixedLineage) {
                        if (m.__options.repositionOnScroll) {
                            m.reposition(p)
                        }
                    }
                } else {
                    var o = m.__geometry(),
                        r = false;
                    if (m._$origin.css("position") != "fixed") {
                        m.__$originParents.each(function(v, w) {
                            var u = d(w),
                                t = u.css("overflow-x"),
                                s = u.css("overflow-y");
                            if (t != "visible" || s != "visible") {
                                var x = w.getBoundingClientRect();
                                if (t != "visible") {
                                    if (o.origin.windowOffset.left < x.left || o.origin.windowOffset.right > x.right) {
                                        r = true;
                                        return false
                                    }
                                }
                                if (s != "visible") {
                                    if (o.origin.windowOffset.top < x.top || o.origin.windowOffset.bottom > x.bottom) {
                                        r = true;
                                        return false
                                    }
                                }
                            }
                            if (u.css("position") == "fixed") {
                                return false
                            }
                        })
                    }
                    if (r) {
                        m._$tooltip.css("visibility", "hidden")
                    } else {
                        m._$tooltip.css("visibility", "visible");
                        if (m.__options.repositionOnScroll) {
                            m.reposition(p)
                        } else {
                            var q = o.origin.offset.left - m.__Geometry.origin.offset.left,
                                n = o.origin.offset.top - m.__Geometry.origin.offset.top;
                            m._$tooltip.css({
                                left: m.__lastPosition.coord.left + q,
                                top: m.__lastPosition.coord.top + n
                            })
                        }
                    }
                }
                m._trigger({
                    type: "scroll",
                    event: p
                })
            }
            return m
        },
        __stateSet: function(m) {
            this.__state = m;
            this._trigger({
                type: "state",
                state: m
            });
            return this
        },
        __timeoutsClear: function() {
            clearTimeout(this.__timeouts.open);
            this.__timeouts.open = null;
            d.each(this.__timeouts.close, function(m, n) {
                clearTimeout(n)
            });
            this.__timeouts.close = [];
            return this
        },
        __trackerStart: function() {
            var m = this,
                n = m._$tooltip.find(".tooltipster-content");
            if (m.__options.trackTooltip) {
                m.__contentBcr = n[0].getBoundingClientRect()
            }
            m.__tracker = setInterval(function() {
                if (!a(m._$origin) || !a(m._$tooltip)) {
                    m._close()
                } else {
                    if (m.__options.trackOrigin) {
                        var p = m.__geometry(),
                            q = false;
                        if (l(p.origin.size, m.__Geometry.origin.size)) {
                            if (m.__Geometry.origin.fixedLineage) {
                                if (l(p.origin.windowOffset, m.__Geometry.origin.windowOffset)) {
                                    q = true
                                }
                            } else {
                                if (l(p.origin.offset, m.__Geometry.origin.offset)) {
                                    q = true
                                }
                            }
                        }
                        if (!q) {
                            if (m.__options.triggerClose.mouseleave) {
                                m._close()
                            } else {
                                m.reposition()
                            }
                        }
                    }
                    if (m.__options.trackTooltip) {
                        var o = n[0].getBoundingClientRect();
                        if (o.height !== m.__contentBcr.height || o.width !== m.__contentBcr.width) {
                            m.reposition();
                            m.__contentBcr = o
                        }
                    }
                }
            }, m.__options.trackerInterval);
            return m
        },
        _close: function(n, t) {
            var u = this,
                r = true;
            u._trigger({
                type: "close",
                event: n,
                stop: function() {
                    r = false
                }
            });
            if (r || u.__destroying) {
                if (t) {
                    u.__callbacks.close.push(t)
                }
                u.__callbacks.open = [];
                u.__timeoutsClear();
                var m = function() {
                    d.each(u.__callbacks.close, function(w, x) {
                        x.call(u, u, {
                            event: n,
                            origin: u._$origin[0]
                        })
                    });
                    u.__callbacks.close = []
                };
                if (u.__state != "closed") {
                    var p = true,
                        q = new Date(),
                        o = q.getTime(),
                        v = o + u.__options.animationDuration[1];
                    if (u.__state == "disappearing") {
                        if (v > u.__closingTime) {
                            p = false
                        }
                    }
                    if (p) {
                        u.__closingTime = v;
                        if (u.__state != "disappearing") {
                            u.__stateSet("disappearing")
                        }
                        var s = function() {
                            clearInterval(u.__tracker);
                            u._trigger({
                                type: "closing",
                                event: n
                            });
                            u._$tooltip.off("." + u.__namespace + "-triggerClose").removeClass("tooltipster-dying");
                            d(g.window).off("." + u.__namespace + "-triggerClose");
                            u.__$originParents.each(function(w, x) {
                                d(x).off("scroll." + u.__namespace + "-triggerClose")
                            });
                            u.__$originParents = null;
                            d("body").off("." + u.__namespace + "-triggerClose");
                            u._$origin.off("." + u.__namespace + "-triggerClose");
                            u._off("dismissable");
                            u.__stateSet("closed");
                            u._trigger({
                                type: "after",
                                event: n
                            });
                            if (u.__options.functionAfter) {
                                u.__options.functionAfter.call(u, u, {
                                    event: n,
                                    origin: u._$origin[0]
                                })
                            }
                            m()
                        };
                        if (g.hasTransitions) {
                            u._$tooltip.css({
                                "-moz-animation-duration": u.__options.animationDuration[1] + "ms",
                                "-ms-animation-duration": u.__options.animationDuration[1] + "ms",
                                "-o-animation-duration": u.__options.animationDuration[1] + "ms",
                                "-webkit-animation-duration": u.__options.animationDuration[1] + "ms",
                                "animation-duration": u.__options.animationDuration[1] + "ms",
                                "transition-duration": u.__options.animationDuration[1] + "ms"
                            });
                            u._$tooltip.clearQueue().removeClass("tooltipster-show").addClass("tooltipster-dying");
                            if (u.__options.animationDuration[1] > 0) {
                                u._$tooltip.delay(u.__options.animationDuration[1])
                            }
                            u._$tooltip.queue(s)
                        } else {
                            u._$tooltip.stop().fadeOut(u.__options.animationDuration[1], s)
                        }
                    }
                } else {
                    m()
                }
            }
            return u
        },
        _off: function() {
            this.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));
            return this
        },
        _on: function() {
            this.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));
            return this
        },
        _one: function() {
            this.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));
            return this
        },
        _open: function(m, t) {
            var v = this;
            if (!v.__destroying) {
                if (a(v._$origin) && v.__enabled) {
                    var r = true;
                    if (v.__state == "closed") {
                        v._trigger({
                            type: "before",
                            event: m,
                            stop: function() {
                                r = false
                            }
                        });
                        if (r && v.__options.functionBefore) {
                            r = v.__options.functionBefore.call(v, v, {
                                event: m,
                                origin: v._$origin[0]
                            })
                        }
                    }
                    if (r !== false) {
                        if (v.__Content !== null) {
                            if (t) {
                                v.__callbacks.open.push(t)
                            }
                            v.__callbacks.close = [];
                            v.__timeoutsClear();
                            var n, s = function() {
                                if (v.__state != "stable") {
                                    v.__stateSet("stable")
                                }
                                d.each(v.__callbacks.open, function(w, x) {
                                    x.call(v, v, {
                                        origin: v._$origin[0],
                                        tooltip: v._$tooltip[0]
                                    })
                                });
                                v.__callbacks.open = []
                            };
                            if (v.__state !== "closed") {
                                n = 0;
                                if (v.__state === "disappearing") {
                                    v.__stateSet("appearing");
                                    if (g.hasTransitions) {
                                        v._$tooltip.clearQueue().removeClass("tooltipster-dying").addClass("tooltipster-show");
                                        if (v.__options.animationDuration[0] > 0) {
                                            v._$tooltip.delay(v.__options.animationDuration[0])
                                        }
                                        v._$tooltip.queue(s)
                                    } else {
                                        v._$tooltip.stop().fadeIn(s)
                                    }
                                } else {
                                    if (v.__state == "stable") {
                                        s()
                                    }
                                }
                            } else {
                                v.__stateSet("appearing");
                                n = v.__options.animationDuration[0];
                                v.__contentInsert();
                                v.reposition(m, true);
                                if (g.hasTransitions) {
                                    v._$tooltip.addClass("tooltipster-" + v.__options.animation).addClass("tooltipster-initial").css({
                                        "-moz-animation-duration": v.__options.animationDuration[0] + "ms",
                                        "-ms-animation-duration": v.__options.animationDuration[0] + "ms",
                                        "-o-animation-duration": v.__options.animationDuration[0] + "ms",
                                        "-webkit-animation-duration": v.__options.animationDuration[0] + "ms",
                                        "animation-duration": v.__options.animationDuration[0] + "ms",
                                        "transition-duration": v.__options.animationDuration[0] + "ms"
                                    });
                                    setTimeout(function() {
                                        if (v.__state != "closed") {
                                            v._$tooltip.addClass("tooltipster-show").removeClass("tooltipster-initial");
                                            if (v.__options.animationDuration[0] > 0) {
                                                v._$tooltip.delay(v.__options.animationDuration[0])
                                            }
                                            v._$tooltip.queue(s)
                                        }
                                    }, 0)
                                } else {
                                    v._$tooltip.css("display", "none").fadeIn(v.__options.animationDuration[0], s)
                                }
                                v.__trackerStart();
                                d(g.window).on("resize." + v.__namespace + "-triggerClose", function(x) {
                                    var w = d(document.activeElement);
                                    if ((!w.is("input") && !w.is("textarea")) || !d.contains(v._$tooltip[0], w[0])) {
                                        v.reposition(x)
                                    }
                                }).on("scroll." + v.__namespace + "-triggerClose", function(w) {
                                    v.__scrollHandler(w)
                                });
                                v.__$originParents = v._$origin.parents();
                                v.__$originParents.each(function(w, x) {
                                    d(x).on("scroll." + v.__namespace + "-triggerClose", function(y) {
                                        v.__scrollHandler(y)
                                    })
                                });
                                if (v.__options.triggerClose.mouseleave || (v.__options.triggerClose.touchleave && g.hasTouchCapability)) {
                                    v._on("dismissable", function(w) {
                                        if (w.dismissable) {
                                            if (w.delay) {
                                                q = setTimeout(function() {
                                                    v._close(w.event)
                                                }, w.delay);
                                                v.__timeouts.close.push(q)
                                            } else {
                                                v._close(w)
                                            }
                                        } else {
                                            clearTimeout(q)
                                        }
                                    });
                                    var p = v._$origin,
                                        u = "",
                                        o = "",
                                        q = null;
                                    if (v.__options.interactive) {
                                        p = p.add(v._$tooltip)
                                    }
                                    if (v.__options.triggerClose.mouseleave) {
                                        u += "mouseenter." + v.__namespace + "-triggerClose ";
                                        o += "mouseleave." + v.__namespace + "-triggerClose "
                                    }
                                    if (v.__options.triggerClose.touchleave && g.hasTouchCapability) {
                                        u += "touchstart." + v.__namespace + "-triggerClose";
                                        o += "touchend." + v.__namespace + "-triggerClose touchcancel." + v.__namespace + "-triggerClose"
                                    }
                                    p.on(o, function(x) {
                                        if (v._touchIsTouchEvent(x) || !v._touchIsEmulatedEvent(x)) {
                                            var w = (x.type == "mouseleave") ? v.__options.delay : v.__options.delayTouch;
                                            v._trigger({
                                                delay: w[1],
                                                dismissable: true,
                                                event: x,
                                                type: "dismissable"
                                            })
                                        }
                                    }).on(u, function(w) {
                                        if (v._touchIsTouchEvent(w) || !v._touchIsEmulatedEvent(w)) {
                                            v._trigger({
                                                dismissable: false,
                                                event: w,
                                                type: "dismissable"
                                            })
                                        }
                                    })
                                }
                                if (v.__options.triggerClose.originClick) {
                                    v._$origin.on("click." + v.__namespace + "-triggerClose", function(w) {
                                        if (!v._touchIsTouchEvent(w) && !v._touchIsEmulatedEvent(w)) {
                                            v._close(w)
                                        }
                                    })
                                }
                                if (v.__options.triggerClose.click || (v.__options.triggerClose.tap && g.hasTouchCapability)) {
                                    setTimeout(function() {
                                        if (v.__state != "closed") {
                                            var w = "";
                                            if (v.__options.triggerClose.click) {
                                                w += "click." + v.__namespace + "-triggerClose "
                                            }
                                            if (v.__options.triggerClose.tap && g.hasTouchCapability) {
                                                w += "touchend." + v.__namespace + "-triggerClose"
                                            }
                                            d("body").on(w, function(x) {
                                                if (v._touchIsMeaningfulEvent(x)) {
                                                    v._touchRecordEvent(x);
                                                    if (!v.__options.interactive || !d.contains(v._$tooltip[0], x.target)) {
                                                        v._close(x)
                                                    }
                                                }
                                            });
                                            if (v.__options.triggerClose.tap && g.hasTouchCapability) {
                                                d("body").on("touchstart." + v.__namespace + "-triggerClose", function(x) {
                                                    v._touchRecordEvent(x)
                                                })
                                            }
                                        }
                                    }, 0)
                                }
                                v._trigger("ready");
                                if (v.__options.functionReady) {
                                    v.__options.functionReady.call(v, v, {
                                        origin: v._$origin[0],
                                        tooltip: v._$tooltip[0]
                                    })
                                }
                            }
                            if (v.__options.timer > 0) {
                                var q = setTimeout(function() {
                                    v._close()
                                }, v.__options.timer + n);
                                v.__timeouts.close.push(q)
                            }
                        }
                    }
                }
            }
            return v
        },
        _openShortly: function(p) {
            var m = this,
                o = true;
            if (m.__state != "stable" && m.__state != "appearing") {
                if (!m.__timeouts.open) {
                    m._trigger({
                        type: "start",
                        event: p,
                        stop: function() {
                            o = false
                        }
                    });
                    if (o) {
                        var n = (p.type.indexOf("touch") == 0) ? m.__options.delayTouch : m.__options.delay;
                        if (n[0]) {
                            m.__timeouts.open = setTimeout(function() {
                                m.__timeouts.open = null;
                                if (m.__pointerIsOverOrigin && m._touchIsMeaningfulEvent(p)) {
                                    m._trigger("startend");
                                    m._open(p)
                                } else {
                                    m._trigger("startcancel")
                                }
                            }, n[0])
                        } else {
                            m._trigger("startend");
                            m._open(p)
                        }
                    }
                }
            }
            return m
        },
        _optionsExtract: function(q, m) {
            var n = this,
                o = d.extend(true, {}, m);
            var p = n.__options[q];
            if (!p) {
                p = {};
                d.each(m, function(r, s) {
                    var t = n.__options[r];
                    if (t !== undefined) {
                        p[r] = t
                    }
                })
            }
            d.each(o, function(r, s) {
                if (p[r] !== undefined) {
                    if ((typeof s == "object" && !(s instanceof Array) && s != null) && (typeof p[r] == "object" && !(p[r] instanceof Array) && p[r] != null)) {
                        d.extend(o[r], p[r])
                    } else {
                        o[r] = p[r]
                    }
                }
            });
            return o
        },
        _plug: function(n) {
            var m = d.tooltipster._plugin(n);
            if (m) {
                if (m.instance) {
                    d.tooltipster.__bridge(m.instance, this, m.name)
                }
            } else {
                throw new Error('The "' + n + '" plugin is not defined')
            }
            return this
        },
        _touchIsEmulatedEvent: function(p) {
            var o = false,
                m = new Date().getTime();
            for (var n = this.__touchEvents.length - 1; n >= 0; n--) {
                var q = this.__touchEvents[n];
                if (m - q.time < 500) {
                    if (q.target === p.target) {
                        o = true
                    }
                } else {
                    break
                }
            }
            return o
        },
        _touchIsMeaningfulEvent: function(m) {
            return ((this._touchIsTouchEvent(m) && !this._touchSwiped(m.target)) || (!this._touchIsTouchEvent(m) && !this._touchIsEmulatedEvent(m)))
        },
        _touchIsTouchEvent: function(m) {
            return m.type.indexOf("touch") == 0
        },
        _touchRecordEvent: function(m) {
            if (this._touchIsTouchEvent(m)) {
                m.time = new Date().getTime();
                this.__touchEvents.push(m)
            }
            return this
        },
        _touchSwiped: function(p) {
            var n = false;
            for (var m = this.__touchEvents.length - 1; m >= 0; m--) {
                var o = this.__touchEvents[m];
                if (o.type == "touchmove") {
                    n = true;
                    break
                } else {
                    if (o.type == "touchstart" && p === o.target) {
                        break
                    }
                }
            }
            return n
        },
        _trigger: function() {
            var m = Array.prototype.slice.apply(arguments);
            if (typeof m[0] == "string") {
                m[0] = {
                    type: m[0]
                }
            }
            m[0].instance = this;
            m[0].origin = this._$origin ? this._$origin[0] : null;
            m[0].tooltip = this._$tooltip ? this._$tooltip[0] : null;
            this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, m);
            d.tooltipster._trigger.apply(d.tooltipster, m);
            this.__$emitterPublic.trigger.apply(this.__$emitterPublic, m);
            return this
        },
        _unplug: function(o) {
            var m = this;
            if (m[o]) {
                var n = d.tooltipster._plugin(o);
                if (n.instance) {
                    d.each(n.instance, function(p, q) {
                        if (m[p] && m[p].bridged === m[o]) {
                            delete m[p]
                        }
                    })
                }
                if (m[o].__destroy) {
                    m[o].__destroy()
                }
                delete m[o]
            }
            return m
        },
        close: function(m) {
            if (!this.__destroyed) {
                this._close(null, m)
            } else {
                this.__destroyError()
            }
            return this
        },
        content: function(n) {
            var m = this;
            if (n === undefined) {
                return m.__Content
            } else {
                if (!m.__destroyed) {
                    m.__contentSet(n);
                    if (m.__Content !== null) {
                        if (m.__state !== "closed") {
                            m.__contentInsert();
                            m.reposition();
                            if (m.__options.updateAnimation) {
                                if (g.hasTransitions) {
                                    var o = m.__options.updateAnimation;
                                    m._$tooltip.addClass("tooltipster-update-" + o);
                                    setTimeout(function() {
                                        if (m.__state != "closed") {
                                            m._$tooltip.removeClass("tooltipster-update-" + o)
                                        }
                                    }, 1000)
                                } else {
                                    m._$tooltip.fadeTo(200, 0.5, function() {
                                        if (m.__state != "closed") {
                                            m._$tooltip.fadeTo(200, 1)
                                        }
                                    })
                                }
                            }
                        }
                    } else {
                        m._close()
                    }
                } else {
                    m.__destroyError()
                }
                return m
            }
        },
        destroy: function() {
            var m = this;
            if (!m.__destroyed) {
                if (!m.__destroying) {
                    m.__destroying = true;
                    m._close(null, function() {
                        m._trigger("destroy");
                        m.__destroying = false;
                        m.__destroyed = true;
                        m._$origin.removeData(m.__namespace).off("." + m.__namespace + "-triggerOpen");
                        d("body").off("." + m.__namespace + "-triggerOpen");
                        var n = m._$origin.data("tooltipster-ns");
                        if (n) {
                            if (n.length === 1) {
                                var o = null;
                                if (m.__options.restoration == "previous") {
                                    o = m._$origin.data("tooltipster-initialTitle")
                                } else {
                                    if (m.__options.restoration == "current") {
                                        o = (typeof m.__Content == "string") ? m.__Content : d("<div></div>").append(m.__Content).html()
                                    }
                                }
                                if (o) {
                                    m._$origin.attr("title", o)
                                }
                                m._$origin.removeClass("tooltipstered");
                                m._$origin.removeData("tooltipster-ns").removeData("tooltipster-initialTitle")
                            } else {
                                n = d.grep(n, function(q, p) {
                                    return q !== m.__namespace
                                });
                                m._$origin.data("tooltipster-ns", n)
                            }
                        }
                        m._trigger("destroyed");
                        m._off();
                        m.off();
                        m.__Content = null;
                        m.__$emitterPrivate = null;
                        m.__$emitterPublic = null;
                        m.__options.parent = null;
                        m._$origin = null;
                        m._$tooltip = null;
                        d.tooltipster.__instancesLatestArr = d.grep(d.tooltipster.__instancesLatestArr, function(q, p) {
                            return m !== q
                        });
                        clearInterval(m.__garbageCollector)
                    })
                }
            } else {
                m.__destroyError()
            }
            return m
        },
        disable: function() {
            if (!this.__destroyed) {
                this._close();
                this.__enabled = false;
                return this
            } else {
                this.__destroyError()
            }
            return this
        },
        elementOrigin: function() {
            if (!this.__destroyed) {
                return this._$origin[0]
            } else {
                this.__destroyError()
            }
        },
        elementTooltip: function() {
            return this._$tooltip ? this._$tooltip[0] : null
        },
        enable: function() {
            this.__enabled = true;
            return this
        },
        hide: function(m) {
            return this.close(m)
        },
        instance: function() {
            return this
        },
        off: function() {
            if (!this.__destroyed) {
                this.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments))
            }
            return this
        },
        on: function() {
            if (!this.__destroyed) {
                this.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments))
            } else {
                this.__destroyError()
            }
            return this
        },
        one: function() {
            if (!this.__destroyed) {
                this.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments))
            } else {
                this.__destroyError()
            }
            return this
        },
        open: function(m) {
            if (!this.__destroyed && !this.__destroying) {
                this._open(null, m)
            } else {
                this.__destroyError()
            }
            return this
        },
        option: function(n, m) {
            if (m === undefined) {
                return this.__options[n]
            } else {
                if (!this.__destroyed) {
                    this.__options[n] = m;
                    this.__optionsFormat();
                    if (d.inArray(n, ["trigger", "triggerClose", "triggerOpen"]) >= 0) {
                        this.__prepareOrigin()
                    }
                    if (n === "selfDestruction") {
                        this.__prepareGC()
                    }
                } else {
                    this.__destroyError()
                }
                return this
            }
        },
        reposition: function(n, o) {
            var m = this;
            if (!m.__destroyed) {
                if (m.__state != "closed" && a(m._$origin)) {
                    if (o || a(m._$tooltip)) {
                        if (!o) {
                            m._$tooltip.detach()
                        }
                        m.__Geometry = m.__geometry();
                        m._trigger({
                            type: "reposition",
                            event: n,
                            helper: {
                                geo: m.__Geometry
                            }
                        })
                    }
                }
            } else {
                m.__destroyError()
            }
            return m
        },
        show: function(m) {
            return this.open(m)
        },
        status: function() {
            return {
                destroyed: this.__destroyed,
                destroying: this.__destroying,
                enabled: this.__enabled,
                open: this.__state !== "closed",
                state: this.__state
            }
        },
        triggerHandler: function() {
            if (!this.__destroyed) {
                this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments))
            } else {
                this.__destroyError()
            }
            return this
        }
    };
    d.fn.tooltipster = function() {
        var r = Array.prototype.slice.apply(arguments),
            o = "You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE.";
        if (this.length === 0) {
            return this
        } else {
            if (typeof r[0] === "string") {
                var u = "#*$~&";
                this.each(function() {
                    var y = d(this).data("tooltipster-ns"),
                        v = y ? d(this).data(y[0]) : null;
                    if (v) {
                        if (typeof v[r[0]] === "function") {
                            if (this.length > 1 && r[0] == "content" && (r[1] instanceof d || (typeof r[1] == "object" && r[1] != null && r[1].tagName)) && !v.__options.contentCloning && v.__options.debug) {
                                console.log(o)
                            }
                            var z = v[r[0]](r[1], r[2])
                        } else {
                            throw new Error('Unknown method "' + r[0] + '"')
                        }
                        if (z !== v || r[0] === "instance") {
                            u = z;
                            return false
                        }
                    } else {
                        throw new Error("You called Tooltipster's \"" + r[0] + '" method on an uninitialized element')
                    }
                });
                return (u !== "#*$~&") ? u : this
            } else {
                d.tooltipster.__instancesLatestArr = [];
                var p = r[0] && r[0].multiple !== undefined,
                    x = (p && r[0].multiple) || (!p && c.multiple),
                    s = r[0] && r[0].content !== undefined,
                    q = (s && r[0].content) || (!s && c.content),
                    n = r[0] && r[0].contentCloning !== undefined,
                    w = (n && r[0].contentCloning) || (!n && c.contentCloning),
                    t = r[0] && r[0].debug !== undefined,
                    m = (t && r[0].debug) || (!t && c.debug);
                if (this.length > 1 && (q instanceof d || (typeof q == "object" && q != null && q.tagName)) && !w && m) {
                    console.log(o)
                }
                this.each(function() {
                    var y = false,
                        A = d(this),
                        v = A.data("tooltipster-ns"),
                        z = null;
                    if (!v) {
                        y = true
                    } else {
                        if (x) {
                            y = true
                        } else {
                            if (m) {
                                console.log("Tooltipster: one or more tooltips are already attached to the element below. Ignoring.");
                                console.log(this)
                            }
                        }
                    }
                    if (y) {
                        z = new d.Tooltipster(this, r[0]);
                        if (!v) {
                            v = []
                        }
                        v.push(z.__namespace);
                        A.data("tooltipster-ns", v);
                        A.data(z.__namespace, z);
                        if (z.__options.functionInit) {
                            z.__options.functionInit.call(z, z, {
                                origin: this
                            })
                        }
                        z._trigger("init")
                    }
                    d.tooltipster.__instancesLatestArr.push(z)
                });
                return this
            }
        }
    };

    function j(m) {
        this.$container;
        this.constraints = null;
        this.__$tooltip;
        this.__init(m)
    }
    j.prototype = {
        __init: function(m) {
            this.__$tooltip = m;
            this.__$tooltip.css({
                left: 0,
                overflow: "hidden",
                position: "absolute",
                top: 0
            }).find(".tooltipster-content").css("overflow", "auto");
            this.$container = d('<div class="tooltipster-ruler"></div>').append(this.__$tooltip).appendTo("body")
        },
        __forceRedraw: function() {
            var m = this.__$tooltip.parent();
            this.__$tooltip.detach();
            this.__$tooltip.appendTo(m)
        },
        constrain: function(n, m) {
            this.constraints = {
                width: n,
                height: m
            };
            this.__$tooltip.css({
                display: "block",
                height: "",
                overflow: "auto",
                width: n
            });
            return this
        },
        destroy: function() {
            this.__$tooltip.detach().find(".tooltipster-content").css({
                display: "",
                overflow: ""
            });
            this.$container.remove()
        },
        free: function() {
            this.constraints = null;
            this.__$tooltip.css({
                display: "",
                height: "",
                overflow: "visible",
                width: ""
            });
            return this
        },
        measure: function() {
            this.__forceRedraw();
            var r = this.__$tooltip[0].getBoundingClientRect(),
                n = {
                    size: {
                        height: r.height || r.bottom,
                        width: r.width || r.right
                    }
                };
            if (this.constraints) {
                var o = this.__$tooltip.find(".tooltipster-content"),
                    m = this.__$tooltip.outerHeight(),
                    p = o[0].getBoundingClientRect(),
                    q = {
                        height: m <= this.constraints.height,
                        width: (r.width <= this.constraints.width && p.width >= o[0].scrollWidth - 1)
                    };
                n.fits = q.height && q.width
            }
            if (g.IE && g.IE <= 11 && n.size.width !== g.window.document.documentElement.clientWidth) {
                n.size.width = Math.ceil(n.size.width) + 1
            }
            return n
        }
    };

    function l(n, m) {
        var o = true;
        d.each(n, function(q, p) {
            if (m[q] === undefined || n[q] !== m[q]) {
                o = false;
                return false
            }
        });
        return o
    }

    function a(o) {
        var n = o.attr("id"),
            m = n ? g.window.document.getElementById(n) : null;
        return m ? m === o[0] : d.contains(g.window.document.body, o[0])
    }
    var e = navigator.userAgent.toLowerCase();
    if (e.indexOf("msie") != -1) {
        g.IE = parseInt(e.split("msie")[1])
    } else {
        if (e.toLowerCase().indexOf("trident") !== -1 && e.indexOf(" rv:11") !== -1) {
            g.IE = 11
        } else {
            if (e.toLowerCase().indexOf("edge/") != -1) {
                g.IE = parseInt(e.toLowerCase().split("edge/")[1])
            }
        }
    }

    function k() {
        if (!f) {
            return false
        }
        var m = f.document.body || f.document.documentElement,
            q = m.style,
            r = "transition",
            n = ["Moz", "Webkit", "Khtml", "O", "ms"];
        if (typeof q[r] == "string") {
            return true
        }
        r = r.charAt(0).toUpperCase() + r.substr(1);
        for (var o = 0; o < n.length; o++) {
            if (typeof q[n[o] + r] == "string") {
                return true
            }
        }
        return false
    }
    var h = "tooltipster.sideTip";
    d.tooltipster._plugin({
        name: h,
        instance: {
            __defaults: function() {
                return {
                    arrow: true,
                    distance: 6,
                    functionPosition: null,
                    maxWidth: null,
                    minIntersection: 16,
                    minWidth: 0,
                    position: null,
                    side: "top",
                    viewportAware: true
                }
            },
            __init: function(m) {
                var n = this;
                n.__instance = m;
                n.__namespace = "tooltipster-sideTip-" + Math.round(Math.random() * 1000000);
                n.__previousState = "closed";
                n.__options;
                n.__optionsFormat();
                n.__instance._on("state." + n.__namespace, function(o) {
                    if (o.state == "closed") {
                        n.__close()
                    } else {
                        if (o.state == "appearing" && n.__previousState == "closed") {
                            n.__create()
                        }
                    }
                    n.__previousState = o.state
                });
                n.__instance._on("options." + n.__namespace, function() {
                    n.__optionsFormat()
                });
                n.__instance._on("reposition." + n.__namespace, function(o) {
                    n.__reposition(o.event, o.helper)
                })
            },
            __close: function() {
                if (this.__instance.content() instanceof d) {
                    this.__instance.content().detach()
                }
                this.__instance._$tooltip.remove();
                this.__instance._$tooltip = null
            },
            __create: function() {
                var m = d('<div class="tooltipster-base tooltipster-sidetip"><div class="tooltipster-box"><div class="tooltipster-content"></div></div><div class="tooltipster-arrow"><div class="tooltipster-arrow-uncropped"><div class="tooltipster-arrow-border"></div><div class="tooltipster-arrow-background"></div></div></div></div>');
                if (!this.__options.arrow) {
                    m.find(".tooltipster-box").css("margin", 0).end().find(".tooltipster-arrow").hide()
                }
                if (this.__options.minWidth) {
                    m.css("min-width", this.__options.minWidth + "px")
                }
                if (this.__options.maxWidth) {
                    m.css("max-width", this.__options.maxWidth + "px")
                }
                this.__instance._$tooltip = m;
                this.__instance._trigger("created")
            },
            __destroy: function() {
                this.__instance._off("." + self.__namespace)
            },
            __optionsFormat: function() {
                var m = this;
                m.__options = m.__instance._optionsExtract(h, m.__defaults());
                if (m.__options.position) {
                    m.__options.side = m.__options.position
                }
                if (typeof m.__options.distance != "object") {
                    m.__options.distance = [m.__options.distance]
                }
                if (m.__options.distance.length < 4) {
                    if (m.__options.distance[1] === undefined) {
                        m.__options.distance[1] = m.__options.distance[0]
                    }
                    if (m.__options.distance[2] === undefined) {
                        m.__options.distance[2] = m.__options.distance[0]
                    }
                    if (m.__options.distance[3] === undefined) {
                        m.__options.distance[3] = m.__options.distance[1]
                    }
                    m.__options.distance = {
                        top: m.__options.distance[0],
                        right: m.__options.distance[1],
                        bottom: m.__options.distance[2],
                        left: m.__options.distance[3]
                    }
                }
                if (typeof m.__options.side == "string") {
                    var n = {
                        top: "bottom",
                        right: "left",
                        bottom: "top",
                        left: "right"
                    };
                    m.__options.side = [m.__options.side, n[m.__options.side]];
                    if (m.__options.side[0] == "left" || m.__options.side[0] == "right") {
                        m.__options.side.push("top", "bottom")
                    } else {
                        m.__options.side.push("right", "left")
                    }
                }
                if (d.tooltipster._env.IE === 6 && m.__options.arrow !== true) {
                    m.__options.arrow = false
                }
            },
            __reposition: function(m, o) {
                var z = this,
                    q, s = z.__targetFind(o),
                    n = [];
                z.__instance._$tooltip.detach();
                var t = z.__instance._$tooltip.clone(),
                    y = d.tooltipster._getRuler(t),
                    p = false,
                    r = z.__instance.option("animation");
                if (r) {
                    t.removeClass("tooltipster-" + r)
                }
                d.each(["window", "document"], function(E, C) {
                    var B = null;
                    z.__instance._trigger({
                        container: C,
                        helper: o,
                        satisfied: p,
                        takeTest: function(G) {
                            B = G
                        },
                        results: n,
                        type: "positionTest"
                    });
                    if (B == true || (B != false && p == false && (C != "window" || z.__options.viewportAware))) {
                        for (var E = 0; E < z.__options.side.length; E++) {
                            var F = {
                                    horizontal: 0,
                                    vertical: 0
                                },
                                D = z.__options.side[E];
                            if (D == "top" || D == "bottom") {
                                F.vertical = z.__options.distance[D]
                            } else {
                                F.horizontal = z.__options.distance[D]
                            }
                            z.__sideChange(t, D);
                            d.each(["natural", "constrained"], function(J, K) {
                                B = null;
                                z.__instance._trigger({
                                    container: C,
                                    event: m,
                                    helper: o,
                                    mode: K,
                                    results: n,
                                    satisfied: p,
                                    side: D,
                                    takeTest: function(L) {
                                        B = L
                                    },
                                    type: "positionTest"
                                });
                                if (B == true || (B != false && p == false)) {
                                    var H = {
                                        container: C,
                                        distance: F,
                                        fits: null,
                                        mode: K,
                                        outerSize: null,
                                        side: D,
                                        size: null,
                                        target: s[D],
                                        whole: null
                                    };
                                    var I = (K == "natural") ? y.free() : y.constrain(o.geo.available[C][D].width - F.horizontal, o.geo.available[C][D].height - F.vertical),
                                        G = I.measure();
                                    H.size = G.size;
                                    H.outerSize = {
                                        height: G.size.height + F.vertical,
                                        width: G.size.width + F.horizontal
                                    };
                                    if (K == "natural") {
                                        if (o.geo.available[C][D].width >= H.outerSize.width && o.geo.available[C][D].height >= H.outerSize.height) {
                                            H.fits = true
                                        } else {
                                            H.fits = false
                                        }
                                    } else {
                                        H.fits = G.fits
                                    }
                                    if (C == "window") {
                                        if (!H.fits) {
                                            H.whole = false
                                        } else {
                                            if (D == "top" || D == "bottom") {
                                                H.whole = (o.geo.origin.windowOffset.right >= z.__options.minIntersection && o.geo.window.size.width - o.geo.origin.windowOffset.left >= z.__options.minIntersection)
                                            } else {
                                                H.whole = (o.geo.origin.windowOffset.bottom >= z.__options.minIntersection && o.geo.window.size.height - o.geo.origin.windowOffset.top >= z.__options.minIntersection)
                                            }
                                        }
                                    }
                                    n.push(H);
                                    if (H.whole) {
                                        p = true
                                    } else {
                                        if (H.mode == "natural" && (H.fits || H.size.width <= o.geo.available[C][D].width)) {
                                            return false
                                        }
                                    }
                                }
                            })
                        }
                    }
                });
                z.__instance._trigger({
                    edit: function(B) {
                        n = B
                    },
                    event: m,
                    helper: o,
                    results: n,
                    type: "positionTested"
                });
                n.sort(function(D, C) {
                    if (D.whole && !C.whole) {
                        return -1
                    } else {
                        if (!D.whole && C.whole) {
                            return 1
                        } else {
                            if (D.whole && C.whole) {
                                var B = z.__options.side.indexOf(D.side),
                                    E = z.__options.side.indexOf(C.side);
                                if (B < E) {
                                    return -1
                                } else {
                                    if (B > E) {
                                        return 1
                                    } else {
                                        return D.mode == "natural" ? -1 : 1
                                    }
                                }
                            } else {
                                if (D.fits && !C.fits) {
                                    return -1
                                } else {
                                    if (!D.fits && C.fits) {
                                        return 1
                                    } else {
                                        if (D.fits && C.fits) {
                                            var B = z.__options.side.indexOf(D.side),
                                                E = z.__options.side.indexOf(C.side);
                                            if (B < E) {
                                                return -1
                                            } else {
                                                if (B > E) {
                                                    return 1
                                                } else {
                                                    return D.mode == "natural" ? -1 : 1
                                                }
                                            }
                                        } else {
                                            if (D.container == "document" && D.side == "bottom" && D.mode == "natural") {
                                                return -1
                                            } else {
                                                return 1
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                });
                q = n[0];
                q.coord = {};
                switch (q.side) {
                    case "left":
                    case "right":
                        q.coord.top = Math.floor(q.target - q.size.height / 2);
                        break;
                    case "bottom":
                    case "top":
                        q.coord.left = Math.floor(q.target - q.size.width / 2);
                        break
                }
                switch (q.side) {
                    case "left":
                        q.coord.left = o.geo.origin.windowOffset.left - q.outerSize.width;
                        break;
                    case "right":
                        q.coord.left = o.geo.origin.windowOffset.right + q.distance.horizontal;
                        break;
                    case "top":
                        q.coord.top = o.geo.origin.windowOffset.top - q.outerSize.height;
                        break;
                    case "bottom":
                        q.coord.top = o.geo.origin.windowOffset.bottom + q.distance.vertical;
                        break
                }
                if (q.container == "window") {
                    if (q.side == "top" || q.side == "bottom") {
                        if (q.coord.left < 0) {
                            if (o.geo.origin.windowOffset.right - this.__options.minIntersection >= 0) {
                                q.coord.left = 0
                            } else {
                                q.coord.left = o.geo.origin.windowOffset.right - this.__options.minIntersection - 1
                            }
                        } else {
                            if (q.coord.left > o.geo.window.size.width - q.size.width) {
                                if (o.geo.origin.windowOffset.left + this.__options.minIntersection <= o.geo.window.size.width) {
                                    q.coord.left = o.geo.window.size.width - q.size.width
                                } else {
                                    q.coord.left = o.geo.origin.windowOffset.left + this.__options.minIntersection + 1 - q.size.width
                                }
                            }
                        }
                    } else {
                        if (q.coord.top < 0) {
                            if (o.geo.origin.windowOffset.bottom - this.__options.minIntersection >= 0) {
                                q.coord.top = 0
                            } else {
                                q.coord.top = o.geo.origin.windowOffset.bottom - this.__options.minIntersection - 1
                            }
                        } else {
                            if (q.coord.top > o.geo.window.size.height - q.size.height) {
                                if (o.geo.origin.windowOffset.top + this.__options.minIntersection <= o.geo.window.size.height) {
                                    q.coord.top = o.geo.window.size.height - q.size.height
                                } else {
                                    q.coord.top = o.geo.origin.windowOffset.top + this.__options.minIntersection + 1 - q.size.height
                                }
                            }
                        }
                    }
                } else {
                    if (q.coord.left > o.geo.window.size.width - q.size.width) {
                        q.coord.left = o.geo.window.size.width - q.size.width
                    }
                    if (q.coord.left < 0) {
                        q.coord.left = 0
                    }
                }
                z.__sideChange(t, q.side);
                o.tooltipClone = t[0];
                o.tooltipParent = z.__instance.option("parent").parent[0];
                o.mode = q.mode;
                o.whole = q.whole;
                o.origin = z.__instance._$origin[0];
                o.tooltip = z.__instance._$tooltip[0];
                delete q.container;
                delete q.fits;
                delete q.mode;
                delete q.outerSize;
                delete q.whole;
                q.distance = q.distance.horizontal || q.distance.vertical;
                var u = d.extend(true, {}, q);
                z.__instance._trigger({
                    edit: function(B) {
                        q = B
                    },
                    event: m,
                    helper: o,
                    position: u,
                    type: "position"
                });
                if (z.__options.functionPosition) {
                    var A = z.__options.functionPosition.call(z, z.__instance, o, u);
                    if (A) {
                        q = A
                    }
                }
                y.destroy();
                var v, x;
                if (q.side == "top" || q.side == "bottom") {
                    v = {
                        prop: "left",
                        val: q.target - q.coord.left
                    };
                    x = q.size.width - this.__options.minIntersection
                } else {
                    v = {
                        prop: "top",
                        val: q.target - q.coord.top
                    };
                    x = q.size.height - this.__options.minIntersection
                }
                if (v.val < this.__options.minIntersection) {
                    v.val = this.__options.minIntersection
                } else {
                    if (v.val > x) {
                        v.val = x
                    }
                }
                var w;
                if (o.geo.origin.fixedLineage) {
                    w = o.geo.origin.windowOffset
                } else {
                    w = {
                        left: o.geo.origin.windowOffset.left + o.geo.window.scroll.left,
                        top: o.geo.origin.windowOffset.top + o.geo.window.scroll.top
                    }
                }
                q.coord = {
                    left: w.left + (q.coord.left - o.geo.origin.windowOffset.left),
                    top: w.top + (q.coord.top - o.geo.origin.windowOffset.top)
                };
                z.__sideChange(z.__instance._$tooltip, q.side);
                if (o.geo.origin.fixedLineage) {
                    z.__instance._$tooltip.css("position", "fixed")
                } else {
                    z.__instance._$tooltip.css("position", "")
                }
                z.__instance._$tooltip.css({
                    left: q.coord.left,
                    top: q.coord.top,
                    height: q.size.height,
                    width: q.size.width
                }).find(".tooltipster-arrow").css({
                    left: "",
                    top: ""
                }).css(v.prop, v.val);
                z.__instance._$tooltip.appendTo(z.__instance.option("parent"));
                z.__instance._trigger({
                    type: "repositioned",
                    event: m,
                    position: q
                })
            },
            __sideChange: function(n, m) {
                n.removeClass("tooltipster-bottom").removeClass("tooltipster-left").removeClass("tooltipster-right").removeClass("tooltipster-top").addClass("tooltipster-" + m)
            },
            __targetFind: function(o) {
                var q = {},
                    m = this.__instance._$origin[0].getClientRects();
                if (m.length > 1) {
                    var n = this.__instance._$origin.css("opacity");
                    if (n == 1) {
                        this.__instance._$origin.css("opacity", 0.99);
                        m = this.__instance._$origin[0].getClientRects();
                        this.__instance._$origin.css("opacity", 1)
                    }
                }
                if (m.length < 2) {
                    q.top = Math.floor(o.geo.origin.windowOffset.left + (o.geo.origin.size.width / 2));
                    q.bottom = q.top;
                    q.left = Math.floor(o.geo.origin.windowOffset.top + (o.geo.origin.size.height / 2));
                    q.right = q.left
                } else {
                    var p = m[0];
                    q.top = Math.floor(p.left + (p.right - p.left) / 2);
                    if (m.length > 2) {
                        p = m[Math.ceil(m.length / 2) - 1]
                    } else {
                        p = m[0]
                    }
                    q.right = Math.floor(p.top + (p.bottom - p.top) / 2);
                    p = m[m.length - 1];
                    q.bottom = Math.floor(p.left + (p.right - p.left) / 2);
                    if (m.length > 2) {
                        p = m[Math.ceil((m.length + 1) / 2) - 1]
                    } else {
                        p = m[m.length - 1]
                    }
                    q.left = Math.floor(p.top + (p.bottom - p.top) / 2)
                }
                return q
            }
        }
    });
    return d
}));

function isTourRunning() {
    if ((typeof hopscotch != "undefined") && hopscotch.getCurrTour()) {
        return true
    }
    return false
}

function showPointOfInterest(a, d, c) {
    if (isTourRunning()) {
        return true
    }
    try {
        c = $.extend({
            side: "top",
            openTooltipOn: null,
            isDismissed: function() {
                return isTooltipInLocalStorage(a)
            },
            onDismiss: function() {
                setTooltipInLocalStorage(a)
            },
            actionable: false
        }, c);
        if (!c.isDismissed()) {
            try {
                $(a).tooltipster("destroy")
            } catch (b) {}
            $(a).tooltipster({
                content: createPOIContent(a, d, c.onDismiss),
                theme: "tooltipster-light",
                interactive: true,
                trigger: "custom",
                triggerClose: {
                    click: c.actionable ? false : true
                },
                restoration: "none",
                side: c.side
            });
            closeOpenTooltips();
            if (c.openTooltipOn) {
                c.openTooltipOn.tooltipster("show")
            } else {
                $(a).tooltipster("show")
            }
            return true
        }
    } catch (b) {}
    return false
}

function createGotIt(a) {
    var b = $("<a />", {
        "class": "nl-smallGrayButton",
        click: a,
        text: i18n("Got it")
    });
    return b
}

function createPOIContent(a, e, f) {
    var d = $("<div />", {
        html: e,
        css: {
            display: "inline-block"
        }
    });
    var c = $("<div />", {
        "class": "sy-tooltip-content"
    }).append(d);
    var b = createGotIt(function() {
        f();
        $(a).tooltipster("hide")
    });
    c.append(b);
    return c
}

function createUpgradeContent(a, h, f, e) {
    var d = $("<div />", {
        html: f,
        css: {
            display: "inline-block"
        }
    });
    var c = $("<div />", {
        "class": "sy-tooltip-content"
    }).append(d);
    var g = $("<a />", {
        "class": "upgradeLink",
        click: function() {
            showSignUpSubscribe(e);
            setTooltipUpgradeInLocalStorage(a);
            h.tooltipster("destroy")
        },
        text: i18n("Upgrade")
    });
    d.prepend("&nbsp;");
    d.prepend(g);
    var b = createGotIt(function() {
        setTooltipUpgradeInLocalStorage(a);
        h.tooltipster("hide")
    });
    c.append(b);
    return c
}

function createSigninContent(a, h, f, e) {
    var d = $("<div />", {
        html: f,
        css: {
            display: "inline-block"
        }
    });
    var c = $("<div />", {
        "class": "sy-tooltip-content"
    }).append(d);
    var g = $("<a />", {
        "class": "upgradeLink",
        click: function() {
            showSignUp(e, false);
            setTooltipSignupInLocalStorage(a);
            h.tooltipster("destroy")
        },
        text: i18n("Sign up")
    });
    d.prepend("&nbsp;");
    d.prepend(g);
    var b = createGotIt(function() {
        setTooltipSignupInLocalStorage(a);
        h.tooltipster("hide")
    });
    c.append(b);
    return c
}

function createUpgradeTooltipOnly(h, a, c, e, b, g) {
    if (!g || !isTooltipUpgradeInLocalStorage(a)) {
        var f = createUpgradeContent(a, h, e, c);
        try {
            h.tooltipster("destroy")
        } catch (d) {}
        h.tooltipster({
            content: f,
            theme: "tooltipster-light",
            interactive: true,
            trigger: "custom",
            restoration: "none",
            side: (b != null ? b : "left")
        });
        closeOpenTooltips();
        try {
            h.tooltipster("show")
        } catch (d) {}
        return true
    }
    return false
}

function createSignupTooltipOnly(a, c, e, b) {
    var f = createSigninContent(a, $(a), e, c);
    try {
        $(a).tooltipster("destroy")
    } catch (d) {}
    $(a).tooltipster({
        content: f,
        theme: "tooltipster-light",
        trigger: "custom",
        interactive: true,
        restoration: "none",
        side: (b != null ? b : "left")
    });
    closeOpenTooltips();
    $(a).tooltipster("show");
    return true
}

function createUpgradeTooltip(a, c, d, b) {
    if (isTourRunning()) {
        return
    }
    if (false === createUpgradeTooltipOnly($(a), a, c, d, b)) {
        showSignUpSubscribe(c)
    }
}

function createUpgradeTooltip2(e, a, c, d, b) {
    if (isTourRunning()) {
        return
    }
    if (false === createUpgradeTooltipOnly(e, a, c, d, b)) {
        showSignUpSubscribe(c)
    }
}

function createSignupTooltip(a, c, d, b) {
    if (isTourRunning()) {
        return
    }
    if (false == createSignupTooltipOnly(a, c, d, b)) {
        showSignUp(c, false)
    }
}

function isInLocalStorage(b, a) {
    return localStorage.getItem(b + a)
}

function setInLocalStorage(b, a) {
    localStorage.setItem(b + a, true)
}

function isTooltipInLocalStorage(a) {
    return isInLocalStorage("tooltip", a)
}

function setTooltipInLocalStorage(a) {
    setInLocalStorage("tooltip", a)
}

function isTooltipUpgradeInLocalStorage(a) {
    return isInLocalStorage("tooltipUpgrade", a)
}

function setTooltipUpgradeInLocalStorage(a) {
    setInLocalStorage("tooltipUpgrade", a)
}

function isTooltipSignupInLocalStorage(a) {
    return isInLocalStorage("tooltipSignup", a)
}

function setTooltipSignupInLocalStorage(a) {
    setInLocalStorage("tooltipSignup", a)
}

function closeOpenTooltips() {
    var a = $.tooltipster.instances();
    $.each(a, function(c, b) {
        b.close()
    })
}
$.browser.chrome = /chrome/.test(navigator.userAgent.toLowerCase());
! function(k) {
    function j(b, f) {
        if (!(this instanceof j)) {
            var e = new j(b, f);
            return e.open(), e
        }
        this.id = j.id++, this.setup(b, f), this.chainCallbacks(j._callbackChain)
    }
    if ("undefined" == typeof k) {
        return void("console" in window && window.console.info("Too much lightness, Featherlight needs jQuery."))
    }
    var q = [],
        p = function(a) {
            return q = k.grep(q, function(b) {
                return b !== a && b.$instance.closest("body").length > 0
            })
        },
        o = function(r, h) {
            var w = {},
                v = new RegExp("^" + h + "([A-Z])(.*)");
            for (var u in r) {
                var t = u.match(v);
                if (t) {
                    var s = (t[1] + t[2].replace(/([A-Z])/g, "-$1")).toLowerCase();
                    w[s] = r[u]
                }
            }
            return w
        },
        n = {
            keyup: "onKeyUp",
            resize: "onResize"
        },
        m = function(a) {
            k.each(j.opened().reverse(), function() {
                return a.isDefaultPrevented() || !1 !== this[n[a.type]](a) ? void 0 : (a.preventDefault(), a.stopPropagation(), !1)
            })
        },
        l = function(b) {
            if (b !== j._globalHandlerInstalled) {
                j._globalHandlerInstalled = b;
                var a = k.map(n, function(d, e) {
                    return e + "." + j.prototype.namespace
                }).join(" ");
                k(window)[b ? "on" : "off"](a, m)
            }
        };
    j.prototype = {
        constructor: j,
        namespace: "featherlight",
        targetAttr: "data-featherlight",
        variant: null,
        resetCss: !1,
        background: null,
        openTrigger: "click",
        closeTrigger: "click",
        filter: null,
        root: "body",
        openSpeed: 250,
        closeSpeed: 250,
        closeOnClick: "background",
        closeOnEsc: !0,
        closeIcon: "&#10005;",
        loading: "",
        persist: !1,
        otherClose: null,
        beforeOpen: k.noop,
        beforeContent: k.noop,
        beforeClose: k.noop,
        afterOpen: k.noop,
        afterContent: k.noop,
        afterClose: k.noop,
        onKeyUp: k.noop,
        onResize: k.noop,
        type: null,
        contentFilters: ["jquery", "image", "html", "ajax", "iframe", "text"],
        setup: function(a, u) {
            "object" != typeof a || a instanceof k != !1 || u || (u = a, a = void 0);
            var t = k.extend(this, u, {
                    target: a
                }),
                s = t.resetCss ? t.namespace + "-reset" : t.namespace,
                r = k(t.background || ['<div class="' + s + "-loading " + s + '">', '<div class="' + s + '-content">', '<span class="' + s + "-close-icon " + t.namespace + '-close">', t.closeIcon, "</span>", '<div class="' + t.namespace + '-inner">' + t.loading + "</div>", "</div>", "</div>"].join("")),
                h = "." + t.namespace + "-close" + (t.otherClose ? "," + t.otherClose : "");
            return t.$instance = r.clone().addClass(t.variant), t.$instance.on(t.closeTrigger + "." + t.namespace, function(d) {
                var e = k(d.target);
                ("background" === t.closeOnClick && e.is("." + t.namespace) || "anywhere" === t.closeOnClick || e.closest(h).length) && (t.close(d), d.preventDefault())
            }), this
        },
        getContent: function() {
            if (this.persist !== !1 && this.$content) {
                return this.$content
            }
            var a = this,
                x = this.constructor.contentFilters,
                w = function(b) {
                    return a.$currentTarget && a.$currentTarget.attr(b)
                },
                v = w(a.targetAttr),
                u = a.target || v || "",
                t = x[a.type];
            if (!t && u in x && (t = x[u], u = a.target && v), u = u || w("href") || "", !t) {
                for (var s in x) {
                    a[s] && (t = x[s], u = a[s])
                }
            }
            if (!t) {
                var r = u;
                if (u = null, k.each(a.contentFilters, function() {
                        return t = x[this], t.test && (u = t.test(r)), !u && t.regex && r.match && r.match(t.regex) && (u = r), !u
                    }), !u) {
                    return "console" in window && window.console.error("Featherlight: no content filter found " + (r ? ' for "' + r + '"' : " (no target specified)")), !1
                }
            }
            return t.process.call(a, u)
        },
        setContent: function(a) {
            var d = this;
            return (a.is("iframe") || k("iframe", a).length > 0) && d.$instance.addClass(d.namespace + "-iframe"), d.$instance.removeClass(d.namespace + "-loading"), d.$instance.find("." + d.namespace + "-inner").not(a).slice(1).remove().end().replaceWith(k.contains(d.$instance[0], a[0]) ? "" : a), d.$content = a.addClass(d.namespace + "-inner"), d
        },
        open: function(a) {
            var f = this;
            if (f.$instance.hide().appendTo(f.root), !(a && a.isDefaultPrevented() || f.beforeOpen(a) === !1)) {
                a && a.preventDefault();
                var c = f.getContent();
                if (c) {
                    return q.push(f), l(!0), f.$instance.fadeIn(f.openSpeed), f.beforeContent(a), k.when(c).always(function(b) {
                        f.setContent(b), f.afterContent(a)
                    }).then(f.$instance.promise()).done(function() {
                        f.afterOpen(a)
                    })
                }
            }
            return f.$instance.detach(), k.Deferred().reject().promise()
        },
        close: function(a) {
            var f = this,
                d = k.Deferred();
            return f.beforeClose(a) === !1 ? d.reject() : (0 === p(f).length && l(!1), f.$instance.fadeOut(f.closeSpeed, function() {
                f.$instance.detach(), f.afterClose(a), d.resolve()
            })), d.promise()
        },
        chainCallbacks: function(a) {
            for (var d in a) {
                this[d] = k.proxy(a[d], this, k.proxy(this[d], this))
            }
        }
    }, k.extend(j, {
        id: 0,
        autoBind: "[data-featherlight]",
        defaults: j.prototype,
        contentFilters: {
            jquery: {
                regex: /^[#.]\w/,
                test: function(a) {
                    return a instanceof k && a
                },
                process: function(a) {
                    return this.persist !== !1 ? k(a) : k(a).clone(!0)
                }
            },
            image: {
                regex: /\.(png|jpg|jpeg|gif|tiff|bmp|svg)(\?\S*)?$/i,
                process: function(a) {
                    var s = this,
                        r = k.Deferred(),
                        h = new Image,
                        g = k('<img src="' + a + '" alt="" class="' + s.namespace + '-image" />');
                    return h.onload = function() {
                        g.naturalWidth = h.width, g.naturalHeight = h.height, r.resolve(g)
                    }, h.onerror = function() {
                        r.reject(g)
                    }, h.src = a, r.promise()
                }
            },
            html: {
                regex: /^\s*<[\w!][^<]*>/,
                process: function(a) {
                    return k(a)
                }
            },
            ajax: {
                regex: /./,
                process: function(a) {
                    var f = k.Deferred(),
                        e = k("<div></div>").load(a, function(d, c) {
                            "error" !== c && f.resolve(e.contents()), f.fail()
                        });
                    return f.promise()
                }
            },
            iframe: {
                process: function(a) {
                    var f = new k.Deferred,
                        e = k("<iframe/>").hide().attr("src", a).css(o(this, "iframe")).on("load", function() {
                            f.resolve(e.show())
                        }).appendTo(this.$instance.find("." + this.namespace + "-content"));
                    return f.promise()
                }
            },
            text: {
                process: function(a) {
                    return k("<div>", {
                        text: a
                    })
                }
            }
        },
        functionAttributes: ["beforeOpen", "afterOpen", "beforeContent", "afterContent", "beforeClose", "afterClose"],
        readElementConfig: function(a, s) {
            var r = this,
                h = new RegExp("^data-" + s + "-(.*)"),
                g = {};
            return a && a.attributes && k.each(a.attributes, function() {
                var d = this.name.match(h);
                if (d) {
                    var t = this.value,
                        f = k.camelCase(d[1]);
                    if (k.inArray(f, r.functionAttributes) >= 0) {
                        t = new Function(t)
                    } else {
                        try {
                            t = k.parseJSON(t)
                        } catch (e) {}
                    }
                    g[f] = t
                }
            }), g
        },
        extend: function(a, f) {
            var e = function() {
                this.constructor = a
            };
            return e.prototype = this.prototype, a.prototype = new e, a.__super__ = this.prototype, k.extend(a, this, f), a.defaults = a.prototype, a
        },
        attach: function(a, w, v) {
            var u = this;
            "object" != typeof w || w instanceof k != !1 || v || (v = w, w = void 0), v = k.extend({}, v);
            var t, s = v.namespace || u.defaults.namespace,
                r = k.extend({}, u.defaults, u.readElementConfig(a[0], s), v);
            return a.on(r.openTrigger + "." + r.namespace, r.filter, function(d) {
                var c = k.extend({
                        $source: a,
                        $currentTarget: k(this)
                    }, u.readElementConfig(a[0], r.namespace), u.readElementConfig(this, r.namespace), v),
                    b = t || k(this).data("featherlight-persisted") || new u(w, c);
                "shared" === b.persist ? t = b : b.persist !== !1 && k(this).data("featherlight-persisted", b), c.$currentTarget.blur(), b.open(d)
            }), a
        },
        current: function() {
            var b = this.opened();
            return b[b.length - 1] || null
        },
        opened: function() {
            var a = this;
            return p(), k.grep(q, function(b) {
                return b instanceof a
            })
        },
        close: function(d) {
            var c = this.current();
            return c ? c.close(d) : void 0
        },
        _onReady: function() {
            var a = this;
            a.autoBind && (k(a.autoBind).each(function() {
                a.attach(k(this))
            }), k(document).on("click", a.autoBind, function(b) {
                b.isDefaultPrevented() || "featherlight" === b.namespace || (b.preventDefault(), a.attach(k(b.currentTarget)), k(b.target).trigger("click.featherlight"))
            }))
        },
        _callbackChain: {
            onKeyUp: function(a, d) {
                return 27 === d.keyCode ? (this.closeOnEsc && k.featherlight.close(d), !1) : a(d)
            },
            onResize: function(g, f) {
                if (this.$content.naturalWidth) {
                    var s = this.$content.naturalWidth,
                        r = this.$content.naturalHeight;
                    this.$content.css("width", "").css("height", "");
                    var h = Math.max(s / parseInt(this.$content.parent().css("width"), 10), r / parseInt(this.$content.parent().css("height"), 10));
                    h > 1 && this.$content.css("width", "" + s / h + "px").css("height", "" + r / h + "px")
                }
                return g(f)
            },
            afterContent: function(e, d) {
                var f = e(d);
                return this.onResize(d), f
            }
        }
    }), k.featherlight = j, k.fn.featherlight = function(b, d) {
        return j.attach(this, b, d)
    }, k(document).ready(function() {
        j._onReady()
    })
}(jQuery);
(function() {
    var r, q, p, o, n, m, l, k, j;
    if (p = {
            version: "2.3.3",
            name: "jQuery-runner"
        }, l = this.jQuery || this.Zepto || this.$, !l || !l.fn) {
        throw new Error("[" + p.name + "] jQuery or jQuery-like library is required for this plugin to work")
    }
    n = {}, o = function(b) {
        return (10 > b ? "0" : "") + b
    }, j = 1, m = function() {
        return "runner" + j++
    }, k = function(d, c) {
        return d["r" + c] || d["webkitR" + c] || d["mozR" + c] || d["msR" + c] || function(b) {
            return setTimeout(b, 30)
        }
    }(this, "equestAnimationFrame"), q = function(D, C) {
        var B, A, z, y, x, w, v, u, t, s, d;
        for (C = C || {}, u = [3600000, 60000, 1000, 10], w = ["", ":", ":", "."], x = "", y = "", z = C.milliseconds, A = u.length, t = 0, 0 > D && (D = Math.abs(D), x = "-"), B = s = 0, d = u.length; d > s; B = ++s) {
            v = u[B], t = 0, D >= v && (t = Math.floor(D / v), D -= t * v), (t || B > 1 || y) && (B !== A - 1 || z) && (y += (y ? w[B] : "") + o(t))
        }
        return x + y
    }, r = function() {
        function b(a, g, f) {
            var e;
            return this instanceof b ? (this.items = a, e = this.id = m(), this.settings = l.extend({}, this.settings, g), n[e] = this, a.each(function(d, c) {
                l(c).data("runner", e)
            }), this.value(this.settings.startAt), void((f || this.settings.autostart) && this.start())) : new b(a, g, f)
        }
        return b.prototype.running = !1, b.prototype.updating = !1, b.prototype.finished = !1, b.prototype.interval = null, b.prototype.total = 0, b.prototype.lastTime = 0, b.prototype.startTime = 0, b.prototype.lastLap = 0, b.prototype.lapTime = 0, b.prototype.settings = {
            autostart: !1,
            countdown: !1,
            stopAt: null,
            startAt: 0,
            milliseconds: !0,
            format: null
        }, b.prototype.value = function(c) {
            this.items.each(function(a) {
                return function(h, g) {
                    var f;
                    h = l(g), f = h.is("input") ? "val" : "text", h[f](a.format(c))
                }
            }(this))
        }, b.prototype.format = function(d) {
            var e;
            return e = this.settings.format, (e = l.isFunction(e) ? e : q)(d, this.settings)
        }, b.prototype.update = function() {
            var g, f, t, s, h;
            this.updating || (this.updating = !0, t = this.settings, h = l.now(), s = t.stopAt, g = t.countdown, f = h - this.lastTime, this.lastTime = h, g ? this.total -= f : this.total += f, null !== s && (g && this.total <= s || !g && this.total >= s) && (this.total = s, this.finished = !0, this.stop(), this.fire("runnerFinish")), this.value(this.total), this.updating = !1)
        }, b.prototype.fire = function(c) {
            this.items.trigger(c, this.info())
        }, b.prototype.start = function() {
            var c;
            this.running || (this.running = !0, (!this.startTime || this.finished) && this.reset(), this.lastTime = l.now(), c = function(a) {
                return function() {
                    a.running && (a.update(), k(c))
                }
            }(this), k(c), this.fire("runnerStart"))
        }, b.prototype.stop = function() {
            this.running && (this.running = !1, this.update(), this.fire("runnerStop"))
        }, b.prototype.toggle = function() {
            this.running ? this.stop() : this.start()
        }, b.prototype.lap = function() {
            var d, c;
            return c = this.lastTime, d = c - this.lapTime, this.settings.countdown && (d = -d), (this.running || d) && (this.lastLap = d, this.lapTime = c), c = this.format(this.lastLap), this.fire("runnerLap"), c
        }, b.prototype.reset = function(d) {
            var c;
            d && this.stop(), c = l.now(), "number" != typeof this.settings.startAt || this.settings.countdown || (c -= this.settings.startAt), this.startTime = this.lapTime = this.lastTime = c, this.total = this.settings.startAt, this.value(this.total), this.finished = !1, this.fire("runnerReset")
        }, b.prototype.info = function() {
            var c;
            return c = this.lastLap || 0, {
                running: this.running,
                finished: this.finished,
                time: this.total,
                formattedTime: this.format(this.total),
                startTime: this.startTime,
                lapTime: c,
                formattedLapTime: this.format(c),
                settings: this.settings
            }
        }, b
    }(), l.fn.runner = function(a, s, g) {
        var e, c;
        switch (a || (a = "init"), "object" == typeof a && (g = s, s = a, a = "init"), e = this.data("runner"), c = e ? n[e] : !1, a) {
            case "init":
                new r(this, s, g);
                break;
            case "info":
                if (c) {
                    return c.info()
                }
                break;
            case "reset":
                c && c.reset(s);
                break;
            case "lap":
                if (c) {
                    return c.lap()
                }
                break;
            case "start":
            case "stop":
            case "toggle":
                if (c) {
                    return c[a]()
                }
                break;
            case "version":
                return p.version;
            default:
                l.error("[" + p.name + "] Method " + a + " does not exist")
        }
        return this
    }, l.fn.runner.format = q
}).call(this);
var syAjaxRunning = false;
$(document).ajaxStart(function() {
    syAjaxRunning = true
});
$(document).ajaxStop(function() {
    syAjaxRunning = false
});
$(document).ajaxError(function(c, d, a, b) {
    if (d.status == 403) {
        window.location = "/expirationPassed?api=" + a.url + "&from=" + window.location.href
    }
});
String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1)
};
String.prototype.replaceAt = function(a, b) {
    return this.substr(0, a) + b + this.substr(a + 1)
};
String.prototype.pluralize = function(a) {
    if (Math.abs(a) == 1) {
        return this
    } else {
        return this + "s"
    }
};

function symbolab_log(b, d, c, a) {
    if (!a) {
        a = null
    }
    if (typeof(sy_var) != "undefined" && b === "Registration" && c) {
        c = "Var" + sy_var + "\t" + c
    }
    return $.ajax({
        type: "POST",
        url: "/detailedLog",
        data: {
            type: b,
            info1: d,
            info2: c,
            query: a
        }
    })
}

function syMenu(b, a) {
    a = a.replace("/solver/", "");
    symbolab_log("Solutions", "Menu" + b, SOLUTIONS.page + "=>" + a)
}

function prepareQueryForMathQuill(a) {
    if (a == undefined) {
        return a
    }
    a = a.replace(/operatorname/g, "text");
    a = a.replace(/\\(\w+?)\s+(?={|_|\^|\(|\\)/g, "\\$1");
    a = a.replace(/\\,/g, " ");
    a = a.replace(/(, |,)/g, ",\\:");
    if (a.indexOf("\\{") >= 0) {
        a = a.replace(/\{\\space\}/g, "\\space");
        a = a.replace(/\\left\s*\\\{/g, "\\{");
        a = a.replace(/\\\{/g, "\\left\\{");
        a = a.replace(/\\right\s*\\\}/g, "\\}");
        a = a.replace(/\\\}/g, "\\right\\}");
        a = a.replace(/\\space}/g, "{\\space}")
    }
    a = a.replace(/\\vec\{(.+?)\}/g, "\\vec{$1 }");
    a = a.replace(/\\hat\{(.+?)\}/g, "\\hat{$1 }");
    a = a.replace(/ /g, "#");
    return a
}

function getWidth(b, a) {
    var c = 0;
    if (b.hasClass("block") || b.hasClass("numerator") || b.hasClass("denominator")) {
        b.children().each(function() {
            c += getWidth($(this), a)
        })
    } else {
        if (b.hasClass("fraction")) {
            var d = getWidth($(b.children()[0]), a);
            var e = getWidth($(b.children()[1]), a);
            return Math.max(d + 10, e + 10)
        } else {
            if (b.hasClass("roman")) {
                if (a) {
                    b.children().each(function() {
                        c += $(this).outerWidth()
                    })
                }
            } else {
                c = b.outerWidth()
            }
        }
    }
    return c
}

function getActualWidth(c, b) {
    var a = 0;
    $(c).find(".mathquill-embedded-latex").children().each(function() {
        if ($(this).is(":visible:not(.selectable)")) {
            a += getWidth($(this), b)
        }
    });
    a = a * 1.1;
    return a
}

function getGraphInputWidth(b) {
    var a = 0;
    $(b).children().each(function() {
        if ($(this).is(":visible:not(.selectable)")) {
            a += getWidth($(this), true)
        }
    });
    a = a * 1.1;
    return a
}

function createScrollForce(c, d, b) {
    if (!d && !b) {
        return
    }
    var a = $('<div class="scrollContent" style="background: transparent"></div>');
    if (d) {
        a.width(d)
    }
    if (b) {
        a.height(b)
    }
    $(c).children().wrap(a);
    $(c).addClass("syscrollable");
    $(c).find(".mathquill-embedded-latex").mathquill("redraw")
}

function createTable(o) {
    o = o.replace("\\quad \\quad", "");
    o = o.replace("\\begin{table}", "");
    var h = false;
    if (o.indexOf("\\summaryline") > 0) {
        o = o.replace("\\summaryline", "");
        h = true
    }
    o = o.replace("\\end{table}", "");
    var a = $("<div style='overflow-x: auto;'></div>");
    var l = $("<table class='tableMatrix'></table>");
    var n = o.split("\\\\");
    n.pop();
    var k;
    for (var g = 0; g < n.length; g++) {
        var m = n[g];
        var k = $("<tr></tr>");
        var e = m.split("&");
        e.pop();
        for (var f = 0; f < e.length; f++) {
            var d = e[f];
            var b = $("<span class='mathquill-embedded-latex'></span>");
            b.text(d);
            var c = $("<td class='syME'></td>");
            c.append(b);
            k.append(c)
        }
        if (h && g == n.length - 1) {
            k.css("background-color", "#f5f5f5");
            k.css("color", "black")
        }
        l.append(k)
    }
    a.append(l);
    return a
}

function createMathquillSpan(f, e, h) {
    if (e == undefined) {
        return $("<span></span>")
    }
    var c = e.split("<br/>");
    var d;
    if (c.length == 1) {
        if (e.indexOf("\\begin{table}") >= 0) {
            d = createTable(e)
        } else {
            e = prepareQueryForMathQuill(e);
            d = $('<span class="' + f + ' mathquill-embedded-latex"></span>');
            d.text(e)
        }
        if (h) {
            $(d).prop("title", h)
        }
        return d
    } else {
        d = $('<div class="multi-line-span"></div>');
        for (var a in c) {
            var b = c[a];
            var g = createMathquillDiv(f, b);
            g.addClass("multiline");
            d.append(g)
        }
        return d
    }
}

function createMathquillDiv(b, a, d) {
    var c = $('<div class="' + b + '"></div>');
    c.append(this.createMathquillSpan("", a, d));
    return c
}

function createMathquillDiv2(b, a, d) {
    var c = $('<div class="' + b + '"></div>');
    c.append(this.createMathquillSpan("", a, d));
    c.find(".mathquill-embedded-latex:not(.mathquill-rendered-math)").each(function() {
        var e = $(this);
        e.mathquill()
    });
    return c
}

function mathquillifyVisible(a) {
    a.find(".mathquill-embedded-latex:not(.mathquill-rendered-math)").each(function() {
        var b = $(this);
        if (b.is(":visible")) {
            b.mathquill()
        }
    })
}
$(function() {
    var a = readCookie("sy.privacy");
    if ("yes" != a && !isMobileRender()) {
        $(".nl-cookiepolicy").show()
    }
    $(".privacy-policy").click(function() {
        createCookie("sy.privacy", "yes", 1000);
        $(".nl-cookiepolicy").remove()
    });
    $("#nl-mainNav .topitem a, #nl-mainNav .overflow a").click(function(c) {
        c.preventDefault();
        var b = $(this).attr("href");
        $.when(symbolab_log("General", "TopMenu", b)).always(function() {
            window.location = b
        })
    });
    $(".nl-navAction.notifications").click(function() {
        $(".nl-notificationsBox").toggle();
        $(".nl-notificationsBox").mathquill("redraw");
        if ($(".nl-notificationsBox").is(":visible")) {
            $(".newNotifications").removeClass("newNotifications");
            $.ajax({
                type: "POST",
                url: "/api/notification/seen",
                beforeSend: authorizeAjaxWithSyToken
            })
        }
        return false
    });
    $("select.classification").change(function(g) {
        var c = $(this).parent();
        var h = $(this).attr("id");
        var d = $(this).val();
        var b = h + "-" + d;
        var f = $("#" + b);
        c.children(" select.subclass").addClass("hidden");
        c.children(" select.subclass").attr("disabled", "disabled");
        if (f.children().size() > 1) {
            f.removeClass("hidden");
            f.removeAttr("disabled")
        }
    });
    $("a.more").click(function(e) {
        e.preventDefault();
        var d = this;
        var c = $(d).parent();
        var b = c.next();
        b.toggle(function() {
            var f = $(d).data("previous-text");
            var g = $(d).text();
            $(d).text(f);
            $(d).data("previous-text", g);
            if (window.location.href.indexOf("team") < 0) {
                $("#SearchExamples").find(".mathquill-embedded-latex").mathquill("redraw")
            }
        })
    });
    ensureCorrectLightsOut();
    document.addEventListener("click", function() {
        $(".nl-notificationsBox").hide()
    })
});

function isMobileRender() {
    return typeof(isMobileRendering) != "undefined" && isMobileRendering
}

// function isPopularSearch() {
//     return window.location.href.indexOf("/popular") >= 0
// }

// function showUpgradeMessage() {
//     if (typeof(mobileWeb) != "undefined" && mobileWeb) {
//         if (OS === "iOS") {
//             if (confirm("Download the app to see steps. Redirect to App Store?")) {
//                 window.location = "https://itunes.apple.com/app/id876942533"
//             }
//         } else {
//             if (OS === "Android") {
//                 if (confirm("Download the app to see steps. Redirect to Google Play?")) {
//                     window.location = "https://play.google.com/store/apps/details?id=com.devsense.symbolab"
//                 }
//             }
//         }
//     } else {
//         window.location.href = "/upgradeVersion"
//     }
// }

function parseQueryParameters(e) {
    var a, b = /\+/g,
        c = /([^&=]+)=?([^&]*)/g,
        d = function(g) {
            return decodeURIComponent(g.replace(b, " "))
        },
        f = window.location.search.substring(1);
    while (a = c.exec(f)) {
        e[decodeURIComponent(a[1])] = decodeURIComponent(a[2])
    }
}
$.extend($.expr[":"], {
    "starts-with": function(c, b, d, f) {
        var e = $.trim($(c).text()),
            a = d[3];
        return e.indexOf(a) === 0
    },
    "ends-with": function(c, b, d, f) {
        var e = $.trim($(c).text()),
            a = d[3];
        return e.lastIndexOf(a) === e.length - a.length
    }
});

// function changeLanguage(c, d) {
//     var b = location.hostname;
//     b = b.replace(d + ".", "");
//     b = b.replace("www.", "");
//     var a = (location.port == 80 ? "" : ":" + location.port);
//     var e = ($(c).attr("data") == "en" ? "www." : $(c).attr("data") + ".");
//     window.location = "http://" + e + b + a + "/solver"
// }

function showSignIn(a) {
    registrationReason = a;
    googleIsSignUp = false;
    localStorage.setItem("registrationReason", a);
    $(".nl-signInContainer>div").addClass("nl-hidden");
    $(".nl-signInWithText").removeClass("nl-hidden");
    symbolab_log("Registration", "ShowSignIn", registrationReason);
    localStorage.setItem("beforeSubs", 1);
    $.featherlight(".nl-signInContainer")
}

function showSignUpSubscribe(a) {
    if (sy_pSub) {
        resumeSubscription(a)
    } else {
        if (isUserLoggedIn()) {
            showSubscription(a)
        } else {
            showSignUp(a)
        }
    }
}

function bookImageError(b) {
    b.onerror = "";
    $(b).hide();
    var a = $("<p><a href = '" + b.src + "'>Click here to view image</a></p>");
    $(b).parent().append(a);
    return true
}

function pickLanguage(b) {
    var a = $.Deferred();
    $.when(symbolab_log("General", "UserSwitchLang", b)).always(function() {
        a.resolve()
    });
    return a
}

function loadScript(c) {
    if ($('script[src="' + c + '"]').length > 0) {
        return $.Deferred().resolve()
    }
    var a = $.Deferred();
    var b = document.createElement("script");
    b.async = "async";
    b.type = "text/javascript";
    b.src = c;
    b.onload = b.onreadystatechange = function(e, d) {
        if (!b.readyState || /loaded|complete/.test(b.readyState)) {
            if (d) {
                a.reject()
            } else {
                a.resolve()
            }
        }
    };
    b.onerror = function() {
        a.reject()
    };
    $("head")[0].appendChild(b);
    return a.promise()
}

function showGeneratePdf() {
    $(".nl-signInContainer>div").addClass("nl-hidden");
    $(".nl-generatePdf").removeClass("nl-hidden");
    $.featherlight(".nl-signInContainer");
    return $.when(loadScript("/public/auto/jspdf.debug.min.js")).pipe(function() {
        return $.when(loadScript("/public/auto/html2canvas2.min.js"))
    })
}

function showFeedback(c, b, a) {
    $(".nl-signInContainer>div").addClass("nl-hidden");
    $(".nl-feedback-modal").removeClass("nl-hidden");
    $.featherlight(".nl-signInContainer");
    if (c) {
        $(".featherlight-content .nl-feedback-modal h2").text(i18n("js.How can we help you?"));
        $(".featherlight-content .nl-feedback-modal #inputName").val(b);
        $(".featherlight-content .nl-feedback-modal #inputEmail").val(a)
    }
}

function showSignUp(a) {
    registrationReason = a;
    googleIsSignUp = true;
    localStorage.setItem("registrationReason", a);
    $(".nl-signInContainer>div").addClass("nl-hidden");
    $(".nl-signUpWithText").removeClass("nl-hidden");
    symbolab_log("Registration", "ShowSignUp", registrationReason);
    $.featherlight(".nl-signInContainer");
    localStorage.setItem("beforeSubs", 1);
    $(".featherlight-content .price").tooltipster({
        content: $("#pricesTable"),
        theme: "tooltipster-light",
        contentCloning: true,
        delay: 1,
        functionReady: function() {
            symbolab_log("Registration", "PricesShown")
        }
    })
}

function showSubscription(a) {
    registrationReason = a;
    localStorage.setItem("registrationReason", a);
    $(".nl-signInContainer>div").addClass("nl-hidden");
    $(".nl-subscribe").removeClass("nl-hidden");
    symbolab_log("Registration", "ShowSubscription", registrationReason);
    localStorage.setItem("sy.page", window.location.href);
    $.featherlight(".nl-signInContainer");
    renderPaypalButtons();
    setDefaultSubscription()
}

function showGroupLicense(a) {
    $(".nl-signInContainer>div").addClass("nl-hidden");
    $(".nl-groupLicense").removeClass("nl-hidden");
    $.featherlight(".nl-signInContainer");
    setSelectedSubscriptionOption($("td.subscribeOption:visible").last());
    renderPaypalGroupButton(a)
}

// function renderPaypalGroupButton(a) {
//     loadScript("https://www.paypal.com/sdk/js?client-id=AZqMhoiURMT7qtC-gKxZorl3AjLOxAqz04Y03kRFzSBnrWL5W5FEucdVk0EHc6XSZ1DD3lV1O6Ei4T7Q&currency=USD").done(function() {
//         var b = {
//             style: {
//                 shape: "pill",
//                 color: "gold"
//             },
//             createOrder: function(d, e) {
//                 var c = getGroupOrder(a);
//                 return e.order.create(c)
//             },
//             onApprove: paypalOnApprove,
//             onCancel: paypalOnCancel,
//             onError: paypalOnError
//         };
//         paypal.Buttons(b).render(".featherlight-content .nl-groupLicense #group-payment-paypal-button")
//     })
// }

function getFixedStepsFormat(b) {
    var e = [];
    for (var d = 0; d < b.length; d++) {
        var f = b[d];
        if (f.isInterimStep) {
            e.push(f)
        } else {
            if (f.steps != null && f.steps.length > 1) {
                for (var c = 0; c < f.steps.length; c++) {
                    var a = f.steps[c];
                    e.push(a)
                }
                if (f.entire_result) {
                    e.push({
                        entire_result: f.entire_result
                    })
                }
            } else {
                e.push(f)
            }
        }
    }
    return e
}

function updateUserSettings() {
    if (isUserLoggedIn()) {
        $.ajax({
            type: "GET",
            url: "/api/user/settings",
            beforeSend: authorizeAjaxWithSyToken,
            success: function(a) {
                localStorage.setItem("settings.steps", a && a.steps ? a.steps.toString() : "showSteps");
                localStorage.setItem("settings.pad", a && a.pad ? a.pad.toString() : "compactPad")
            }
        })
    }
}

function createAndShowTooltipTimout(a, d, c, b) {
    $(a).tooltipster({
        content: d,
        theme: "tooltipster-light",
        side: b,
        restoration: "none",
        trigger: "custom"
    });
    $(".sy-tooltip-close-icon:visible").click();
    $(a).tooltipster("show");
    setTimeout(function() {
        $(a).tooltipster("destroy")
    }, c)
}

function removeUserSettings() {
    localStorage.removeItem("settings.steps");
    localStorage.removeItem("settings.pad");
    localStorage.removeItem("settings.numDecimalDisplay");
    localStorage.removeItem("settings.printOpen");
    localStorage.removeItem("settings.printGraph")
}

function removeUserInfo() {
    localStorage.removeItem("udid");
    localStorage.removeItem("firstName");
    localStorage.removeItem("sy.udid");
    localStorage.removeItem("sy.firstName")
}

function logout(a) {
    if (a) {
        resetUserData()
    }
    eraseTerminalSessionStringCookie();
    removeUserSettings();
    removeUserInfo();
    window.location = "/logout"
}

function refreshLeftNavbarHeight() {
    var c = $(".nl-content:visible").height();
    var b = $(".nl-pageContent").height();
    var a = Math.max(b, c);
    if (a > 0) {
        $("#navbarStyle").remove();
        $("head").append($("<style id='navbarStyle'>.nl-leftNav { min-height: " + (a + 110) + "px; }</style>"));
        $("head").append($("<style id='navbarStyle'>.sidebar-content { min-height: " + (a + 100) + "px; }</style>"))
    }
}
$(window).load(function() {
    refreshLeftNavbarHeight()
});

function prepareGeometryForReload() {
    if (typeof(SYGEO) != "undefined") {
        var a = SYGEO.doShareCreateRequest();
        return a.then(function(b) {
            SYGEO.userIsLoggingIn = true;
            var c = b._id;
            return "temporaryShare=" + c
        })
    }
    return Promise.reject()
}
$(function() {
    var f = false;
    var j = false;
    if (localStorage.getItem("beforeSubs") == 1) {
        localStorage.removeItem("beforeSubs");
        updateUserSettings()
    }

    function d() {
        if (f) {
            var l = window.location.href.replace(/\#.*$/, "");
            if (j) {
                l += l.indexOf("?") >= 0 ? "&" : "?";
                l += "upgrade=true"
            }
            window.location.href = l
        }
    }
    $.featherlight.defaults.afterClose = function(l) {
        d()
    };
    try {
        $(".tooltip").tooltipster();
        var k = $(".sy-tooltip-close-icon:visible").size() > 0;
        if ($("#geometryNav").is(":visible")) {
            if (k == false && window.location.href.indexOf("practice") < 0 && window.location.href.indexOf("notebook") < 0 && window.location.href.indexOf("graphing-calculator") < 0 && window.location.href.indexOf("geometry") < 0 && window.location.href.indexOf("groups") < 0) {
                k = showPointOfInterest("#geometryNav a", "<a class=\"clickable\" onclick=\"$.when(symbolab_log('Geometry', 'EnterTooltip')).always(function() { window.location='/geometry'; });\">" + i18n("js.Geometry Tooltip") + "</a>")
            }
        } else {
            if (k == false && window.location.href.indexOf("practice") < 0 && window.location.href.indexOf("notebook") < 0 && window.location.href.indexOf("graphing-calculator") < 0 && window.location.href.indexOf("geometry") < 0 && window.location.href.indexOf("groups") < 0) {
                k = showPointOfInterest("#practiceNav a", "<a class=\"clickable\" onclick=\"$.when(symbolab_log('Practice', 'EnterTooltip')).always(function() { window.location='/practice'; });\">" + i18n("js.Click here to Practice") + "</a>")
            }
        }
    } catch (c) {}
    $(".nl-search").click(function() {
        $(".nl-searchContainer input").val("");
        $("#nl-mainNav").addClass("nl-searchOpen");
        $(".nl-searchContainer input").focus()
    });
    $(".nl-searchClose").click(function(l) {
        l.preventDefault();
        l.stopPropagation();
        $(".nl-search").css({
            width: 40
        });
        $(".nl-autocomplete").empty();
        $(".nl-autocomplete").hide();
        setTimeout(function() {
            $("#nl-mainNav").removeClass("nl-searchOpen");
            $(".nl-search").removeAttr("style")
        }, 200)
    });
    var g = false;
    $("#nl-searchField").keyup(function() {
        if (g) {
            return
        }
        g = true;
        var l = $(".nl-searchContainer input").val();
        $.ajax({
            type: "GET",
            url: "/suggestSubjects",
            data: {
                query: l,
                language: "en",
                type: (window.location.href.indexOf("/solver/") >= 0 ? "Solutions" : "Practice")
            },
            success: function(n) {
                if (n == null || n.length == 0) {
                    $(".nl-autocomplete").hide()
                } else {
                    $(".nl-autocomplete").empty();
                    var p = null;
                    for (var m = 0; m < n.length; m++) {
                        var o = n[m];
                        if (o.type != p) {
                            $(".nl-autocomplete").append("<div class='type'>" + o.type + "</div>");
                            p = o.type
                        }
                        o.display = o.display.replace(/\'/, "&apos;");
                        $(".nl-autocomplete").append("<div class='result' onclick='$.when(symbolab_log(\"SubjectSuggest\",\"" + l + '","' + o.type + "/" + o.display + '")).always(function() { window.location="' + o.search + "\"; });'>" + o.display + "</div>")
                    }
                    $(".nl-autocomplete").fadeIn()
                }
                g = false
            }
        })
    });
    $("#fbCancelBtn").click(function() {
        $.featherlight.current().close()
    });
    $("#fbSendBtn").click(function() {
        var l = {};
        l.name = $(".featherlight-content .nl-feedback-modal #inputName").val();
        l.email = $(".featherlight-content .nl-feedback-modal #inputEmail").val();
        l.message = $(".featherlight-content .nl-feedback-modal #inputMessage").val();
        l.url = window.location.href;
        l.referrer = document.referrer;
        if (typeof(SYPRACTICE) != "undefined") {
            l.subject = SYPRACTICE.subject;
            l.topic = SYPRACTICE.topic;
            l.subTopic = SYPRACTICE.subTopic;
            l.problem = SYPRACTICE.problemInfo.problem.problemTranslation
        }
        if (!l.message) {
            $(".featherlight-content .nl-feedback-modal .alert-error").show()
        } else {
            $.ajax({
                type: "POST",
                url: "/feedback",
                beforeSend: authorizeAjaxWithSyToken,
                data: l
            });
            $(".featherlight-content .nl-feedback-modal .alert-error").hide();
            $(".featherlight-content .nl-feedback-modal .alert-success").show();
            setTimeout(function() {
                $.featherlight.current().close()
            }, 2000)
        }
        $(".featherlight-content .nl-feedback-modal #fbSendBtn").addClass("nl-disabled")
    });
    $("#signIn").click(function() {
        showSignIn("TopMenu\t" + a(), true)
    });
    $(".nl-languagesMenu a").click(function(m) {
        m.preventDefault();
        var l = $(this).attr("href");
        $.when(pickLanguage($(this).attr("data"))).always(function() {
            window.location = l
        })
    });

    function a() {
        if (window.location.pathname.indexOf("/solver")) {
            return "Solver"
        } else {
            if (window.location.pathname.indexOf("/graphing-calculator")) {
                return "Graphing"
            } else {
                if (window.location.pathname.indexOf("/notebook")) {
                    return "Notebook"
                } else {
                    if (window.location.pathname.indexOf("/practice")) {
                        return "Practice"
                    } else {
                        if (window.location.pathname.indexOf("/calculator")) {
                            return "Calculators"
                        }
                    }
                }
            }
        }
        return window.location.pathname
    }
    $("#join").click(function() {
        showSignUp("TopMenu\t" + a(), true)
    });
    $("#upgrade").click(function() {
        showSubscription("UpgradeButton\t" + a())
    });
    $(".subscribeOption").click(function() {
        setSelectedSubscriptionOption($(this));
        symbolab_log("Registration", "BrowsePlan", $(this).attr("id"))
    });
    $("input[type=radio][name=subscriptionTypeRadio]").change(function() {
        setSelectedSubscriptionOption($(this).parent().parent().find(".subscribeOption"))
    });
    $("#noAccount").click(function() {
        $(".nl-signInContainer>div").addClass("nl-hidden");
        $(".nl-signUpWithText").removeClass("nl-hidden");
        symbolab_log("Registration", "ShowSignUp", registrationReason)
    });
    $("#haveAccount").click(function() {
        $(".nl-signInContainer>div").addClass("nl-hidden");
        $(".nl-signInWithText").removeClass("nl-hidden");
        symbolab_log("Registration", "ShowSignIn", registrationReason)
    });
    $(".nl-forgotPasswordLink").click(function() {
        $(".nl-signInContainer>div").addClass("nl-hidden");
        $(".nl-forgotPassword").removeClass("nl-hidden")
    });
    $(".nl-joinEmail").click(function() {
        var l = $(this);
        l.hide();
        $(".nl-joinEmailForm").show();
        symbolab_log("Registration", "ClickJoinEmail");
        l.parent().parent().parent().parent().parent().parent().parent().parent().parent().animate({
            scrollTop: 300
        })
    });
    $(".nl-signInButton").click(function() {
        var l = $(this);
        h(l)
    });
    $(".nl-signIn input").on("keyup", function(m) {
        if (m.keyCode == 13) {
            var l = $(this).closest(".nl-signIn").find(".nl-signInButton");
            if (!l.hasClass("nl-disabled")) {
                h(l)
            }
        }
    });

    function h(n) {
        n.addClass("nl-disabled");
        var m = $.Deferred();
        var l = $.Deferred();
        $.when(symbolab_log("Registration", "SignInAttempt-Email", registrationReason)).always(function() {
            m.resolve()
        });
        $.ajax({
            type: "POST",
            url: "/login",
            data: {
                email: $(".featherlight-content #signin_email").val(),
                password: $(".featherlight-content #signin_password").val(),
                url: window.location.href,
                registrationReason: registrationReason,
                remember: $(".featherlight-content #rememberMe").prop("checked")
            },
            success: function(o) {
                if (o.alert) {
                    $(".nl-signInWithText .nl-error").text(o.alert);
                    $(".nl-signInWithText .nl-error").show();
                    n.removeClass("nl-disabled");
                    l.reject()
                } else {
                    prepareGeometryForReload().then(function(p) {
                        location.hash = p;
                        l.resolve()
                    }, function() {
                        l.resolve()
                    })
                }
            },
            error: function() {
                n.removeClass("nl-disabled");
                l.reject()
            }
        });
        $.whenAll(l, m).done(function() {
            location.reload()
        })
    }
    $(".nl-createEmailAccount").click(function() {
        var l = $(this);
        e(l)
    });
    $(".nl-joinEmailForm input").on("keyup", function(m) {
        if (m.keyCode == 13) {
            var l = $(this).closest(".nl-joinEmailForm").find(".nl-createEmailAccount");
            if (!l.hasClass("nl-disabled")) {
                e(l)
            }
        }
    });

    function e(n) {
        n.addClass("nl-disabled");
        $(".nl-signUpForm .nl-error").text("");
        var m = $.Deferred();
        var l = $.Deferred();
        $.when(symbolab_log("Registration", "SignUpAttempt-Email", registrationReason)).always(function() {
            m.resolve()
        });
        var o = registrationReason;
        if (typeof(sy_var) != "undefined") {
            o = "Var" + sy_var + "\t" + o
        }
        $.ajax({
            type: "POST",
            url: "/signup",
            data: {
                email: $(".featherlight-content #signup_email").val(),
                firstName: $(".featherlight-content #signup_firstName").val(),
                lastName: $(".featherlight-content #signup_lastName").val(),
                password: $(".featherlight-content #signup_password").val(),
                url: window.location.href,
                registrationReason: o
            },
            success: function(p) {
                if (p.alert && p.alert.indexOf("To complete registration") < 0) {
                    $(".nl-signUpForm .nl-error").text(p.alert);
                    n.removeClass("nl-disabled");
                    l.reject()
                } else {
                    if (location.href.indexOf("/notebook") >= 0 || location.href.indexOf("/groups") >= 0 || location.href.indexOf("/joinGroup") >= 0) {
                        l.resolve()
                    } else {
                        $(".featherlight-content #haveAccount").hide();
                        $("body").removeClass("signedout");
                        $("body").addClass("signedin");
                        $("a#userName img").addClass("no-image");
                        $("a#userName svg use").attr("href", "#stock-avatar-0").removeClass("no-image");
                        $("a#userName").attr("alt", p.firstName + " " + p.lastName);
                        $("a#userName").attr("title", p.firstName + " " + p.lastName);
                        $(".featherlight-content .nl-signInContainer>div").addClass("nl-hidden");
                        $(".featherlight-content .nl-subscribe").removeClass("nl-hidden");
                        localStorage.setItem("sy.page", window.location.href);
                        symbolab_log("Registration", "ShowSubscription", registrationReason);
                        renderPaypalButtons();
                        setDefaultSubscription();
                        n.removeClass("nl-disabled");
                        l.reject()
                    }
                }
            },
            error: function() {
                n.removeClass("nl-disabled")
            }
        });
        $.whenAll(l, m).done(function() {
            location.reload()
        })
    }
    $(".nl-resetButton").click(function() {
        var l = $(this);
        l.addClass("nl-disabled");
        symbolab_log("Registration", "ResetPasswordClicked");
        $.ajax({
            type: "POST",
            url: "/resetRequest",
            data: {
                email: $(".featherlight-content #reset_email").val()
            },
            success: function(m) {
                if (m.success) {
                    $(".nl-forgotPassword").hide();
                    $(".nl-forgotPasswordSuccess").show();
                    $(".nl-forgotPasswordSuccess .nl-bold").text(m.email)
                } else {
                    $(".nl-forgotPassword .nl-error").text(m.alert);
                    $(".nl-forgotPassword .nl-error").show();
                    l.removeClass("nl-disabled")
                }
            },
            error: function() {
                l.removeClass("nl-disabled")
            }
        })
    });
    var b = {};
    parseQueryParameters(b);
    if (b.upgrade === "true" && !subscribed) {
        showSubscription(localStorage.getItem("registrationReason"))
    } else {
        if (b.login === "true" && !isUserLoggedIn()) {
            showSignIn("Parameter login = true");
            window.history.replaceState({}, document.title, "/")
        }
    }
});
var sy_subscType;

function paypalOnApprove(c, e) {
    c.type = sy_subscType;
    c.variation = sy_var;
    c.country = sy_cid;
    $(".featherlight-content .nl-signInContainer>div").addClass("nl-hidden");
    $(".featherlight-content .nl-processing").removeClass("nl-hidden");
    var b = $.Deferred();
    $.when(symbolab_log("Registration", "SubscribeCompleted-" + sy_subscType, registrationReason)).always(function() {
        b.resolve()
    });
    var d = $.Deferred();
    gtag("event", "purchase", {
        value: getAmount(),
        currency: "USD",
        items: sy_subscType,
        event_callback: function() {
            d.resolve()
        }
    });
    var a = $.Deferred();
    $.ajax({
        type: "POST",
        url: "/paypal/onApprove",
        beforeSend: authorizeAjaxWithSyToken,
        data: c,
        success: function(f) {
            if (f.alert === "success subscription") {
                $(".featherlight-content .nl-signInContainer>div").addClass("nl-hidden");
                $(".featherlight-content .nl-thankYouSubsc #subsRenewText").text(i18n("Subscription renews " + sy_subscType));
                $(".featherlight-content .nl-thankYouSubsc").removeClass("nl-hidden");
                $.featherlight.defaults.afterClose = function() {
                    a.resolve()
                }
            } else {
                if (f.alert === "success payment") {
                    $(".featherlight-content .nl-signInContainer>div").addClass("nl-hidden");
                    $(".featherlight-content .nl-thankYou").removeClass("nl-hidden");
                    $.featherlight.defaults.afterClose = function() {
                        a.resolve()
                    }
                } else {
                    $(".featherlight-content .nl-signInContainer>div").addClass("nl-hidden");
                    $(".featherlight-content .nl-failed").removeClass("nl-hidden");
                    a.reject()
                }
            }
        },
        error: function(h, f, g) {
            console.log()
        }
    });
    $.whenAll(b, a, d).done(function() {
        location.reload()
    });
    return true
}

function getAmount() {
    if (sy_subscType === "special") {
        return 12.99
    } else {
        if (sy_subscType === "weekly") {
            return 1.99
        } else {
            if (sy_subscType === "monthly") {
                return 6.99
            } else {
                if (sy_subscType === "annually") {
                    return 29.99
                } else {
                    return 0
                }
            }
        }
    }
}

function paypalOnCancel(a) {
    symbolab_log("Registration", "PayPalCancel-" + sy_subscType, registrationReason)
}

function paypalOnError(a) {
    symbolab_log("Registration", "PayPalError-" + sy_subscType, registrationReason)
}

function getSubscription() {
    var a = "";
    $.ajax({
        type: "GET",
        url: "/paypal/getSubscription",
        async: false,
        data: {
            type: sy_subscType,
            variation: sy_var,
            country: sy_cid
        },
        beforeSend: authorizeAjaxWithSyToken,
        success: function(b) {
            a = b
        }
    });
    return a
}

function getGroupOrder(b) {
    var a = "";
    $.ajax({
        type: "GET",
        url: "/paypal/getGroupOrder",
        async: false,
        data: {
            groupId: b,
            type: sy_subscType,
            promo: $(".featherlight-content #promoText").val()
        },
        beforeSend: authorizeAjaxWithSyToken,
        success: function(c) {
            a = c
        }
    });
    return a
}

// function renderPaypalButtons() {
//     loadScript("https://www.paypal.com/sdk/js?client-id=AZqMhoiURMT7qtC-gKxZorl3AjLOxAqz04Y03kRFzSBnrWL5W5FEucdVk0EHc6XSZ1DD3lV1O6Ei4T7Q&vault=true").done(function() {
//         var a = {
//             style: {
//                 shape: "pill",
//                 color: "gold"
//             },
//             createOrder: function(d, e) {
//                 symbolab_log("Registration", "SubscribeClicked-" + sy_subscType, registrationReason);
//                 var c = getSubscription();
//                 return e.order.create(c)
//             },
//             onApprove: paypalOnApprove,
//             onCancel: paypalOnCancel,
//             onError: paypalOnError
//         };
//         paypal.Buttons(a).render(".featherlight-content .nl-subscForm #express-paypal-button-oneTime");
//         var b = {
//             style: {
//                 layout: "horizontal",
//                 shape: "pill",
//                 tagline: false
//             },
//             createSubscription: function(d, f) {
//                 symbolab_log("Registration", "SubscribeClicked-" + sy_subscType, registrationReason);
//                 var c = getSubscription();
//                 if (c.alert) {
//                     alertify.confirm(c.alert, function() {
//                         location.reload()
//                     }, function() {
//                         location.reload()
//                     });
//                     return null
//                 }
//                 var e = f.subscription.create(c);
//                 e.then(function(g) {
//                     $.ajax({
//                         type: "POST",
//                         url: "/paypal/onSubscriptionCreate",
//                         data: {
//                             profile_id: g,
//                             variation: sy_var,
//                             country: sy_cid
//                         },
//                         beforeSend: authorizeAjaxWithSyToken
//                     })
//                 });
//                 return e
//             },
//             onApprove: paypalOnApprove,
//             onCancel: paypalOnCancel,
//             onError: paypalOnError
//         };
//         paypal.Buttons(b).render(".featherlight-content .nl-subscForm #express-paypal-button-subsc")
//     })
// }

function setSelectedSubscriptionOption(b) {
    $(".featherlight-content .subscribe-button").addClass("nl-disabled");
    var a = b.data("button");
    sy_subscType = b.attr("id");
    $(".featherlight-content #" + a).removeClass("nl-disabled");
    $(b.parent().find("input")).prop("checked", true)
}

function createMatrixLatex(e, b) {
    var d = "\\begin{pmatrix}";
    for (var c = 0; c < e; c++) {
        for (var a = 0; a < b - 1; a++) {
            d += "&"
        }
        if (c < e - 1) {
            d += "\\\\"
        }
    }
    d += "\\end{pmatrix}";
    return d
}

function createCustomMatrix(b) {
    b.empty();
    b.append("<div class='title'>" + i18n("matrix-select-size") + " <span class='customMatrixDimensions'></span></div>");
    b.append("<span class='closeCustomMatrix'><div>" + i18n("matrix-close") + "</div></span>");
    var e = 10;
    var a = "<div class='matrixTable' style='padding-right: 0px !important; '><table>";
    for (var d = 0; d < e; d++) {
        a += "<tr>";
        for (var c = 0; c < e; c++) {
            a += "<td class='customMatrixTd'/>"
        }
        a += "</tr>"
    }
    a += "</table></div>";
    b.append(a);
    b.show();
    var f = this;
    $(".customMatrixTd").hover(function() {
        $(".customMatrixTd").removeClass("on");
        var h = $(this).parent().children().index($(this)) + 1;
        var m = $(this).parent().parent().children().index($(this).parent()) + 1;
        for (var k = 0; k < m; k++) {
            var l = $(this).parent().parent().children().eq(k);
            for (var g = 0; g < h; g++) {
                l.children().eq(g).addClass("on")
            }
        }
        $(".customMatrixDimensions").text(m + "x" + h)
    });
    $(".customMatrixTd").click(function() {
        var g = $(this).parent().children().index($(this)) + 1;
        var j = $(this).parent().parent().children().index($(this).parent()) + 1;
        var h = createMatrixLatex(j, g);
        b.hide();
        if (typeof SYPAD != "undefined") {
            SYPAD.inputBox().mathquill("write", h, j * g);
            SYPAD.inputBox().focus()
        } else {
            $(".mathquill-editable").mathquill("write", h, j * g);
            $(".mathquill-editable").focus()
        }
        return false
    });
    b.find(".closeCustomMatrix").click(function() {
        b.hide();
        return false
    })
}
jQuery.fn.selectText = function() {
    var d = document;
    var b = this[0];
    var a;
    if (d.body.createTextRange) {
        a = document.body.createTextRange();
        a.moveToElementText(b);
        a.select()
    } else {
        if (window.getSelection) {
            var c = window.getSelection();
            a = document.createRange();
            a.selectNodeContents(b);
            c.removeAllRanges();
            c.addRange(a)
        }
    }
};

function pageExpired(b, a) {}

function browser() {
    var c = navigator.appName,
        b = navigator.userAgent,
        a;
    var d = b.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
    if (d && (a = b.match(/version\/([\.\d]+)/i)) != null) {
        d[2] = a[1]
    }
    d = d ? [d[1], d[2]] : [c, navigator.appVersion, "-?"];
    return d
}
var invertStyleContents = "<style type='text/css' id='invert-style'>@media screen {@-moz-document url-prefix('') { 	body { 		background-color: black!important; 	} } html { 	-webkit-filter: invert(100%); 	-moz-filter: invert(100%); 	-o-filter: invert(100%); 	-ms-filter: invert(100%); 	filter: invert(100%); } .msftBadge, .nl-facebook, .nl-microsoft, .nl-joinEmail, .nl-signInButton, .nl-createEmailAccount, #ShareButtons, #at-expanded-menu-host, #at20mc, #LikeButtons, #itunesLink, #androidLink, .googleAdsenseMiddle, #googleAdSenseHomepage, .googleAdsense, .googleLeftSkyScrapper, .nl-socialContainer, .practiceAd, .practiceAd2, svg.stock-avatar, img.avatar-image, .stock-list svg, .g_id_signin { 	-webkit-filter: invert(100%); 	-moz-filter: invert(100%); 	-o-filter: invert(100%); 	-ms-filter: invert(100%); 	filter: invert(100%); } }</style>";

function getProductByUrl() {
    if (window.location.href.indexOf("/solver") >= 0) {
        return "Solutions"
    } else {
        if (window.location.href.indexOf("/practice") >= 0) {
            return "Practice"
        } else {
            if (window.location.href.indexOf("/notebook") >= 0) {
                return "Notebook"
            } else {
                if (window.location.href.indexOf("/graphing-calculator") >= 0) {
                    return "GraphingCalculator"
                } else {
                    return "Action"
                }
            }
        }
    }
}

function liveToggleInvert(a) {
    if (a) {
        if ($("#invert-style").size() == 0) {
            $("head").append($(invertStyleContents))
        }
        $(".nl-lightsOutSwitch").attr("title", i18n("js.Lights on"))
    } else {
        $("#invert-style").remove();
        $(".nl-lightsOutSwitch").attr("title", i18n("js.Lights out"))
    }
}

function ensureCorrectLightsOut() {
    var a = getInverseCookieValue();
    if (a === "true") {
        liveToggleInvert(true)
    } else {
        liveToggleInvert(false)
    }
}

function lightsOut() {
    var a = getInverseCookieValue();
    if (a === "true") {
        createInvertCookie("false");
        liveToggleInvert(false);
        symbolab_log(getProductByUrl(), "LightsOn", null)
    } else {
        createInvertCookie("true");
        liveToggleInvert(true);
        symbolab_log(getProductByUrl(), "LightsOut", null)
    }
}

function resetUserData() {
    var a = getTerminalSessionStringCookieValue();
    if (!a || a.indexOf("Start") >= 0) {
        a = "End Session"
    } else {
        a = "Start Session"
    }
    createTerminalSessionStringCookie(a);
    $("#resetTop").text(a);
    $.whenAll($.ajax({
        type: "POST",
        url: "/api/user/clearPractice",
        beforeSend: authorizeAjaxWithSyToken
    }), $.ajax({
        type: "POST",
        url: "/api/notebook/clearNotes",
        beforeSend: authorizeAjaxWithSyToken
    })).then(function() {
        window.location.href = "/"
    })
}

function microsoftSignIn(b, c, e) {
    if (!registrationReason) {
        registrationReason = "TopMenu\tSolver"
    }
    b = $(b);
    b.addClass("nl-disabled");
    var g = "?redirect=" + c;
    var f = !e ? "&remember=" + $(".featherlight-content #rememberMe").prop("checked") : "";
    var a = "&registrationReason=" + registrationReason.replace("\t", "%09");
    var d = function() {
        $.when(symbolab_log("Registration", "SignInAttempt-Microsoft", registrationReason)).always(function() {
            window.location = "/microsoftAuth" + g + f + a
        })
    };
    prepareGeometryForReload().then(function(h) {
        g = g + encodeURIComponent("#" + h);
        d()
    }, function() {
        d()
    })
}

function facebookSignIn(b, c, e) {
    if (!registrationReason) {
        registrationReason = "TopMenu\tSolver"
    }
    b = $(b);
    b.addClass("nl-disabled");
    var g = "?redirect=" + c;
    var f = !e ? "&remember=" + $(".featherlight-content #rememberMe").prop("checked") : "";
    var a = "&registrationReason=" + registrationReason.replace("\t", "%09");
    var d = function() {
        $.when(symbolab_log("Registration", "SignInAttempt-Facebook", registrationReason)).always(function() {
            window.location = "/facebookAuth" + g + f + a
        })
    };
    prepareGeometryForReload().then(function(h) {
        g = g + encodeURIComponent("#" + h);
        d()
    }, function() {
        d()
    })
}

function handleGoogleToken(a) {
    var d = requestUrl;
    var c = !googleIsSignUp ? $(".featherlight-content #rememberMe").prop("checked") : false;
    var b = function() {
        window.location = d
    };
    $.ajax({
        type: "POST",
        url: "/googleMobileAuth",
        beforeSend: authorizeAjaxWithSyToken,
        data: {
            idRequestToken: a.credential,
            registrationReason: registrationReason,
            remember: c,
            redirect: requestUrl
        }
    }).done(function(e) {
        if (e.success || e.jwt) {
            prepareGeometryForReload().then(function(g) {
                d = d + encodeURIComponent("#" + g);
                b()
            }, function() {
                b()
            })
        } else {
            var f = $("<p />", {
                text: e.alert,
                "class": "alert alert-error"
            });
            $("#loginOptionsPanel .alert.alert-error").remove();
            $("#loginOptionsPanel").append(f)
        }
    })
}

function logGoogleMomentNotification(a) {
    console.log(a)
}(function(a) {
    var b = [].slice;
    a.whenAll = function(k) {
        var l = (arguments.length == 1 && a.isArray(k)) ? k : b.call(arguments),
            d = l.length,
            e = d,
            o = a.Deferred(),
            f = 0,
            h = 0,
            g = Array(d),
            c = Array(d),
            m = Array(d),
            n;

        function j(q, r, p) {
            return function() {
                !(p === l) && h++;
                o.notifyWith(r[q] = this, p[q] = b.call(arguments));
                if (!(--e)) {
                    o[(!h ? "resolve" : "reject") + "With"](r, p)
                }
            }
        }
        for (; f < d; f++) {
            if ((n = l[f]) && a.isFunction(n.promise)) {
                n.promise().done(j(f, m, l)).fail(j(f, g, c))
            } else {
                o.notifyWith(this, n);
                --e
            }
        }
        if (!e) {
            o.resolveWith(m, l)
        }
        return o.promise()
    }
})(jQuery);

function createCookie(d, f, g, b) {
    var a;
    if (g) {
        var c = new Date();
        c.setTime(c.getTime() + (g * 24 * 60 * 60 * 1000));
        a = "; expires=" + c.toGMTString()
    } else {
        a = ""
    }
    var e = "";
    if (!b) {
        if (window.location.href.match(/symbolab\.com/)) {
            e = ";domain=.symbolab.com"
        } else {
            if (window.location.href.match(/scibug\.com/)) {
                e = ";domain=.scibug.com"
            }
        }
    }
    document.cookie = encodeURIComponent(d) + "=" + encodeURIComponent(f) + a + "; path=/" + e
}

function readCookieLegacyFallback(a, b) {
    var c = readCookie(a);
    if (c == null || c === "") {
        return readCookie(b)
    }
    return c
}

function readCookie(b) {
    var e = encodeURIComponent(b) + "=";
    var a = document.cookie.split(";");
    for (var d = 0; d < a.length; d++) {
        var f = a[d];
        while (f.charAt(0) === " ") {
            f = f.substring(1, f.length)
        }
        if (f.indexOf(e) === 0) {
            return decodeURIComponent(f.substring(e.length, f.length))
        }
    }
    return null
}

function eraseCookie(a) {
    createCookie(a, "", -1)
}

function eraseLegacyCookie(a) {
    createCookie(a, "", -1, true)
}

function isUserLoggedIn() {
    if (readCookieLegacyFallback("sy2.token", "sy.token")) {
        return true
    }
    return false
}

function createPubTokenCookie(a) {
    createCookie("sy2.pub.token", a, 1)
}

function eraseTerminalSessionStringCookie() {
    eraseCookie("sy2.terminalSessionString");
    eraseLegacyCookie("sy.terminalSessionString")
}

function createTerminalSessionStringCookie(a) {
    eraseTerminalSessionStringCookie();
    createCookie("sy2.terminalSessionString", a)
}

function createTerminalSessionPassCookie(a) {
    createCookie("sy2.terminal.pass", a)
}

function getInverseCookieValue() {
    return readCookieLegacyFallback("sy2.invert", "invert")
}

function getTerminalSessionStringCookieValue() {
    return readCookieLegacyFallback("sy2.terminalSessionString", "sy.terminalSessionString")
}

function createInvertCookie(a) {
    createCookie("sy2.invert", a)
}

function authorizeAjaxWithSyToken(a) {
    a.setRequestHeader("Authorization", "Bearer " + readCookieLegacyFallback("sy2.token", "sy.token"))
}

function authorizeAjaxWithSyPubToken(a) {
    a.setRequestHeader("Authorization", "Bearer " + readCookieLegacyFallback("sy2.pub.token", "sy.pub.token"))
}

// function ajaxImage(a, c, b) {
//     return new Promise(function(e, d) {
//         var f = new XMLHttpRequest();
//         f.onreadystatechange = function() {
//             if (this.readyState === 4) {
//                 if (this.status === 200) {
//                     var h = window.URL || window.webkitURL;
//                     var j = h.createObjectURL(this.response);
//                     var g = this.response;
//                     c.on("load", function() {
//                         e(g);
//                         c.off("load")
//                     });
//                     c.attr("src", j)
//                 } else {
//                     if (b !== undefined) {
//                         b.hide()
//                     }
//                     d(this.error)
//                 }
//             }
//         };
//         f.open("GET", a);
//         authorizeAjaxWithSyPubToken(f);
//         f.responseType = "blob";
//         f.setRequestHeader("x-requested-with", "XMLHttpRequest");
//         f.send()
//     })
// }

function groupSelectSelected(g) {
    var c = g[0];
    var f, b, a, e, d;
    e = c.parentNode.parentNode.getElementsByTagName("select")[0];
    d = c.parentNode.previousSibling;
    for (b = 0; b < e.length; b++) {
        if (e.options[b].innerHTML == c.innerHTML) {
            e.selectedIndex = b;
            d.innerHTML = c.innerHTML;
            f = c.parentNode.getElementsByClassName("same-as-selected");
            for (a = 0; a < f.length; a++) {
                f[a].removeAttribute("class")
            }
            c.setAttribute("class", "same-as-selected");
            break
        }
    }
}

function clearGroupSelects(a) {
    a.find(".select-selected").remove();
    a.find(".select-items").remove()
}

function openSelect(b) {
    var a = b.find("div.select-selected")[0];
    a.nextSibling.classList.toggle("select-hide");
    a.classList.toggle("select-arrow-active")
}

function setupGroupSelect(g, m, k) {
    var r = this;
    var q, h, f, l, p, o, n;
    q = document.getElementsByClassName("group-select");
    for (h = 0; h < q.length; h++) {
        if (k !== undefined) {
            if ($(q[h]).attr("id") !== k) {
                continue
            }
        }
        l = q[h].getElementsByTagName("select")[0];
        p = document.createElement("DIV");
        p.setAttribute("class", "select-selected");
        var e = l.options[l.selectedIndex];
        if (e !== undefined) {
            p.innerHTML = e.innerHTML
        }
        q[h].appendChild(p);
        o = document.createElement("DIV");
        o.setAttribute("class", "select-items select-hide");
        f = 0;
        if (g) {
            f = 1
        }
        for (; f < l.length; f++) {
            n = document.createElement("DIV");
            n.innerHTML = l.options[f].innerHTML;
            n.setAttribute("data-group", l.options[f].value);
            if (l.options[f].disabled) {
                $(n).addClass("disabled");
                n.addEventListener("click", function(a) {
                    a.stopPropagation()
                })
            } else {
                n.addEventListener("click", function(b) {
                    groupSelectSelected($(this));
                    var a = this.parentNode.previousSibling;
                    a.click();
                    m()
                })
            }
            o.appendChild(n)
        }
        q[h].appendChild(o);
        p.addEventListener("click", function(a) {
            a.stopPropagation();
            d(this);
            this.nextSibling.classList.toggle("select-hide");
            this.classList.toggle("select-arrow-active")
        })
    }

    function d(j) {
        var a, s, c, b = [];
        a = document.getElementsByClassName("select-items");
        s = document.getElementsByClassName("select-selected");
        for (c = 0; c < s.length; c++) {
            if (j == s[c]) {
                b.push(c)
            } else {
                s[c].classList.remove("select-arrow-active")
            }
        }
        for (c = 0; c < a.length; c++) {
            if (b.indexOf(c)) {
                a[c].classList.add("select-hide")
            }
        }
    }
    document.addEventListener("click", d)
}

function repeat(d, c) {
    var b = "";
    for (var a = 1; a <= c; a++) {
        b += d
    }
    return b
}
var shareHandler = function(a, b) {
    symbolab_log("Practice", "Share-Clicked");
    $(".alertify").remove()
};

function showShare() {
    addthis.init();
    if (addthis.layers.refresh) {
        addthis.layers.refresh()
    }
    addthis.configure({
        data_track_clickback: false
    });
    addthis.removeEventListener("addthis.menu.share", shareHandler, true);
    addthis.addEventListener("addthis.menu.share", shareHandler, true);
    symbolab_log("Practice", "Share-Show");
    var b = window.location.origin + window.location.pathname;
    var a = '<div class="addthis_inline_share_toolbox_jcxz" data-title="' + document.title + '" data-url="' + b + '"></div>';
    alertify.okBtn(i18n("Cancel")).alert(a)
}

function shareClick() {
    if (typeof(addthis) == "undefined") {
        var b = document.getElementsByTagName("head")[0];
        var a = document.createElement("script");
        a.type = "text/javascript";
        a.onload = function() {
            showShare()
        };
        a.src = "//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-528a03623a3e3d11";
        b.appendChild(a)
    } else {
        showShare()
    }
}

function escapeHtml(a) {
    return a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
}

function resumeSubscription(a) {
    symbolab_log("Registration", "ShowResume", a);
    alertify.okBtn(i18n("js.Resume")).cancelBtn(i18n("js.cancel")).confirm(i18n("js.resume_question", sy_pSub), function() {
        $(".loading-animation").show();
        $.ajax({
            type: "POST",
            url: "/api/user/activateSubscription",
            data: {
                reason: "user request"
            },
            beforeSend: authorizeAjaxWithSyToken,
            success: function(b) {
                symbolab_log("Registration", "Resumed", a);
                alertify.okBtn("OK").alert(b.success ? i18n("js.Subscription Resumed") : i18n("js.Operation Failed"), function() {
                    location.reload()
                }, function() {
                    location.reload()
                })
            }
        })
    }, function() {
        $("#paypalActivate").removeClass("nl-disabled");
        $("#paypalUnsubscribeNew").removeClass("nl-disabled")
    })
}

function setDefaultSubscription() {
    setSelectedSubscriptionOption($(".subscribeOption[id=annually]"))
}(function() {
    var a = 500;
    var e = function(g) {
        if (!g) {
            return
        }
        var f = function() {
            if (g && g.parentNode) {
                g.parentNode.removeChild(g)
            }
        };
        g.classList.remove("show");
        g.classList.add("hide");
        g.addEventListener("transitionend", f);
        setTimeout(f, a)
    };

    function b() {
        var f = {
            parent: document.body,
            version: "1.0.11",
            defaultOkLabel: "OK",
            okLabel: "OK",
            defaultCancelLabel: "Cancel",
            cancelLabel: "Cancel",
            defaultMaxLogItems: 2,
            maxLogItems: 2,
            promptValue: "",
            promptPlaceholder: "",
            closeLogOnClick: false,
            closeLogOnClickDefault: false,
            delay: 5000,
            defaultDelay: 5000,
            logContainerClass: "alertify-logs",
            logContainerDefaultClass: "alertify-logs",
            dialogs: {
                buttons: {
                    holder: "<nav>{{buttons}}</nav>",
                    ok: "<button class='ok' tabindex='1'>{{ok}}</button>",
                    cancel: "<button class='cancel' tabindex='2'>{{cancel}}</button>"
                },
                input: "<input type='text'>",
                message: "<p class='msg'>{{message}}</p>",
                log: "<div class='{{class}}'>{{message}}</div>"
            },
            defaultDialogs: {
                buttons: {
                    holder: "<nav>{{buttons}}</nav>",
                    ok: "<button class='ok' tabindex='1'>{{ok}}</button>",
                    cancel: "<button class='cancel' tabindex='2'>{{cancel}}</button>"
                },
                input: "<input type='text'>",
                message: "<p class='msg'>{{message}}</p>",
                log: "<div class='{{class}}'>{{message}}</div>"
            },
            build: function(j) {
                var g = this.dialogs.buttons.ok;
                var h = "<div class='dialog'><div>" + this.dialogs.message.replace("{{message}}", j.message);
                if (j.type === "confirm" || j.type === "prompt") {
                    g = this.dialogs.buttons.cancel + this.dialogs.buttons.ok
                }
                if (j.type === "prompt") {
                    h += this.dialogs.input
                }
                h = (h + this.dialogs.buttons.holder + "</div></div>").replace("{{buttons}}", g).replace("{{ok}}", this.okLabel).replace("{{cancel}}", this.cancelLabel);
                return h
            },
            setCloseLogOnClick: function(g) {
                this.closeLogOnClick = !!g
            },
            close: function(g, h) {
                if (this.closeLogOnClick) {
                    g.addEventListener("click", function() {
                        e(g)
                    })
                }
                h = h && !isNaN(+h) ? +h : this.delay;
                if (h < 0) {
                    e(g)
                } else {
                    if (h > 0) {
                        setTimeout(function() {
                            e(g)
                        }, h)
                    }
                }
            },
            dialog: function(j, h, g, k) {
                return this.setup({
                    type: h,
                    message: j,
                    onOkay: g,
                    onCancel: k
                })
            },
            log: function(l, h, k) {
                var j = document.querySelectorAll(".alertify-logs > div");
                if (j) {
                    var n = j.length - this.maxLogItems;
                    if (n >= 0) {
                        for (var g = 0, m = n + 1; g < m; g++) {
                            this.close(j[g], -1)
                        }
                    }
                }
                this.notify(l, h, k)
            },
            setLogPosition: function(g) {
                this.logContainerClass = "alertify-logs " + g
            },
            setupLogContainer: function() {
                var h = document.querySelector(".alertify-logs");
                var g = this.logContainerClass;
                if (!h) {
                    h = document.createElement("div");
                    h.className = g;
                    this.parent.appendChild(h)
                }
                if (h.className !== g) {
                    h.className = g
                }
                return h
            },
            notify: function(k, h, j) {
                var l = this.setupLogContainer();
                var g = document.createElement("div");
                g.className = (h || "default");
                if (f.logTemplateMethod) {
                    g.innerHTML = f.logTemplateMethod(k)
                } else {
                    g.innerHTML = k
                }
                if ("function" === typeof j) {
                    g.addEventListener("click", j)
                }
                l.appendChild(g);
                setTimeout(function() {
                    g.className += " show"
                }, 10);
                this.close(g, this.delay)
            },
            setup: function(m) {
                var l = document.createElement("div");
                l.className = "alertify hide";
                l.innerHTML = this.build(m);
                var k = l.querySelector(".ok");
                var n = l.querySelector(".cancel");
                var h = l.querySelector("input");
                var j = l.querySelector("label");
                if (h) {
                    if (typeof this.promptPlaceholder === "string") {
                        if (j) {
                            j.textContent = this.promptPlaceholder
                        } else {
                            h.placeholder = this.promptPlaceholder
                        }
                    }
                    if (typeof this.promptValue === "string") {
                        h.value = this.promptValue
                    }
                    if (typeof this._inputType === "string") {
                        h.type = this._inputType
                    }
                }

                function g(p) {
                    if ("function" !== typeof p) {
                        p = function() {}
                    }
                    if (k) {
                        k.addEventListener("click", function(q) {
                            if (m.onOkay && "function" === typeof m.onOkay) {
                                if (h) {
                                    m.onOkay(h.value, q)
                                } else {
                                    m.onOkay(q)
                                }
                            }
                            if (h) {
                                p({
                                    buttonClicked: "ok",
                                    inputValue: h.value,
                                    event: q
                                })
                            } else {
                                p({
                                    buttonClicked: "ok",
                                    event: q
                                })
                            }
                            e(l)
                        })
                    }
                    if (n) {
                        n.addEventListener("click", function(q) {
                            if (m.onCancel && "function" === typeof m.onCancel) {
                                m.onCancel(q)
                            }
                            p({
                                buttonClicked: "cancel",
                                event: q
                            });
                            e(l)
                        })
                    }
                    if (h) {
                        h.addEventListener("keyup", function(q) {
                            if (q.which === 13) {
                                k.click()
                            }
                        })
                    }
                }
                var o;
                if (typeof Promise === "function") {
                    o = new Promise(g)
                } else {
                    g()
                }
                this.parent.appendChild(l);
                setTimeout(function() {
                    l.classList.remove("hide");
                    if (h && m.type && m.type === "prompt") {
                        h.select();
                        h.focus()
                    } else {
                        if (k) {
                            k.focus()
                        }
                    }
                }, 100);
                return o
            },
            okBtn: function(g) {
                this.okLabel = g;
                return this
            },
            inputType: function(g) {
                this._inputType = g;
                return this
            },
            setDelay: function(g) {
                g = g || 0;
                this.delay = isNaN(g) ? this.defaultDelay : parseInt(g, 10);
                return this
            },
            cancelBtn: function(g) {
                this.cancelLabel = g;
                return this
            },
            setMaxLogItems: function(g) {
                this.maxLogItems = parseInt(g || this.defaultMaxLogItems)
            },
            theme: function(g) {
                switch (g.toLowerCase()) {
                    case "bootstrap":
                        this.dialogs.buttons.ok = "<button class='ok btn btn-primary' tabindex='1'>{{ok}}</button>";
                        this.dialogs.buttons.cancel = "<button class='cancel btn btn-default' tabindex='2'>{{cancel}}</button>";
                        this.dialogs.input = "<input type='text' class='form-control'>";
                        break;
                    case "purecss":
                        this.dialogs.buttons.ok = "<button class='ok pure-button' tabindex='1'>{{ok}}</button>";
                        this.dialogs.buttons.cancel = "<button class='cancel pure-button' tabindex='2'>{{cancel}}</button>";
                        break;
                    case "mdl":
                    case "material-design-light":
                        this.dialogs.buttons.ok = "<button class='ok mdl-button mdl-js-button mdl-js-ripple-effect'  tabindex='1'>{{ok}}</button>";
                        this.dialogs.buttons.cancel = "<button class='cancel mdl-button mdl-js-button mdl-js-ripple-effect' tabindex='2'>{{cancel}}</button>";
                        this.dialogs.input = "<div class='mdl-textfield mdl-js-textfield'><input class='mdl-textfield__input'><label class='md-textfield__label'></label></div>";
                        break;
                    case "angular-material":
                        this.dialogs.buttons.ok = "<button class='ok md-primary md-button' tabindex='1'>{{ok}}</button>";
                        this.dialogs.buttons.cancel = "<button class='cancel md-button' tabindex='2'>{{cancel}}</button>";
                        this.dialogs.input = "<div layout='column'><md-input-container md-no-float><input type='text'></md-input-container></div>";
                        break;
                    case "default":
                    default:
                        this.dialogs.buttons.ok = this.defaultDialogs.buttons.ok;
                        this.dialogs.buttons.cancel = this.defaultDialogs.buttons.cancel;
                        this.dialogs.input = this.defaultDialogs.input;
                        break
                }
            },
            reset: function() {
                this.parent = document.body;
                this.theme("default");
                this.okBtn(this.defaultOkLabel);
                this.cancelBtn(this.defaultCancelLabel);
                this.setMaxLogItems();
                this.promptValue = "";
                this.promptPlaceholder = "";
                this.delay = this.defaultDelay;
                this.setCloseLogOnClick(this.closeLogOnClickDefault);
                this.setLogPosition("bottom left");
                this.logTemplateMethod = null
            },
            injectCSS: function() {
                if (!document.querySelector("#alertifyCSS")) {
                    var h = document.getElementsByTagName("head")[0];
                    var g = document.createElement("style");
                    g.type = "text/css";
                    g.id = "alertifyCSS";
                    g.innerHTML = "/* style.css */";
                    h.insertBefore(g, h.firstChild)
                }
            },
            removeCSS: function() {
                var g = document.querySelector("#alertifyCSS");
                if (g && g.parentNode) {
                    g.parentNode.removeChild(g)
                }
            }
        };
        f.injectCSS();
        return {
            _$$alertify: f,
            parent: function(g) {
                f.parent = g
            },
            reset: function() {
                f.reset();
                return this
            },
            alert: function(h, g, j) {
                return f.dialog(h, "alert", g, j) || this
            },
            confirm: function(h, g, j) {
                return f.dialog(h, "confirm", g, j) || this
            },
            prompt: function(h, g, j) {
                return f.dialog(h, "prompt", g, j) || this
            },
            log: function(h, g) {
                f.log(h, "default", g);
                return this
            },
            theme: function(g) {
                f.theme(g);
                return this
            },
            success: function(h, g) {
                f.log(h, "success", g);
                return this
            },
            error: function(h, g) {
                f.log(h, "error", g);
                return this
            },
            cancelBtn: function(g) {
                f.cancelBtn(g);
                return this
            },
            okBtn: function(g) {
                f.okBtn(g);
                return this
            },
            inputType: function(g) {
                f.inputType(g);
                return this
            },
            delay: function(g) {
                f.setDelay(g);
                return this
            },
            placeholder: function(g) {
                f.promptPlaceholder = g;
                return this
            },
            defaultValue: function(g) {
                f.promptValue = g;
                return this
            },
            maxLogItems: function(g) {
                f.setMaxLogItems(g);
                return this
            },
            closeLogOnClick: function(g) {
                f.setCloseLogOnClick(!!g);
                return this
            },
            logPosition: function(g) {
                f.setLogPosition(g || "");
                return this
            },
            setLogTemplate: function(g) {
                f.logTemplateMethod = g;
                return this
            },
            clearLogs: function() {
                f.setupLogContainer().innerHTML = "";
                return this
            },
            version: f.version
        }
    }
    if ("undefined" !== typeof module && !!module && !!module.exports) {
        module.exports = function() {
            return new b()
        };
        var d = new b();
        for (var c in d) {
            module.exports[c] = d[c]
        }
    } else {
        if (typeof define === "function" && define.amd) {
            define(function() {
                return new b()
            })
        } else {
            $(document).ready(function() {
                window.alertify = new b()
            })
        }
    }
}());